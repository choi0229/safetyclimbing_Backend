{"version":3,"file":"js/242.300819e2.js","mappings":"oOAoCA,SAASA,IACPC,OAAOC,SAASC,KAAO,iBACzB,CAEA,SAASC,IACPH,OAAOC,SAASC,KAAO,mBACzB,CAEA,SAASE,IACPJ,OAAOC,SAASC,KAAO,kBACzB,CAEA,SAASG,IACPL,OAAOC,SAASC,KAAO,sBACzB,CAEA,SAASI,IACPN,OAAOC,SAASC,KAAO,SACzB,C,+7CChDA,MAAMK,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O,grBC+EE,MAAMC,GAAQC,EAAAA,EAAAA,MACRC,GAASC,EAAAA,EAAAA,MACTC,GAAkBC,EAAAA,EAAAA,IAAIC,KAAKC,MAAMP,EAAMQ,MAAMC,YAC7CC,GAAWL,EAAAA,EAAAA,IAAI,IACfM,GAAaN,EAAAA,EAAAA,IAAI,IACjBO,GAAYP,EAAAA,EAAAA,KAAI,GAChBQ,GAAeR,EAAAA,EAAAA,IAAI,GAGnBS,EAAqBC,UAEzB,MAAMC,EAAcZ,EAAgBa,MAAMC,YAE1C,IAEE,MAAMC,QAAiBC,EAAAA,EAAMC,IAAI,eAAeL,KAGhDZ,EAAgBa,MAAQE,EAASG,IACnC,CAAE,MAAOC,GACPC,QAAQD,MAAM,mCAAoCA,EAAME,QAC1D,CAAE,QAEAb,EAAUK,OAAQ,CACpB,GAKIS,EAAcX,UAClB,MAAMC,EAAcZ,EAAgBa,MAAMC,YAC1C,IACE,MAAMC,QAAiBC,EAAAA,EAAMC,IAAI,iBAAiBL,KAClDN,EAASO,MAAQE,EAASG,KAC1BE,QAAQG,IAAIjB,EAASO,OAErBJ,EAAcI,MAAQP,EAASO,MAAMW,OACrCJ,QAAQG,IAAI,UAAWd,EAAcI,MAEvC,CAAE,MAAOM,GACPC,QAAQD,MAAM,2BAA4BA,EAC5C,GAKIM,EAAcd,UAClB,MAAMG,EAAcd,EAAgBa,MAAMC,YAC1C,IAAIY,EAAeC,aAAaC,QAAQ,gBACxC,UACQZ,EAAAA,EAAMa,KAAK,oBAAqB,CACpCH,aAAcA,EACdZ,YAAaA,EACbgB,YAAavB,EAAWM,QAE1BN,EAAWM,MAAQ,SAGbS,IAGNb,EAAcI,MAAQP,EAASO,MAAMW,MAEvC,CAAE,MAAOL,GACPC,QAAQD,MAAM,yBAA0BA,EAC1C,IAIFY,EAAAA,EAAAA,KAAU,KACRrB,IACAY,GAAa,IAIf,MAAMU,EAASA,KACblC,EAAOmC,KAAK,CAAEC,KAAM,mBAAoB,E,07DC7J5C,MAAMvC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O","sources":["webpack://frontend/./src/components/MobileFooterView5.vue","webpack://frontend/./src/components/MobileFooterView5.vue?7d77","webpack://frontend/./src/views/CommunityDetailView.vue","webpack://frontend/./src/views/CommunityDetailView.vue?72e8"],"sourcesContent":["<template>\r\n  <div id=\"mobileFooter\">\r\n    <!-- 코스 아이콘 -->\r\n    <div class=\"footer-category\" @click=\"gotoMobileCourse()\" style=\"margin-right: 10px;\">\r\n      <img src=\"/images/코스2.png\" alt=\"코스 아이콘\" style=\"filter: grayscale(100%) brightness(0%);\">\r\n      <p style=\"\">코스</p>\r\n    </div>\r\n\r\n    <!-- 등산 아이콘 -->\r\n    <div class=\"footer-category\" @click=\"gotoMobileRecoding()\" style=\"margin-right: 10px;\">\r\n      <img src=\"/images/HikingIcon.png\" alt=\"등산 아이콘\" style=\"filter: grayscale(100%) brightness(0%);\">\r\n      <p style=\"\">등산</p>\r\n    </div>\r\n\r\n    <!-- 홈 아이콘 -->\r\n    <div class=\"footer-category home\" @click=\"gotoHome()\">\r\n      <img src=\"/images/홈.png\" alt=\"홈 아이콘\" style=\"filter: grayscale(100%) brightness(0%);\">\r\n      <p style=\"\">홈</p>\r\n    </div>\r\n\r\n    <!-- 민원 신고 아이콘 -->\r\n    <div class=\"footer-category\" @click=\"gotoMobileComplaint()\" style=\"margin-left: 10px;\">\r\n      <img src=\"/images/위험신고.png\" alt=\"민원 신고 아이콘\" style=\"filter: grayscale(100%) brightness(0%);\">\r\n      <p style=\"\">민원신고</p>\r\n    </div>\r\n\r\n    <!-- 커뮤니티 아이콘 -->\r\n    <div class=\"footer-category\" @click=\"gotoMobileCommunity()\" style=\"margin-left: 10px;\">\r\n      <img src=\"/images/커뮤니티.gif\" alt=\"커뮤니티 아이콘\" style=\"filter: hue-rotate(280deg); width: 45px; height: 45px;\">\r\n      <div style=\"margin: 0;  font-size: 13px; line-height: 1.2; text-align: center; font-family: 'TheJamsil4Bold'; font-weight: 500;\">커뮤니티</div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\n\r\nfunction gotoHome() {\r\n  window.location.href = '/mobilemainview';\r\n}\r\n\r\nfunction gotoMobileCourse() {\r\n  window.location.href = '/mobilecourseview';\r\n}\r\n\r\nfunction gotoMobileCommunity() {\r\n  window.location.href = '/mobilecommunity';\r\n}\r\n\r\nfunction gotoMobileComplaint() {\r\n  window.location.href = '/complaintListMobile';\r\n}\r\n\r\nfunction gotoMobileRecoding() {\r\n  window.location.href = '/record';\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n@font-face {\r\n  font-family: 'TheJamsil5Bold';\r\n  src: url('https://fastly.jsdelivr.net/gh/projectnoonnu/noonfonts_2302_01@1.0/TheJamsil5Bold.woff2') format('woff2');\r\n  font-weight: 700;\r\n  font-style: normal;\r\n}\r\n\r\nh1,\r\nh2,\r\nh3,\r\ndiv,\r\n.btn-group .btn,\r\np {\r\n  /* 특정 요소에 폰트 적용 */\r\n  font-family: \"TheJamsil5Bold\", sans-serif !important;\r\n}\r\n\r\n#mobileFooter {\r\n  position: fixed;\r\n  height: 70px; /* 푸터 높이 */\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  background-color: #ffffff;\r\n  display: flex;\r\n  justify-content: space-between; /* 간격 균등 배치 */\r\n  align-items: center;\r\n  padding: 0 5px; /* 좌우 여백 */\r\n  box-shadow: 0 -2px 4px rgba(0, 0, 0, 0.1);\r\n  z-index: 1000;\r\n}\r\n\r\n.footer-category {\r\n  display: flex;\r\n  flex-direction: column; /* 아이콘과 텍스트 세로 배치 */\r\n  align-items: center; /* 수평 중앙 정렬 */\r\n  text-align: center;\r\n  font-family: 'TheJamsil4Bold';\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  flex: 1; /* 각 버튼의 동일한 크기 */\r\n}\r\n\r\n.footer-category img {\r\n  width: 30px; /* 아이콘 크기 증가 */\r\n  height: 30px;\r\n  margin-bottom: 5px; /* 아이콘과 텍스트 간 간격 */\r\n}\r\n\r\n.footer-category p {\r\n  margin: 0; /* 텍스트 간 여백 제거 */\r\n  font-size: 13px;\r\n  line-height: 1.2;\r\n  text-align: center;\r\n}\r\n\r\n</style>\r\n","import script from \"./MobileFooterView5.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./MobileFooterView5.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./MobileFooterView5.vue?vue&type=style&index=0&id=7aa484b0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-7aa484b0\"]])\n\nexport default __exports__","<template>\r\n    <div class=\"detail-container\">\r\n      <MobileHeaderView class=\"header\" />\r\n      <div style=\"text-align: left;\">\r\n        <button class=\"back-button ms-2 btn btn-success btn-sm mb-3 mt-3 ms-3 mx-2 custom-btn\" @click=\"goBack\">뒤로가기</button>\r\n      </div>\r\n  \r\n      <div class=\"detail-content\">\r\n        <div v-if=\"isLoading\" class=\"loading\">\r\n          <p>Loading...</p>\r\n        </div>\r\n        \r\n        <div v-else-if=\"communityDetail\" class=\"post-details\">\r\n          \r\n          <div class=\"post-meta\">\r\n            <div class=\"d-flex align-items-left mb-3\">\r\n                  <img\r\n                    src=\"/images/profile.png\"\r\n                    alt=\"프로필 사진\"\r\n                    class=\"profile-image me-2\"\r\n                  />\r\n            </div>\r\n            <span class=\"author mt-2\"> {{ communityDetail.userNickName }}</span><br />\r\n            <span class=\"date ms-3 mt-2\"> {{ communityDetail.communityRegDate }}</span><br />\r\n          </div>\r\n          \r\n  \r\n          <!-- 이미지 출력 -->\r\n          <div class=\"image-map-container mb-2\">\r\n            <img\r\n              v-if=\"communityDetail.communityUrl\"\r\n              :src=\"communityDetail.communityUrl\"\r\n              alt=\"게시글 이미지\"\r\n              class=\"img-fluid\"\r\n              style=\"width: 500px; height: 225px; object-fit: cover;\"\r\n            />\r\n          </div>\r\n          <p class=\"post-body\">{{ communityDetail.communityBody }}</p>\r\n  \r\n  \r\n          <div class=\"comments-section\" v-if=\"comments.length > 0\">\r\n    <div v-for=\"comment in comments\" :key=\"comment.commentId\" class=\"comment-item\">\r\n      <div class=\"comment-header\">\r\n        <img\r\n          src=\"/images/profile.png\"\r\n          alt=\"프로필 사진\"\r\n          class=\"profile-image me-2\"\r\n        />\r\n        <span class=\"author\">{{ communityDetail.userNickName }}</span>\r\n      </div>\r\n      <div class=\"underline\"></div> <!-- 닉네임 아래 밑줄 -->\r\n      <div class=\"comment-body-container\">\r\n        <p class=\"comment-body\">{{ comment.commentBody }}</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div v-else>\r\n    <p class=\"no-comments\">댓글이 없습니다.</p>\r\n  </div>\r\n  \r\n  \r\n          <!-- 댓글 입력 영역 (푸터 위 고정) -->\r\n      <div class=\"comment-input-container\">\r\n        <div class=\"comment-input\">\r\n          <input type=\"text\" v-model=\"newComment\" placeholder=\"댓글을 입력하세요...\" />\r\n          <button @click=\"postComment\" class=\"btn btn-success\">댓글 등록</button>\r\n        </div>\r\n      </div>\r\n        </div>\r\n        <div v-else>\r\n          <p>게시글을 불러올 수 없습니다.</p>\r\n        </div>\r\n      </div>\r\n  \r\n      <MobileFooterView5 class=\"footer\" />\r\n    </div>\r\n  </template>\r\n  \r\n  <script setup>\r\n  import MobileHeaderView from '@/components/MobileHeaderView.vue';\r\n  import MobileFooterView5 from \"@/components/MobileFooterView5.vue\";\r\n  import { ref, onMounted } from 'vue';\r\n  import axios from 'axios';\r\n  import { useRoute, useRouter } from 'vue-router';\r\n  \r\n  \r\n  \r\n  const route = useRoute();\r\n  const router = useRouter();\r\n  const communityDetail = ref(JSON.parse(route.query.community));\r\n  const comments = ref([]);\r\n  const newComment = ref(\"\");\r\n  const isLoading = ref(true);\r\n  const totalComments =ref(0);\r\n  \r\n  \r\n  const getCommunityDetail = async () => {\r\n  \r\n    const communityId = communityDetail.value.communityPk;\r\n  \r\n    try {\r\n      // 백엔드의 @GetMapping(\"/detail/{id}\")과 동일한 경로로 설정\r\n      const response = await axios.get(`/api/detail/${communityId}`);\r\n      \r\n      // 데이터를 성공적으로 가져오면 communityDetail에 할당하고 로딩을 종료합니다\r\n      communityDetail.value = response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching community detail:', error.message);\r\n    } finally {\r\n      // 로딩 상태는 항상 비활성화하여 UI 상태를 업데이트\r\n      isLoading.value = false;\r\n    }\r\n  };\r\n  \r\n  \r\n  // 댓글 가져오기\r\n  const getComments = async () => {\r\n    const communityId = communityDetail.value.communityPk;\r\n    try {\r\n      const response = await axios.get(`/api/comments/${communityId}`);\r\n      comments.value = response.data;\r\n      console.log(comments.value)\r\n      // 댓글 수를 업데이트\r\n      totalComments.value = comments.value.length;\r\n      console.log('총 댓글 수:', totalComments.value);\r\n  \r\n    } catch (error) {\r\n      console.error('Error fetching comments:', error);\r\n    }\r\n  };\r\n  \r\n  \r\n  // 댓글 추가하기\r\n  const postComment = async () => {\r\n    const communityPk = communityDetail.value.communityPk;\r\n    let userNickName = localStorage.getItem('userNickName');\r\n    try {\r\n      await axios.post('/api/comments/add', {\r\n        userNickName: userNickName,\r\n        communityPk: communityPk,\r\n        commentBody: newComment.value // 댓글 내용\r\n      });\r\n      newComment.value = \"\";\r\n  \r\n      // 댓글 추가 후, 바로 반영하기 위해 getComments() 호출\r\n      await getComments();\r\n  \r\n      // 댓글 수 업데이트\r\n      totalComments.value = comments.value.length; // 댓글 배열 길이로 총 댓글 수 업데이트\r\n  \r\n    } catch (error) {\r\n      console.error('Error posting comment:', error);\r\n    }\r\n  };\r\n  \r\n  \r\n  onMounted(() => {\r\n    getCommunityDetail();\r\n    getComments();\r\n  });\r\n  \r\n  // 뒤로가기 메소드 정의\r\n  const goBack = () => {\r\n    router.push({ name: 'mobilecommunity' }); // 'communityview'로 리디렉션\r\n  };\r\n  </script>\r\n  \r\n  \r\n  <style scoped>\r\n  .detail-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100vh;\r\n  }\r\n  \r\n  .detail-content {\r\n    flex: 1;\r\n    overflow-y: auto; /* 스크롤 가능하도록 설정 */\r\n    padding: 25px;\r\n    padding-top: 0%;\r\n    padding-bottom: 80px; /* 푸터 공간 */\r\n  }\r\n  \r\n  .loading {\r\n    text-align: center;\r\n    font-size: 18px;\r\n    color: #555;\r\n  }\r\n  \r\n  .post-details {\r\n    margin-bottom: 30px;\r\n  }\r\n  \r\n  .post-title {\r\n    font-size: 24px;\r\n    font-weight: bold;\r\n  }\r\n  \r\n  .post-meta {\r\n    display: flex;\r\n    color: #000000;\r\n  }\r\n  \r\n  .post-body {\r\n    font-size: 16px;\r\n    margin-top: 15px;\r\n    white-space: pre-line;\r\n    text-align: left;  /* 왼쪽 정렬 추가 */\r\n  }\r\n  \r\n  .button-group {\r\n    display: flex;\r\n    gap: 10px;\r\n    margin-top: 15px;\r\n  }\r\n  \r\n  .edit-button,\r\n  .delete-button {\r\n    padding: 5px 15px;\r\n    font-size: 14px;\r\n    cursor: pointer;\r\n    border: none;\r\n    color: white;\r\n    border-radius: 5px;\r\n  }\r\n  \r\n  .edit-button {\r\n    background-color: #4CAF50;\r\n  }\r\n  \r\n  .delete-button {\r\n    background-color: #f1a82b;\r\n  }\r\n  \r\n  .comments-title {\r\n    font-size: 20px;\r\n    font-weight: bold;\r\n    margin-top: 10px;\r\n  }\r\n  \r\n  .comments-section {\r\n    margin-top: 15px;\r\n  }\r\n  \r\n  .comment-item {\r\n    margin-bottom: 15px;\r\n    padding: 10px;\r\n    background-color: #f9f9f9;\r\n    border-radius: 10px;\r\n    display: flex; /* 플렉스 박스를 사용하여 수평 정렬 */\r\n    flex-direction: column; /* 세로로 정렬 */\r\n    text-align: left; /* 텍스트 왼쪽 정렬 */\r\n    width: 100%; /* 부모 요소의 너비 */\r\n    box-sizing: border-box;\r\n  }\r\n  \r\n  .comment-header {\r\n    display: flex;\r\n    align-items: center;\r\n    margin-bottom: 5px; /* 프로필 이미지와 닉네임 간의 간격 */\r\n  }\r\n  \r\n  /* 댓글 입력 부분 */\r\n  .comment-input-container {\r\n    position: fixed;\r\n    bottom: 70px; /* 푸터 바로 위로 고정 */\r\n    left: 0;\r\n    width: 100%;\r\n    background-color: white;\r\n    padding: 10px;\r\n    box-shadow: 0 -2px 5px rgba(0, 0, 0, 0.1);\r\n    z-index: 10; /* 푸터 위에 표시되도록 */\r\n  }\r\n  \r\n  .comment-input input {\r\n    flex: 1;\r\n    padding: 8px;\r\n    border-radius: 5px;\r\n    border: 1px solid #ccc;\r\n  }\r\n  \r\n  .comment-input button {\r\n    margin-left: 10px;\r\n    padding: 8px 15px;\r\n    color: white;\r\n    border: none;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .footer {\r\n    position: fixed;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n  }\r\n  \r\n  .image-map-container img {\r\n    width: 100%;\r\n  \r\n    border-radius: 15px;\r\n  }\r\n  \r\n  .profile-image {\r\n    width: 40px;  /* 원하는 너비 */\r\n    height: 40px; /* 원하는 높이 */\r\n    border-radius: 50%; /* 동그란 형태로 만들기 */\r\n    object-fit: cover; /* 이미지 비율 유지 */\r\n    margin-right: 10px; /* 이미지와 텍스트 간의 간격 추가 */\r\n  }\r\n  \r\n  .author {\r\n    font-weight: bold;\r\n    font-size: 16px;\r\n    margin-left: 0%;\r\n    margin-top: 5px; /* 날짜와 닉네임 간 간격 */\r\n  }\r\n  \r\n  .comment-body-container {\r\n    margin-top: 10px; /* 댓글 본문과 유저 닉네임 간의 간격 */\r\n  }\r\n  \r\n  .comment-body {\r\n    margin-top: 10px; /* 댓글 본문과 유저 닉네임 간의 간격 */\r\n    padding-left: 10px;\r\n    font-size: 14px;\r\n    color: #333; /* 댓글 본문 색상 */\r\n    border-top: 1px solid #ddd; /* 상단에 밑줄을 추가 */\r\n    padding-top: 10px;\r\n    white-space: pre-line; /* 줄바꿈을 유지하여 텍스트가 자동으로 줄바꿈되게 */\r\n  }\r\n  \r\n  .date {\r\n    font-size: 12px; /* 날짜 크기 */\r\n    color: #777; /* 회색 글자색 */\r\n    text-align: right; /* 오른쪽 정렬 */\r\n    display: block; /* 텍스트를 블록 요소로 처리하여 오른쪽 정렬 */\r\n  }\r\n  \r\n  /* 폰트 추가 */\r\n  @font-face {\r\n      font-family: 'TheJamsil5Bold';\r\n      src: url('https://fastly.jsdelivr.net/gh/projectnoonnu/noonfonts_2302_01@1.0/TheJamsil5Bold.woff2') format('woff2');\r\n      font-weight: 700;\r\n      font-style: normal;\r\n      color: #555;  \r\n  }\r\n  \r\n  \r\n  \r\n  /* 특정 요소에 대한 폰트 적용 */\r\n  h1, h2, h3, .author, .post-body, .post-title, .comment-body-container, .comment-body, .no-comments {\r\n    font-family: 'TheJamsil5Bold', sans-serif !important;\r\n    color: #555 !important;\r\n  }\r\n  \r\n  .post-body {\r\n    font-family: 'TheJamsil3Regular', sans-serif !important;\r\n    color: #555;\r\n    font-size: 14px;  /* 글씨 크기 줄이기 */\r\n    line-height: 1.6; /* 본문 내용의 가독성 향상 */\r\n  }\r\n  \r\n  /* 뒤로가기 버튼 폰트 적용 */\r\n  button {\r\n    font-family: 'TheJamsil5Bold', sans-serif !important; /* 폰트 적용 */\r\n    font-weight: bold; /* 폰트 두께 설정 (선택 사항) */\r\n    font-size: 16px; /* 폰트 크기 설정 (선택 사항) */\r\n  }\r\n  \r\n  \r\n  </style>\r\n  ","import script from \"./CommunityDetailView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CommunityDetailView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./CommunityDetailView.vue?vue&type=style&index=0&id=680911c6&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-680911c6\"]])\n\nexport default __exports__"],"names":["gotoHome","window","location","href","gotoMobileCourse","gotoMobileCommunity","gotoMobileComplaint","gotoMobileRecoding","__exports__","route","useRoute","router","useRouter","communityDetail","ref","JSON","parse","query","community","comments","newComment","isLoading","totalComments","getCommunityDetail","async","communityId","value","communityPk","response","axios","get","data","error","console","message","getComments","log","length","postComment","userNickName","localStorage","getItem","post","commentBody","onMounted","goBack","push","name"],"sourceRoot":""}