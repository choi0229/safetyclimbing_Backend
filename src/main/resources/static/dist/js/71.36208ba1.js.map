{"version":3,"file":"js/71.36208ba1.js","mappings":"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","sources":["webpack://frontend/./src/api/index.js","webpack://frontend/./src/api/complaint.js","webpack://frontend/./src/stores/complaint.js","webpack://frontend/./src/views/ComplaintInfoView.vue","webpack://frontend/./src/views/ComplaintInfoView.vue?1562"],"sourcesContent":["import axios from 'axios';\r\n\r\nfunction apiInstance() {\r\n  const instance = axios.create({\r\n    baseURL: 'http://localhost:9000/api',\r\n    headers: {\r\n      'Content-Type': 'application/json;charset=utf-8',\r\n    },\r\n  });\r\n  return instance;\r\n}\r\n\r\nexport { apiInstance };","import { apiInstance } from \"./index.js\";\r\nconst api = apiInstance();\r\nimport router from \"@/router/index.js\";\r\nimport axios from 'axios';\r\n\r\n//complaintList 가져오기 요청\r\nexport async function getComplaintList() {\r\n  try { \r\n    const response = await axios.get('/api/complaint/list');\r\n    console.log(\"you can use getComplaintList\", response.data);\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error(err); // 에러를 콘솔에 출력\r\n  }\r\n}\r\n\r\n//complaintList 날짜 최신순으로 가져오기 요청\r\nexport async function getRecentComplaintList() {\r\n  try { \r\n    const response = await axios.get('/api/complaint/listRecent');\r\n    console.log(\"you can use getRecentComplaintList\", response.data);\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error(err); // 에러를 콘솔에 출력\r\n  }\r\n}\r\n\r\n//complaintList 글쓴이아이디에 해당하는 리스트 최신순으로 가져오기 요청\r\nexport async function getComplaintByUserId(userId) {\r\n  try { \r\n    const response = await axios.get(`/api/complaint/mine/${userId}`);\r\n    //console.log(\"getComplaintByUserId\", response.data);\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error(err); // 에러를 콘솔에 출력\r\n  }\r\n}\r\n\r\n//complaintList 글쓴이아이디에 해당하는 리스트 최신순으로 가져오기 요청\r\nexport async function getComplaintListByInst(institution) {\r\n  try { \r\n    const response = await axios.get(`/api/complaint/myList/${institution}`);\r\n    //console.log(\"getComplaintListByInst\", response.data);\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error(err); // 에러를 콘솔에 출력\r\n  }\r\n}\r\n\r\n//pathList 날짜 최신순으로 가져오기 요청\r\nexport async function getPathList() {\r\n  try { \r\n    const response = await axios.get('/api/pathList');\r\n    console.log(\"you can use getPathList\", response.data);\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error(err); // 에러를 콘솔에 출력\r\n  }\r\n}\r\n\r\n// 민원글 작성 요청\r\nexport async function insertComplaint(data) {\r\n  try {\r\n    const response = await axios.post('/api/complaint/insert', data);\r\n    console.log('응답 상태 코드:', response.status); // 응답 상태 코드 확인\r\n    console.log('민원글 작성에 대한 응답 데이터:', response.data); \r\n    return response.data;\r\n  } catch (err) {\r\n    console.error('API 요청 중 오류 발생:', err);\r\n    throw err;\r\n  }\r\n}\r\n\r\n// 민원글 번호에 따른 민원글 한개 가져오기 요청\r\nexport async function getComplaintByNo(complaintNo) {\r\n  try {\r\n    const response = await axios.get(`/api/complaint/one/${complaintNo}`);\r\n    console.log(\"API response:\", response);\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error(err); // 에러를 콘솔에 출력\r\n  }\r\n}\r\n\r\n// 유저 아이디에 따른 유저정보 한개 가져오기 요청\r\nexport async function getUserById(userId) {\r\n  try {\r\n    const response = await axios.get(`/api/userInfo/${userId}`);\r\n    console.log(\"API response:\", response);\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error(err); // 에러를 콘솔에 출력\r\n  }\r\n  \r\n}\r\n\r\n// 코스 한개씩 가져오기 요청\r\nexport async function getCourseById(courseId) {\r\n  try {\r\n    const response = await axios.get(`/api/course/${courseId}`);\r\n    console.log(\"API response:\", response);\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error(err); // 에러를 콘솔에 출력\r\n  }\r\n}\r\n\r\n\r\n// 민원글 번호에 따른 글 삭제 요청\r\nexport async function deleteComplaintByNo(complaintNo) {\r\n  try {\r\n    const response = await axios.delete(`/api/complaint/delete/${complaintNo}`);\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n}\r\n\r\n// 글 업데이트\r\nexport async function updateComplaintByNo(complaintNo, data) {\r\n  try {\r\n    const response = await axios.patch(`/api/complaint/update/${complaintNo}`, data);\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n}\r\n\r\n//특정 유저의 complaintList를 가져오기 요청\r\nexport async function getUserPostList(userNo) {\r\n  try { \r\n    const response = await api.get(`/auth/userpostlist/${userNo}`);\r\n    console.log(userNo);\r\n    console.log(\"you can use getUserPostList\", response.data);\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error(err); // 에러를 콘솔에 출력\r\n  }\r\n}\r\n\r\n//게시글 추가 및 \r\nexport async function insertPostAndKeyword(postData, keywordData) {\r\n  const formData = new FormData();\r\n  formData.append('post', new Blob([JSON.stringify(postData)], { type: 'application/json' }));\r\n  formData.append('postkeyword', new Blob([JSON.stringify(keywordData)], { type: 'application/json' }));\r\n\r\n  try {\r\n    const response = await api.post('/auth/insert', formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error(err);\r\n    if (err.response && err.response.status === 401) {\r\n      // 로그인 페이지로 이동\r\n      alert(\"로그인 후 이용하실 수 있습니다.\")\r\n      router.push({ path: '/login' });\r\n    }\r\n    throw err;\r\n  }\r\n} \r\n\r\n// 이미지 저장요청\r\nexport async function saveImage(formData) {\r\n  try {\r\n    const response = await api.post('/auth/upload-image', formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n    console.log('서버 응답:', response.data);\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error('이미지 업로드 중 오류 발생:', err); // 에러를 콘솔에 출력\r\n  }\r\n}\r\n\r\n// 민원글 번호에 따른 민원처리정보 한개 가져오기 요청\r\nexport async function getProcessingByNo(processingComplaintNo) {\r\n  try {\r\n    const response = await axios.get(`/api/complaint/processing/${processingComplaintNo}`);\r\n    console.log(\"API response:\", response);\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error(err); // 에러를 콘솔에 출력\r\n  }\r\n}\r\n\r\n// 민원처리정보 작성 요청\r\nexport async function insertProcessing(data) {\r\n  try {\r\n    const response = await axios.post('/api/complaint/insertProcessing', data);\r\n    console.log('응답 상태 코드:', response.status); // 응답 상태 코드 확인\r\n    console.log('민원처리정보 작성에 대한 응답 데이터:', response.data); \r\n    return response.data;\r\n  } catch (err) {\r\n    console.error('API 요청 중 오류 발생:', err);\r\n    throw err;\r\n  }\r\n}\r\n\r\n// 민원처리정보 업데이트\r\nexport async function updateProcessingByNo(processingComplaintNo, data) {\r\n  try {\r\n    const response = await axios.patch(`/api/complaint/updateProcessing/${processingComplaintNo}`, data);\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n}","import { ref } from \"vue\";\r\nimport { defineStore } from \"pinia\";\r\nimport { getComplaintList, getUserPostList, getComplaintListByInst, getComplaintByNo, getRecentComplaintList, getPathList, getComplaintByUserId } from '@/api/complaint';\r\n\r\n// 민원글 리스트 가져오는 상태\r\nexport const useComplaintListStore = defineStore('complaintlist', () => {\r\n  const complaintlist = ref([]);\r\n  async function fetchComplaintList() {\r\n    console.log(\"Fetching complaintlist ===\");\r\n    complaintlist.value = await getComplaintList();\r\n    console.log(\"postlist--\",complaintlist.value);\r\n  }\r\n\r\n  return { complaintlist, fetchComplaintList }\r\n})\r\n\r\n// 민원글 리스트 날짜 최신순으로 가져오는 상태\r\nexport const useRecentComplaintListStore = defineStore('recentcomplaintlist', () => {\r\n  const recentcomplaintlist = ref([]);\r\n  async function fetchRecentComplaintList() {\r\n    //console.log(\"Fetching recentcomplaintlist ===\");\r\n    recentcomplaintlist.value = await getRecentComplaintList();\r\n    //console.log(\"recentpostlist--\",recentcomplaintlist.value);\r\n  }\r\n\r\n  return { recentcomplaintlist, fetchRecentComplaintList }\r\n})\r\n\r\nexport const useMyComplaintListStore = defineStore('mycomplaintlist', () => {\r\n  const mycomplaintlist = ref([]);\r\n  async function fetchMyComplaintList(userId) {\r\n    //console.log(\"Fetching mycomplaintlist ===\");\r\n    mycomplaintlist.value = await getComplaintByUserId(userId);\r\n    //console.log(\"recentpostlist--\",recentcomplaintlist.value);\r\n  }\r\n\r\n  return { mycomplaintlist, fetchMyComplaintList }\r\n})\r\n\r\nexport const useManagingComplaintListStore = defineStore('managingcomplaintlist', () => {\r\n  const managingcomplaintlist = ref([]);\r\n  async function fetchManagingComplaintList(institution) {\r\n    managingcomplaintlist.value = await getComplaintListByInst(institution);\r\n    console.log(\"담당업무--\",managingcomplaintlist.value);\r\n  }\r\n\r\n  return { managingcomplaintlist, fetchManagingComplaintList }\r\n})\r\n\r\n// 운동 기록 리스트 날짜 최신순으로 가져오는 상태\r\nexport const usePathList = defineStore('pathList', () => {\r\n  const pathList = ref([]);\r\n  async function fetchPathList() {\r\n    //console.log(\"Fetching recentcomplaintlist ===\");\r\n    pathList.value = await getPathList();\r\n    //console.log(\"recentpostlist--\",recentcomplaintlist.value);\r\n  }\r\n\r\n  return { pathList, fetchPathList }\r\n})\r\n\r\n// 민원글 번호에 따른 민원글 한개 가져오는 상태\r\nexport const useComplaintStore = defineStore('complaintByNo', () => {\r\n  const complaintone = ref({});\r\n  async function fetchComplaintone(postNo) {\r\n    try {\r\n      complaintone.value = await getComplaintByNo(postNo);\r\n    } catch (err) {\r\n      console.error('Error fetching post:', err);\r\n    }\r\n  }\r\n  return { complaintone, fetchComplaintone };\r\n});\r\n\r\n// 특정 유저의 게시글 목록 가져오는 상태\r\nexport const useUserPostListStore = defineStore('userpostlist', () => {\r\n  const userpostlist = ref([]);\r\n  async function fetchUserPost() {\r\n    const userNo = sessionStorage.getItem('userNo');\r\n    console.log(userNo);\r\n    if (!userNo) {\r\n      console.error('userNo is undefined or null');\r\n      return;\r\n    }\r\n    try {\r\n      console.log(\"userpostlist -- 유저 포스트 리스트\");\r\n      userpostlist.value = await getUserPostList(userNo);\r\n      console.log(\"userpostlist--\", userpostlist.value);\r\n    } catch (err) {\r\n      console.error('Error fetching userpostlist:', err);\r\n    }\r\n  }\r\n\r\n  return { userpostlist, fetchUserPost }\r\n})\r\n","<template>\r\n  <div class=\"container\">\r\n    <!-- Post Card -->\r\n    <div class=\"card\">\r\n      <div class=\"card-body p-lg-5 pb-lg-0\">\r\n        <div class=\"d-flex flex-column flex-md-row\">\r\n          <!-- Post Content -->\r\n          <div class=\"flex-md-grow-1 me-md-4\">\r\n            <div class=\"mb-2\">\r\n              <div class=\"d-flex flex-wrap mb-3 align-items-center\">\r\n                <!-- Back Button -->\r\n                <button class=\"styled-button\" @click=\"goToMainPage()\">뒤로가기</button>\r\n              </div>\r\n\r\n              <!-- Post Title and Author -->\r\n              <div class=\"mb-3\">\r\n                <h1 class=\"text-gray-900 fs-3 fw-bold mb-2\">\r\n                  {{ complaintone.complaintTitle }}\r\n                </h1>\r\n                <hr class=\"separator-line2\" />\r\n                <span class=\"fw-bold text-muted fs-6 ps-1\">\r\n                  신고자 : {{ complaintone.userId }}\r\n                </span>\r\n                <hr class=\"separator-line\" />\r\n                <span class=\"fw-bold text-muted fs-6 ps-1\">\r\n                  신고 날짜 : {{ complaintone.createdAt }}\r\n                </span>\r\n                <hr class=\"separator-line\" />\r\n                <span class=\"fw-bold text-muted fs-6 ps-1\">\r\n                  신고 유형 : {{ complaintone.complaintType }}\r\n                </span>\r\n                <hr class=\"separator-line\" />\r\n                <span class=\"fw-bold text-muted fs-6 ps-1\">\r\n                  산이름 : {{ complaintone.mountainName }}\r\n                </span>\r\n              </div>\r\n\r\n              <!-- Image Section -->\r\n              <hr class=\"separator-line\" />\r\n              <div class=\"image-container mb-2 d-flex justify-content-center\">\r\n                <img\r\n                  :src=\"complaintone.complaintImg\"\r\n                  alt=\"Complaint Image\"\r\n                  class=\"img-fluid\"\r\n                />\r\n              </div>\r\n\r\n              <!-- Post Content -->\r\n              <hr class=\"separator-line\" />\r\n              <p class=\"fw-bold text-muted fs-6 ps-1\">신고 내용</p>\r\n              <div class=\"card mb-2\" style=\"height: 150px\">\r\n                <div class=\"card-body p-2\">\r\n                  <p class=\"fs-6 text-gray-600\">\r\n                    {{ complaintone.complaintContent }}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <hr class=\"separator-line mt-3\" />\r\n              <button class=\"styled-button2 me-2\" @click=\"showUpdateModal()\">수정</button>\r\n              <button\r\n                class=\"styled-button2\"\r\n                @click=\"deleteComplaint(complaintone.complaintNo)\"\r\n              >\r\n                삭제\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <!-- End Post Content -->\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- //==== 민원 수정 모달 START ====// -->\r\n  <div class=\"modal fade\" id=\"complaint_update\" tabindex=\"-1\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog mw-1000px\" style=\"width: 800px\">\r\n      <div class=\"modal-content rounded\">\r\n        <div class=\"modal-header pb-0 border-0 justify-content-end\">\r\n          <!--begin::닫기 아이콘-->\r\n          <div class=\"\" data-bs-dismiss=\"modal\">\r\n            <button class=\"btn btn-sm btn-success\">닫기</button>\r\n          </div>\r\n          <!--end::닫기 아이콘-->\r\n        </div>\r\n        <div class=\"modal-body scroll-y px-10 px-lg-15 pt-0 pb-15\">\r\n          <form id=\"kt_modal_new_target_form\" class=\"form\">\r\n            <!--begin::제목-->\r\n            <div class=\"mb-8 text-center\">\r\n              <!--begin::Title-->\r\n              <h1 class=\"mb-4\">신고 글 수정</h1>\r\n              <!--end::Title-->\r\n              <!--begin::Description-->\r\n              <div class=\"text-muted fs-6\">제목, 이미지, 위치, 내용을 수정하세요.</div>\r\n              <!--end::Description-->\r\n            </div>\r\n            <!--end::제목-->\r\n\r\n            <!--begin::이름 입력상자-->\r\n            <div class=\"d-flex flex-column mb-8 fv-row mt-3\">\r\n              <label class=\"d-flex align-items-center fs-6 fw-semibold mb-2\">\r\n                <span class=\"required\">제목</span>\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control form-control-solid\"\r\n                name=\"target_title\"\r\n                v-model=\"titleInput\"\r\n              />\r\n            </div>\r\n            <!--end::이름 입력상자-->\r\n\r\n            <!-- begin::타입 -->\r\n            <label for=\"category\" class=\"col-form-label fw-bold\">구분</label>\r\n            <div class=\"form-group mb-2\">\r\n              <select\r\n                v-model=\"typeInput\"\r\n                id=\"number\"\r\n                name=\"number\"\r\n                class=\"form-control\"\r\n                style=\"cursor: pointer\"\r\n              >\r\n                <option value=\"\" disabled>유형 선택</option>\r\n                <option value=\"파손\">파손</option>\r\n                <option value=\"낙석\">낙석</option>\r\n                <option value=\"화재\">화재</option>\r\n              </select>\r\n            </div>\r\n            <!-- end::타입 -->\r\n\r\n            <!--begin::산이름 입력상자-->\r\n            <div class=\"d-flex flex-column mb-8 fv-row\">\r\n              <label class=\"d-flex align-items-center fs-6 fw-semibold mb-2\">\r\n                <span class=\"required\">산이름</span>\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control form-control-solid\"\r\n                name=\"target_title\"\r\n                v-model=\"mountainNameInput\"\r\n              />\r\n            </div>\r\n            <!--end::산이름 입력상자-->\r\n\r\n            <!--begin::민원 지도 찍기-->\r\n            <div class=\"mb-3 mt-3\">\r\n              <div id=\"map\" class=\"map-container\"></div>\r\n              <p><em>지도를 클릭해주세요!</em></p>\r\n              <div id=\"clickLatlng\"></div>\r\n            </div>\r\n            <!--end::민원 지도 찍기-->\r\n\r\n            <!-- 이미지 선택 START -->\r\n            <div class=\"d-flex flex-column mb-8 fv-row\">\r\n              <label class=\"d-flex align-items-center fs-6 fw-semibold mb-2\">\r\n                <span class=\"required\">파일 선택</span>\r\n              </label>\r\n              <input type=\"file\" id=\"image\" @change=\"onFileChange\" ref=\"image\" />\r\n            </div>\r\n            <!-- 이미지 선택 END -->\r\n            <!--begin::내용 입력상자-->\r\n            <div class=\"d-flex flex-column mb-8 fv-row mt-2\">\r\n              <label class=\"d-flex align-items-center fs-6 fw-semibold mb-2\">\r\n                <span class=\"required\">내용</span>\r\n                <span\r\n                  class=\"ms-1\"\r\n                  data-bs-toggle=\"tooltip\"\r\n                  title=\"내용을 입력하세요. 필수랍니다~\"\r\n                >\r\n                  <i class=\"ki-duotone ki-information-5 text-gray-500 fs-6\">\r\n                    <span class=\"path1\"></span>\r\n                    <span class=\"path2\"></span>\r\n                    <span class=\"path3\"></span>\r\n                  </i>\r\n                </span>\r\n              </label>\r\n              <textarea\r\n                class=\"form-control form-control-solid\"\r\n                name=\"target_content\"\r\n                v-model=\"contentInput\"\r\n                rows=\"5\"\r\n              ></textarea>\r\n            </div>\r\n            <!--end::내용 입력상자-->\r\n            <!--begin::하단버튼-->\r\n            <div class=\"text-center mt-3\">\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn btn-success\"\r\n                @click=\"updateComplaint(complaintone.complaintNo)\"\r\n              >\r\n                저장\r\n              </button>\r\n              <button type=\"reset\" class=\"btn btn-light ms-3\" @click=\"clearAll()\">\r\n                모두 지우기\r\n              </button>\r\n            </div>\r\n            <!--end::하단버튼-->\r\n          </form>\r\n          <!--end:Form-->\r\n        </div>\r\n        <!--end::Modal body-->\r\n      </div>\r\n      <!--end::Modal content-->\r\n    </div>\r\n  </div>\r\n  <!-- //==== 민원 수정 모달 END ====// -->\r\n</template>\r\n\r\n<script setup>\r\n/* global kakao */\r\nimport { ref } from \"vue\";\r\nimport { useComplaintStore } from \"@/stores/complaint\";\r\nimport { storeToRefs } from \"pinia\";\r\nimport router from \"@/router/index.js\";\r\nimport { deleteComplaintByNo, updateComplaintByNo } from \"@/api/complaint\";\r\nimport { Modal } from \"bootstrap\";\r\nimport axios from \"axios\";\r\n\r\n// 민원글 수정에 필요한 변수 생성\r\nconst titleInput = ref(\"\");\r\nconst mountainNameInput = ref(\"\");\r\nconst contentInput = ref(\"\");\r\nconst typeInput = ref(\"\");\r\nlet latitudeInput = 0;\r\nlet longitudeInput = 0;\r\n\r\n// 민원 한개 가져오는 스토어 사용\r\nconst complaintStore = useComplaintStore();\r\nconst { complaintone } = storeToRefs(complaintStore);\r\n\r\n// 민원 목록 페이지로 이동\r\nfunction goToMainPage() {\r\n  router.replace({ path: \"/complaintList\" });\r\n}\r\n\r\n// 민원 삭제하기 버튼\r\nfunction deleteComplaint(complaintNo) {\r\n  if (confirm(\"정말 삭제하시겠습니까??\") == true) {\r\n    deleteComplaintByNo(complaintNo);\r\n    goToMainPage();\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\n\r\nlet updateComplaintModal;\r\n\r\n// 민원 수정하기 버튼 - 모달 열기\r\nfunction showUpdateModal() {\r\n    window.scrollTo({\r\n    top: 0,\r\n    behavior: 'smooth'  // 부드럽게 스크롤하려면 'smooth', 즉시 이동하려면 'auto'\r\n    });\r\n\r\n  // 대화상자에 입력값 넣어주기\r\n  titleInput.value = complaintone.value.complaintTitle;\r\n  mountainNameInput.value = complaintone.value.mountainName;\r\n  contentInput.value = complaintone.value.complaintContent;\r\n  typeInput.value = complaintone.value.complaintType;\r\n\r\n  // 대화상자 띄우기\r\n  const elem = document.querySelector(\"#complaint_update\");\r\n  updateComplaintModal = new Modal(elem);\r\n  updateComplaintModal.show();\r\n  setTimeout(() => {\r\n    initializeMap();\r\n  }, 500);\r\n}\r\n\r\nfunction initializeMap() {\r\n  // Kakao 지도 API 스크립트를 로드\r\n  const script = document.createElement(\"script\");\r\n  script.onload = () => kakao.maps.load(createMap); // 스크립트 로드 후 createMap 호출\r\n  script.src =\r\n    \"https://dapi.kakao.com/v2/maps/sdk.js?appkey=333bda7da18df138fb4d9b3e5cf351c4&autoload=false&libraries=services\"; // Kakao 지도 API\r\n  document.head.appendChild(script);\r\n}\r\n\r\nfunction createMap() {\r\n  const mapContainer = document.getElementById(\"map\"); // 지도를 표시할 div 선택\r\n  const mapOption = {\r\n    center: new kakao.maps.LatLng(\r\n      complaintone.value.latitude,\r\n      complaintone.value.longitude\r\n    ), // 지도의 중심 좌표\r\n    level: 8, // 지도 확대 레벨\r\n  };\r\n\r\n  // 지도 생성\r\n  const map = new kakao.maps.Map(mapContainer, mapOption);\r\n\r\n  // 지도를 클릭한 위치에 표출할 마커입니다\r\n  var marker = new kakao.maps.Marker({\r\n    // 지도 중심좌표에 마커를 생성합니다\r\n    position: map.getCenter(),\r\n  });\r\n  // 지도에 마커를 표시합니다\r\n  marker.setMap(map);\r\n\r\n  // 지도에 클릭 이벤트를 등록합니다\r\n  // 지도를 클릭하면 마지막 파라미터로 넘어온 함수를 호출합니다\r\n  kakao.maps.event.addListener(map, \"click\", function (mouseEvent) {\r\n    // 클릭한 위도, 경도 정보를 가져옵니다\r\n    var latlng = mouseEvent.latLng;\r\n\r\n    // 마커 위치를 클릭한 위치로 옮깁니다\r\n    marker.setPosition(latlng);\r\n\r\n    var message = \"클릭한 위치의 위도는 \" + latlng.getLat() + \" 이고, \";\r\n    message += \"경도는 \" + latlng.getLng() + \" 입니다\";\r\n\r\n    latitudeInput = latlng.getLat();\r\n    longitudeInput = latlng.getLng();\r\n\r\n    var resultDiv = document.getElementById(\"clickLatlng\");\r\n    resultDiv.innerHTML = message;\r\n  });\r\n}\r\n\r\n// 민원 수정하기 요청\r\nasync function updateComplaint(complaintNo) {\r\n  let imagePath = await uploadImage();\r\n  if (imagePath == null) {\r\n    imagePath = complaintone.value.complaintImg;\r\n  }\r\n\r\n  console.log(\"수정할 글번호 : \", complaintNo);\r\n\r\n  // 기존 좌표를 가져옵니다.\r\n  const existingLatitude = complaintone.value.latitude;\r\n  const existingLongitude = complaintone.value.longitude;\r\n\r\n  // 위도와 경도를 업데이트합니다. 사용자가 클릭하지 않았다면 기존 좌표를 사용합니다.\r\n  const latitude = latitudeInput !== 0 ? latitudeInput : existingLatitude;\r\n  const longitude = longitudeInput !== 0 ? longitudeInput : existingLongitude;\r\n\r\n  const data = {\r\n    complaintNo: complaintNo,\r\n    complaintTitle: titleInput.value,\r\n    complaintContent: contentInput.value,\r\n    complaintType: typeInput.value,\r\n    mountainName: mountainNameInput.value,\r\n    latitude: latitude,\r\n    longitude: longitude,\r\n    complaintImg: imagePath || \"\",\r\n  };\r\n  complaintone.value.complaintTitle = titleInput.value;\r\n  complaintone.value.complaintContent = contentInput.value;\r\n  complaintone.value.complaintType = typeInput.value;\r\n  complaintone.value.mountainName = mountainNameInput.value;\r\n  complaintone.value.latitude = latitudeInput;\r\n  complaintone.value.longitude = longitudeInput;\r\n  complaintone.value.complaintImg = imagePath;\r\n\r\n  updateComplaintByNo(complaintNo, data);\r\n  updateComplaintModal.hide();\r\n}\r\n\r\n// ==== 이미지 관련 코드 ==== //\r\n// 이미지 주소로 넘기기\r\nconst selectedFile = ref(null);\r\n\r\nconst onFileChange = (event) => {\r\n  selectedFile.value = event.target.files[0];\r\n};\r\n\r\nconst uploadImage = async () => {\r\n  if (!selectedFile.value) {\r\n    return null; // 이미지가 없으면 null 반환\r\n  }\r\n\r\n  const formData = new FormData();\r\n  formData.append(\"file\", selectedFile.value);\r\n\r\n  try {\r\n    const response = await axios.post(\"/api/complaint/upload\", formData, {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    });\r\n    return response.data; // 서버에서 반환한 이미지 경로\r\n  } catch (error) {\r\n    console.error(\"Error uploading image\", error);\r\n    return null;\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.map-container {\r\n  width: 100%;\r\n  height: 300px; /* 지도의 높이를 명확하게 지정하세요 */\r\n  border: 1px solid #ccc;\r\n}\r\n\r\nhr.separator-line {\r\n  border: 1px solid #ccc;\r\n  margin: 10px 0;\r\n  width: 100%;\r\n}\r\n\r\n.card {\r\n  cursor: pointer;\r\n  margin-top: 10px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.image-container img {\r\n  width: 700px;\r\n  height: auto;\r\n}\r\n\r\n.styled-button {\r\n  background: linear-gradient(#d3d3d3, #a9a9a9);\r\n  color: white;\r\n  padding: 8px 16px;\r\n  border: none;\r\n  border-radius: 25px;\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.styled-button2 {\r\n  background: linear-gradient(#55995e, #3d7935);\r\n  color: white;\r\n  padding: 8px 16px;\r\n  border: none;\r\n  border-radius: 25px;\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.styled-button:hover {\r\n  background: linear-gradient(#a9a9a9, #808080);\r\n}\r\n</style>\r\n","import script from \"./ComplaintInfoView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ComplaintInfoView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ComplaintInfoView.vue?vue&type=style&index=0&id=285ea83a&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-285ea83a\"]])\n\nexport default __exports__"],"names":["apiInstance","instance","axios","create","baseURL","headers","api","async","getComplaintList","response","get","console","log","data","err","error","getRecentComplaintList","getComplaintByUserId","userId","getComplaintListByInst","institution","getPathList","insertComplaint","post","status","getComplaintByNo","complaintNo","getUserById","getCourseById","courseId","deleteComplaintByNo","delete","updateComplaintByNo","patch","getUserPostList","userNo","getProcessingByNo","processingComplaintNo","insertProcessing","updateProcessingByNo","useComplaintListStore","defineStore","complaintlist","ref","fetchComplaintList","value","useRecentComplaintListStore","recentcomplaintlist","fetchRecentComplaintList","useMyComplaintListStore","mycomplaintlist","fetchMyComplaintList","useManagingComplaintListStore","managingcomplaintlist","fetchManagingComplaintList","usePathList","pathList","fetchPathList","useComplaintStore","complaintone","fetchComplaintone","postNo","userpostlist","fetchUserPost","sessionStorage","getItem","titleInput","mountainNameInput","contentInput","typeInput","latitudeInput","longitudeInput","complaintStore","storeToRefs","goToMainPage","router","replace","path","deleteComplaint","confirm","updateComplaintModal","showUpdateModal","window","scrollTo","top","behavior","complaintTitle","mountainName","complaintContent","complaintType","elem","document","querySelector","Modal","show","setTimeout","initializeMap","script","createElement","onload","kakao","maps","load","createMap","src","head","appendChild","mapContainer","getElementById","mapOption","center","LatLng","latitude","longitude","level","map","Map","marker","Marker","position","getCenter","setMap","event","addListener","mouseEvent","latlng","latLng","setPosition","message","getLat","getLng","resultDiv","innerHTML","updateComplaint","imagePath","uploadImage","complaintImg","existingLatitude","existingLongitude","hide","selectedFile","onFileChange","target","files","formData","FormData","append","__exports__"],"sourceRoot":""}