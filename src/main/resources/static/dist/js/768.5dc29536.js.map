{"version":3,"file":"js/768.5dc29536.js","mappings":"i/BA2GA,MAAMA,GAAgBC,EAAAA,EAAAA,IAAI,GACpBC,GAAgBD,EAAAA,EAAAA,IAAI,IACpBE,GAAUF,EAAAA,EAAAA,IAAI,IACdG,GAAqBH,EAAAA,EAAAA,IAAI,CAAC,GAC1BI,GAAcJ,EAAAA,EAAAA,IAAI,GAClBK,GAAcL,EAAAA,EAAAA,IAAI,IAClBM,GAAgBN,EAAAA,EAAAA,IAAI,GAEpBO,EAAyBC,UAC7B,IACE,MAAMC,QAAiBC,EAAAA,EAAMC,IAAI,yBACjCC,QAAQC,IAAIJ,EAASK,KAAKZ,SAC1BA,EAAQa,MAAQN,EAASK,KAAKZ,SAAW,GACzCC,EAAmBY,MAAQN,EAASK,KAAKX,oBAAsB,CAAC,EAChEC,EAAYW,MAAQN,EAASK,KAAKV,aAAe,EAE7CK,EAASK,KAAKf,gBAChBA,EAAcgB,MAAQN,EAASK,KAAKf,cAAciB,QAAQ,GAE9D,CAAE,MAAOC,GACPL,QAAQK,MAAM,yBAA0BA,EAC1C,GAGIC,EAAeV,UACnB,IACE,MAAMC,QAAiBC,EAAAA,EAAMC,IAAI,2BACjCV,EAAcc,MAAQN,EAASK,KAAKK,SAAW,WACjD,CAAE,MAAOF,GACPL,QAAQK,MAAM,4BAA6BA,EAC7C,IAGFG,EAAAA,EAAAA,KAAU,KACRb,IACAW,GAAc,IAGhB,MAAMG,GAAYC,EAAAA,EAAAA,KAAS,IAAMC,KAAKC,MAAMzB,EAAcgB,SACpDU,GAAWH,EAAAA,EAAAA,KAAS,IAAMvB,EAAcgB,MAAQ,GAAK,KACrDW,GAAaJ,EAAAA,EAAAA,KAAS,IAAM,EAAID,EAAUN,OAASU,EAASV,MAAQ,EAAI,KAExEY,GAAkBL,EAAAA,EAAAA,KAAS,IACxBpB,EAAQa,MAAMa,QAAOC,IAC1B,MAAMC,EAAiBD,GAAQC,eAAkB,GAC3CC,EAASF,GAAQE,QAAU,GACjC,OAAOD,EAAeE,cAAcC,SAAS5B,EAAYU,MAAMiB,gBAAkBD,EAAOC,cAAcC,SAAS5B,EAAYU,MAAMiB,cAAc,MAK7IE,GAAiBZ,EAAAA,EAAAA,KAAS,IACvBK,EAAgBZ,MAAMoB,MAAM,EAAG7B,EAAcS,SAGhDqB,EAAkBA,KAClB9B,EAAcS,MAAQ,GAAKY,EAAgBZ,MAAMsB,OACnD/B,EAAcS,OAAS,EAEvBT,EAAcS,MAAQY,EAAgBZ,MAAMsB,MAC9C,EAIIC,GAAchB,EAAAA,EAAAA,KAAS,IACpBhB,EAAcS,MAAQY,EAAgBZ,MAAMsB,SAG/CE,EAAcC,IAClB,MAAMC,EAAO,IAAIC,KAAKF,GAChBG,EAAY,IACZC,EAAY,IAAIF,KAAKD,EAAKI,UAAwB,GAAZF,EAAiB,KACvDG,EAAOF,EAAUG,cACjBC,GAASJ,EAAUK,WAAa,GAAGC,WAAWC,SAAS,EAAG,KAC1DC,EAAMR,EAAUS,UAAUH,WAAWC,SAAS,EAAG,KACjDG,EAAQV,EAAUW,WAAWL,WAAWC,SAAS,EAAG,KACpDK,EAAUZ,EAAUa,aAAaP,WAAWC,SAAS,EAAG,KAC9D,MAAO,GAAGL,KAAQE,KAASI,KAAOE,KAASE,GAAS,E,slFClLtD,MAAME,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O","sources":["webpack://frontend/./src/views/MountainView.vue","webpack://frontend/./src/views/MountainView.vue?52dc"],"sourcesContent":["<template>\r\n  <div class=\"review-summary\">\r\n    <div class=\"rating-summary\">\r\n      <h2>산와봤니 방문객들은 이렇게 말합니다.</h2>\r\n      <div class=\"average-rating\">\r\n        <div class=\"rating-display\">\r\n          <!-- 평균 별점 -->\r\n          <span class=\"rating-number\">{{ averageRating }}</span>\r\n          <span class=\"rating-star\">\r\n            <i class=\"bi bi-star-fill\"></i>\r\n          </span>\r\n        </div>\r\n        <p class=\"rating-text\">평균 별점</p>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"review-ai-summary\">\r\n      <p>{{ reviewSummary }}</p>\r\n      <small>이 요약은 AI가 트레일 리뷰를 토대로 생성한 것이므로 항상 완벽하지는 않습니다.</small>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"review-page\">\r\n    <div class=\"content-wrapper\">\r\n      <div class=\"summary-section\">\r\n        <div class=\"rating\">\r\n          <h1>{{ averageRating }}</h1>\r\n          <div class=\"stars\">\r\n            <i v-for=\"star in fullStars\" :class=\"'bi bi-star-fill'\" :key=\"star\"></i>\r\n            <i v-if=\"halfStar\" class=\"bi bi-star-half\"></i>\r\n            <i v-for=\"star in emptyStars\" class=\"bi bi-star\" :key=\"star\"></i>\r\n          </div>\r\n          <p>{{ reviewCount }}개의 리뷰</p>\r\n        </div>\r\n\r\n        <div class=\"rating-breakdown\">\r\n          <div v-for=\"(count, star) in ratingDistribution\" :key=\"star\" class=\"rating-bar\">\r\n            <span>{{ star }}점</span>\r\n            <i class=\"bi bi-star-fill\"></i>\r\n            <div class=\"progress-bar\">\r\n              <div class=\"progress\" :style=\"{ width: (count / reviewCount) * 100 + '%' }\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"reviews-section\">\r\n        <div class=\"review-search\">\r\n          <input type=\"text\" placeholder=\"리뷰 검색\" v-model=\"searchQuery\" />\r\n        </div>\r\n\r\n        <!-- 리뷰 목록 -->\r\n        <div class=\"reviews-list-wrapper\">\r\n          <div class=\"reviews-list\" ref=\"reviewsList\">\r\n\r\n            <!-- 리뷰 항목 -->\r\n            <div class=\"card review-card\">\r\n              <div v-for=\"(review, index) in visibleReviews\" :key=\"index\" class=\"review-item\">\r\n                <div class=\"review-content-wrapper\">\r\n                  <!-- 리뷰 헤더 -->\r\n                  <div class=\"review-header\">\r\n                    <img class=\"profile-image\" :src=\"review.profileImage || '/images/main1.jpg'\" alt=\"Profile Image\">\r\n                    <div class=\"user-info\">\r\n                      <h3>{{ review?.userId || 'Unknown User' }}</h3>\r\n                      <div class=\"stars-inline\">\r\n                        <i v-for=\"star in 5\"\r\n                           :class=\"{\r\n                             'bi bi-star-fill': star <= Math.floor(review.rating),\r\n                             'bi bi-star-half': star === Math.ceil(review.rating) && review.rating % 1 >= 0.5,\r\n                             'bi bi-star': star > Math.ceil(review.rating)\r\n                           }\"\r\n                           :key=\"star\"></i>\r\n                      </div>\r\n                      <span class=\"review-date\">{{ formatDate(review?.date) || '날짜 없음' }}</span>\r\n                      \r\n                    </div>\r\n                  </div>\r\n\r\n                  <!-- 리뷰 내용 -->\r\n                  <p class=\"review-content\">{{ review?.reviewContent  || '내용 없음' }}</p>\r\n\r\n                  <!-- 리뷰 사진 -->\r\n                  <div class=\"review-photos\">\r\n                    <img v-for=\"photo in review?.photos\" :src=\"photo\" :key=\"photo\" alt=\"리뷰 사진\" class=\"review-photo\">\r\n                  </div>\r\n\r\n                  <span class=\"difficulty\">난이도: {{ review?.difficulty || '정보 없음' }}</span>\r\n\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- '더 보기' 버튼 -->\r\n            <button v-if=\"canShowMore\" @click=\"loadMoreReviews\">\r\n              더 보기\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, computed } from 'vue';\r\nimport axios from 'axios';\r\n\r\nconst averageRating = ref(0);\r\nconst reviewSummary = ref('');\r\nconst reviews = ref([]);\r\nconst ratingDistribution = ref({});\r\nconst reviewCount = ref(0);\r\nconst searchQuery = ref('');\r\nconst reviewsToShow = ref(3); // 처음에 보여줄 리뷰 개수\r\n\r\nconst fetchReviewsAndRatings = async () => {\r\n  try {\r\n    const response = await axios.get('/api/course/1/reviews');\r\n    console.log(response.data.reviews);\r\n    reviews.value = response.data.reviews || [];\r\n    ratingDistribution.value = response.data.ratingDistribution || {};\r\n    reviewCount.value = response.data.reviewCount || 0;\r\n\r\n    if (response.data.averageRating) {\r\n      averageRating.value = response.data.averageRating.toFixed(1);\r\n    }\r\n  } catch (error) {\r\n    console.error('리뷰 데이터를 가져오는 데 실패했습니다:', error);\r\n  }\r\n};\r\n\r\nconst fetchSummary = async () => {\r\n  try {\r\n    const response = await axios.get(`/api/course/1/summarize`);\r\n    reviewSummary.value = response.data.summary || '요약된 내용 없음';\r\n  } catch (error) {\r\n    console.error('리뷰 요약 데이터를 가져오는 데 실패했습니다:', error);\r\n  }\r\n};\r\n\r\nonMounted(() => {\r\n  fetchReviewsAndRatings();\r\n  fetchSummary();\r\n});\r\n\r\nconst fullStars = computed(() => Math.floor(averageRating.value));\r\nconst halfStar = computed(() => averageRating.value % 1 >= 0.5);\r\nconst emptyStars = computed(() => 5 - fullStars.value - (halfStar.value ? 1 : 0));\r\n\r\nconst filteredReviews = computed(() => {\r\n  return reviews.value.filter(review => {\r\n    const reviewContent  = review?.reviewContent  || '';\r\n    const userId = review?.userId || '';\r\n    return reviewContent .toLowerCase().includes(searchQuery.value.toLowerCase()) || userId.toLowerCase().includes(searchQuery.value.toLowerCase());\r\n  });\r\n});\r\n\r\n// 처음 3개의 리뷰를 표시하고 '더 보기' 클릭 시 3개씩 더 로드\r\nconst visibleReviews = computed(() => {\r\n  return filteredReviews.value.slice(0, reviewsToShow.value);\r\n});\r\n\r\nconst loadMoreReviews = () => {\r\n  if (reviewsToShow.value + 3 <= filteredReviews.value.length) {\r\n    reviewsToShow.value += 3; // 3개씩 추가로 보이게\r\n  } else {\r\n    reviewsToShow.value = filteredReviews.value.length; // 더 이상 없으면 전체 보여주기\r\n  }\r\n};\r\n\r\n// '더 보기' 버튼을 언제까지 보여줄지 설정\r\nconst canShowMore = computed(() => {\r\n  return reviewsToShow.value < filteredReviews.value.length;\r\n});\r\n\r\nconst formatDate = (dateString) => {\r\n  const date = new Date(dateString);\r\n  const kstOffset = 9 * 60;\r\n  const localDate = new Date(date.getTime() + kstOffset * 60 * 1000);\r\n  const year = localDate.getFullYear();\r\n  const month = (localDate.getMonth() + 1).toString().padStart(2, '0');\r\n  const day = localDate.getDate().toString().padStart(2, '0');\r\n  const hours = localDate.getHours().toString().padStart(2, '0');\r\n  const minutes = localDate.getMinutes().toString().padStart(2, '0');\r\n  return `${year}-${month}-${day} ${hours}:${minutes}`;\r\n};\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.review-summary {\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n}\r\n.average-rating {\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 5px;\r\n}\r\n.stars {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 2px;\r\n}\r\n.stars-inline {\r\n  display: inline-flex;\r\n  align-items: center;\r\n  gap: 2px;\r\n}\r\n.bi-star, .bi-star-fill, .bi-star-half {\r\n  font-size: 20px; /* 별 사이즈 조정 */\r\n}\r\n.bi-star-fill, .bi-star-half {\r\n  color: #4caf50;\r\n}\r\n.review-ai-summary {\r\n  font-size: 16px;\r\n  margin-top: 10px;\r\n  padding-left: 20px;\r\n  padding-right: 20px;\r\n  word-wrap: break-word; /* 긴 문장이 한 줄에서 벗어나도록 처리 */\r\n}\r\n.review-page {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n  padding: 20px;\r\n  font-family: 'Noto Sans KR', sans-serif;\r\n}\r\n.content-wrapper {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  gap: 40px;\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n}\r\n.summary-section {\r\n  width: 35%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n  background-color: #f9f9f9;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n}\r\n.rating {\r\n  text-align: center;\r\n}\r\n.rating h1 {\r\n  font-size: 4rem;\r\n  color: #4caf50;\r\n}\r\n.rating-breakdown {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 5px;\r\n}\r\n.rating-bar {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n}\r\n.rating-bar span {\r\n  width: 30px;\r\n  text-align: right;\r\n}\r\n.progress-bar {\r\n  width: 100px;\r\n  height: 10px;\r\n  background-color: #ddd;\r\n  position: relative;\r\n}\r\n.progress {\r\n  height: 100%;\r\n  background-color: #4caf50;\r\n}\r\n.review-search input {\r\n  padding: 10px;\r\n  width: 100%;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n  margin-bottom: 20px;\r\n}\r\n.reviews-list-wrapper {\r\n  max-height: 400px;\r\n  overflow-y: auto;\r\n  overflow-x: hidden;\r\n}\r\n.reviews-list {\r\n  max-width: 100%;\r\n}\r\n.review-item {\r\n  border-bottom: 1px solid #ddd;\r\n  padding-bottom: 10px;\r\n  word-wrap: break-word;\r\n}\r\n.review-header {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n}\r\n.profile-image {\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  object-fit: cover;\r\n}\r\n.review-date {\r\n  font-size: 17px;\r\n  color: gray;\r\n}\r\n.difficulty {\r\n  font-size: 14px;\r\n  color: #777;\r\n}\r\n.review-photos {\r\n  display: flex;\r\n  gap: 10px;\r\n  margin-top: 10px;\r\n}\r\n.review-photo {\r\n  width: 100px;\r\n  height: 100px;\r\n  object-fit: cover;\r\n  border-radius: 5px;\r\n}\r\nbutton {\r\n  padding: 10px 20px;\r\n  border: none;\r\n  background-color: #4caf50;\r\n  color: white;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n  border-radius: 5px;\r\n  margin-top: 20px;\r\n}\r\nbutton:hover {\r\n  background-color: #45a049;\r\n}\r\n.review-content-wrapper {\r\n  margin: 1em;\r\n}\r\n.review-card {\r\n  width: 1000px;\r\n}\r\n</style>\r\n","import script from \"./MountainView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./MountainView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./MountainView.vue?vue&type=style&index=0&id=006d3105&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-006d3105\"]])\n\nexport default __exports__"],"names":["averageRating","ref","reviewSummary","reviews","ratingDistribution","reviewCount","searchQuery","reviewsToShow","fetchReviewsAndRatings","async","response","axios","get","console","log","data","value","toFixed","error","fetchSummary","summary","onMounted","fullStars","computed","Math","floor","halfStar","emptyStars","filteredReviews","filter","review","reviewContent","userId","toLowerCase","includes","visibleReviews","slice","loadMoreReviews","length","canShowMore","formatDate","dateString","date","Date","kstOffset","localDate","getTime","year","getFullYear","month","getMonth","toString","padStart","day","getDate","hours","getHours","minutes","getMinutes","__exports__"],"sourceRoot":""}