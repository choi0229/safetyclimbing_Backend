{"version":3,"file":"js/338.17c716f7.js","mappings":"mbAgDSA,IAAAA,KAAOC,QAAQC,UAAUC,YAClCH,IAAAA,KAAOC,QAAQG,aAAa,CAC1BC,cAAeC,EAAQ,MACvBC,QAASD,EAAQ,MACjBE,UAAWF,EAAQ,QAGnBG,EAAAA,GAAMC,YAAYC,EAAAA,IAElB,MAAMC,GAAeC,EAAAA,EAAAA,IAAI,MACnBC,GAAeD,EAAAA,EAAAA,IAAI,IACnBE,GAAeF,EAAAA,EAAAA,IAAI,IACnBG,GAAcH,EAAAA,EAAAA,IAAI,IAExB,IAAII,EAAa,KACbC,EAAuB,KACvBC,EAAwB,KACxBC,EAAqB,KACrBC,EAAe,KAcnB,SAASC,IACPL,EAAajB,IAAAA,IAAMY,EAAaW,OAAOC,QAAQ,CAAC,UAAW,YAAa,GACxExB,IAAAA,UAAY,qDAAsD,CAAEyB,QAAS,KAAMC,MAAMT,EAC3F,CAEAU,eAAeC,IACf,IACE,MAAMC,QAAiBC,MAAM,+BACvBC,QAAoBF,EAASG,OAEnClB,EAAaS,MAAQQ,EAAYE,SAASC,KAAKC,IAAO,CACpDC,SAAUD,EAAQE,SAASC,YAAY,GACvCC,UAAWJ,EAAQE,SAASC,YAAY,GACxCE,aAAcL,EAAQM,WAAWC,gBAAkB,SACnDC,cAAe,EACfC,aAAcT,EAAQM,WAAWI,sBAAwB,SACzDC,MAAOX,EAAQM,WAAWM,WAAa,EACvCC,OAAQb,EAAQM,WAAWQ,cAAgB,aAG7CC,IACAC,GACF,CAAE,MAAOC,GACPC,QAAQD,MAAM,gBAAiBA,EACjC,CACF,CAEA,SAASF,IACD7B,GACFJ,EAAWqC,YAAYjC,GAGzB,MAAMkC,EAAczC,EAAaS,MAAMW,KAAKsB,GAAa,CACvDA,EAASpB,SACToB,EAASjB,UACT,MAGFlB,EAAerB,IAAAA,UAAYuD,EAAa,CACtCE,OAAQ,GACRC,KAAM,GACNjC,QAAS,KACRC,MAAMT,EACX,CAEA,SAASkC,IACP,MAAMQ,EAAqB3D,IAAAA,qBAE3Bc,EAAaS,MAAMqC,SAASJ,IAC1B,MAAMK,EAAS7D,IAAAA,OAAS,CAACwD,EAASpB,SAAUoB,EAASjB,YACrDsB,EAAOC,UAAU,2BACCN,EAAShB,2CACTgB,EAASZ,wBAE3Be,EAAmBI,SAASF,EAAO,IAGrC5C,EAAW8C,SAASJ,EACtB,CAGD,SAASK,IACR,MAAMC,EAAyB,CAAC,EAChCnD,EAAaS,MAAMqC,SAASJ,IAC1B,MAAMhB,EAAegB,EAAShB,cAAgB,SAC9CyB,EAAuBzB,IACpByB,EAAuBzB,IAAiB,GAAK,CAAC,IAGnDzB,EAAaQ,MAAQ2C,OAAOC,QAAQF,GACjC/B,KAAI,EAAEM,EAAc4B,MAAW,CAAG5B,eAAcG,cAAeyB,MAC/DC,MAAK,CAACC,EAAGC,IAAMA,EAAE5B,cAAgB2B,EAAE3B,gBACnC6B,MAAM,EAAG,EACd,CAGE,SAASC,IACPC,IACAC,IACAC,GACF,CAEA,SAASF,IACT,MAAMG,EAAoB,CAAC,EAC3B/D,EAAaS,MAAMqC,SAASJ,IAC1BqB,EAAkBrB,EAASZ,eAAiBiC,EAAkBrB,EAASZ,eAAiB,GAAK,CAAC,IAGhG,MAAMkC,EAAMC,SAASC,eAAe,iBAAiBC,WAAW,MAC5D9D,GAAuBA,EAAsB+D,UAEjD/D,EAAwB,IAAIV,EAAAA,GAAMqE,EAAK,CACrCK,KAAM,WACNC,KAAM,CACJC,OAAQnB,OAAOoB,KAAKT,GACpBU,SAAU,CACR,CACEH,KAAMlB,OAAOsB,OAAOX,GACpBY,gBAAiB,CAAC,UAAW,UAAW,UAAW,eAM7D,CAEE,SAASd,IACP,MAAMe,EAAaC,MAAM,IAAIC,KAAK,GAClC9E,EAAaS,MAAMqC,SAASJ,IACtBA,EAASV,MAAQ,GAAG4C,EAAWlC,EAASV,MAAQ,IAAI,IAG1D,MAAMgC,EAAMC,SAASC,eAAe,gBAAgBC,WAAW,MAC3D/D,GAAsBA,EAAqBgE,UAE/ChE,EAAuB,IAAIT,EAAAA,GAAMqE,EAAK,CACpCK,KAAM,MACNC,KAAM,CACJC,OAAQ,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,MAAO,OAC7EE,SAAU,CACR,CACEM,MAAO,QACPT,KAAMM,EACND,gBAAiB,0BACjBK,YAAa,wBACbC,YAAa,KAInBC,QAAS,CACPC,OAAQ,CACNC,EAAG,CAAEC,aAAa,MAI1B,CAEA,SAASvB,IACP,MAAMwB,EAAe,CAAEC,IAAG,EAAGC,KAAI,EAAGC,KAAI,EAAGC,KAAI,GAC/C1F,EAAaS,MAAMqC,SAASJ,SACYiD,IAAlCL,EAAa5C,EAASR,SAAuBoD,EAAa5C,EAASR,SAAS,IAGlF,MAAM8B,EAAMC,SAASC,eAAe,cAAcC,WAAW,MACzD7D,GAAoBA,EAAmB8D,UAE3C9D,EAAqB,IAAIX,EAAAA,GAAMqE,EAAK,CAClCK,KAAM,MACNC,KAAM,CACJC,OAAQnB,OAAOoB,KAAKc,GACpBb,SAAU,CACR,CACEM,MAAO,SACPT,KAAMlB,OAAOsB,OAAOY,GACpBX,gBAAiB,2BACjBK,YAAa,yBACbC,YAAa,KAInBC,QAAS,CACPC,OAAQ,CACNC,EAAG,CAAEC,aAAa,MAI1B,C,OAlLAO,EAAAA,EAAAA,KAAU/E,UACR,IACEL,UACMM,UAEAoC,IACNS,GACF,CAAE,MAAOrB,GACPC,QAAQD,MAAM,UAAWA,EAC3B,K,g2CCvEJ,MAAMuD,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O","sources":["webpack://frontend/./src/views/AccidentView.vue","webpack://frontend/./src/views/AccidentView.vue?cc62"],"sourcesContent":["<template>\r\n    <HeaderView style=\"z-index: 4;width: 1920px;\"></HeaderView>\r\n    <div class=\"dashboard\">\r\n      <aside class=\"sidebar\">\r\n        <section class=\"stat-section\">\r\n          <div class=\"search\">\r\n            <input type=\"text\" v-model=\"searchQuery\" placeholder=\"산 검색\" />\r\n            <img id=\"search-img\" src=\"https://s3.ap-northeast-2.amazonaws.com/cdn.wecode.co.kr/icon/search.png\" @click=\"searchPlaces\">\r\n          </div>\r\n        </section>\r\n        <section class=\"chart-section\">\r\n          <h2>2024 산악사고 Top3</h2>\r\n          <div v-for=\"(accident, index) in accidentRank\" :key=\"index\">\r\n            <p>{{ index + 1 }}: {{ accident.mountainName }} ({{ accident.countAccident }}건)</p>\r\n          </div>\r\n        </section>\r\n        <div class=\"chart1-section\">\r\n          <h2>산악 사고 유형</h2>\r\n          <canvas id=\"doughnutChart\"></canvas>\r\n        </div>\r\n      </aside>\r\n      <main class=\"main\">\r\n        <div id=\"map\" ref=\"mapContainer\"></div>\r\n        <div id=\"grapth\">\r\n        <section class=\"bottomchart-section\">\r\n          <h2 id=\"monthly_stat\">월별 사고 통계</h2>\r\n          <canvas id=\"monthlyChart\"></canvas>\r\n        </section>\r\n        <div class=\"bottomchart-section\">\r\n          <h2>계절별 사고</h2>\r\n          <canvas id=\"statsChart\"></canvas>\r\n        </div>\r\n      </div>\r\n      </main>\r\n    </div>\r\n  </template>\r\n  \r\n  <script setup>\r\n  import HeaderView from '@/components/HeaderView.vue';\r\n  import { ref, onMounted } from \"vue\";\r\n  import L from \"leaflet\";\r\n  import \"leaflet/dist/leaflet.css\";\r\n  import \"leaflet.heat\";\r\n  import \"leaflet.markercluster\";\r\n  import \"leaflet.markercluster/dist/MarkerCluster.css\";\r\n  import \"leaflet.markercluster/dist/MarkerCluster.Default.css\";\r\n  import { Chart, registerables } from \"chart.js\";\r\n  \r\n  delete L.Icon.Default.prototype._getIconUrl;\r\nL.Icon.Default.mergeOptions({\r\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\r\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\r\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\r\n});\r\n\r\n  Chart.register(...registerables);\r\n  \r\n  const mapContainer = ref(null);\r\n  const accidentData = ref([]);\r\n  const accidentRank = ref([]);\r\n  const searchQuery = ref(\"\");\r\n\r\n  let leafletMap = null;\r\n  let monthlyChartInstance = null;\r\n  let doughnutChartInstance = null;\r\n  let statsChartInstance = null;\r\n  let heatmapLayer = null;\r\n  \r\n  onMounted(async () => {\r\n    try {\r\n      initializeLeafletMap();\r\n      await loadAccidentData();\r\n      \r\n      await loadAccidentListRank();\r\n      loadCharts();\r\n    } catch (error) {\r\n      console.error(\"초기화 오류:\", error);\r\n    }\r\n  });\r\n  \r\n  function initializeLeafletMap() {\r\n    leafletMap = L.map(mapContainer.value).setView([37.658955, 126.977834], 8);\r\n    L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", { maxZoom: 19 }).addTo(leafletMap);\r\n  }\r\n  \r\n  async function loadAccidentData() {\r\n  try {\r\n    const response = await fetch(\"/data/2023산악사고 copy.geojson\"); // GeoJSON 파일 경로\r\n    const geojsonData = await response.json();\r\n\r\n    accidentData.value = geojsonData.features.map((feature) => ({\r\n      latitude: feature.geometry.coordinates[1], // 위도\r\n      longitude: feature.geometry.coordinates[0], // 경도\r\n      mountainName: feature.properties.acdnt_place_nm || \"알 수 없음\", // GeoJSON 속성에서 가져오기\r\n      countAccident: 0,\r\n      accidentType: feature.properties.acdnt_cause_asort_nm || \"알 수 없음\",\r\n      month: feature.properties.dclr_mnth || 0,\r\n      season: feature.properties.season_se_nm || \"알 수 없음\",\r\n    }));\r\n\r\n    addHeatmapLayer();\r\n    addMarkersToMap(); // 마커 추가\r\n  } catch (error) {\r\n    console.error(\"사고 데이터 로드 오류:\", error);\r\n  }\r\n}\r\n\r\nfunction addHeatmapLayer() {\r\n    if (heatmapLayer) {\r\n      leafletMap.removeLayer(heatmapLayer); // 기존 히트맵 제거\r\n    }\r\n  \r\n    const heatmapData = accidentData.value.map((accident) => [\r\n      accident.latitude,\r\n      accident.longitude,\r\n      0.5, // 히트맵 강도 (값은 조정 가능)\r\n    ]);\r\n  \r\n    heatmapLayer = L.heatLayer(heatmapData, {\r\n      radius: 25, // 히트맵 점의 크기\r\n      blur: 15, // 흐림 효과\r\n      maxZoom: 17,\r\n    }).addTo(leafletMap);\r\n  }\r\n  \r\n  function addMarkersToMap() {\r\n    const markerClusterGroup = L.markerClusterGroup();\r\n  \r\n    accidentData.value.forEach((accident) => {\r\n      const marker = L.marker([accident.latitude, accident.longitude]);\r\n      marker.bindPopup(`\r\n        <b>사고 위치:</b> ${accident.mountainName}<br>\r\n        <b>사고 유형:</b> ${accident.accidentType}\r\n      `);\r\n      markerClusterGroup.addLayer(marker);\r\n    });\r\n  \r\n    leafletMap.addLayer(markerClusterGroup);\r\n  }\r\n  \r\n // 사고 데이터로 순위 계산\r\n function loadAccidentListRank() {\r\n  const mountainAccidentCounts = {};\r\n  accidentData.value.forEach((accident) => {\r\n    const mountainName = accident.mountainName || \"알 수 없음\";\r\n    mountainAccidentCounts[mountainName] =\r\n      (mountainAccidentCounts[mountainName] || 0) + 1;\r\n  });\r\n\r\n  accidentRank.value = Object.entries(mountainAccidentCounts)\r\n    .map(([mountainName, count]) => ({ mountainName, countAccident: count }))\r\n    .sort((a, b) => b.countAccident - a.countAccident)\r\n    .slice(0, 3); // Top 3\r\n}\r\n\r\n  \r\n  function loadCharts() {\r\n    loadDoughnutChart();\r\n    loadMonthlyChart();\r\n    loadStatsChart();\r\n  }\r\n  \r\n  function loadDoughnutChart() {\r\n  const accidentTypeCount = {};\r\n  accidentData.value.forEach((accident) => {\r\n    accidentTypeCount[accident.accidentType] = (accidentTypeCount[accident.accidentType] || 0) + 1;\r\n  });\r\n\r\n  const ctx = document.getElementById(\"doughnutChart\").getContext(\"2d\");\r\n  if (doughnutChartInstance) doughnutChartInstance.destroy();\r\n\r\n  doughnutChartInstance = new Chart(ctx, {\r\n    type: \"doughnut\",\r\n    data: {\r\n      labels: Object.keys(accidentTypeCount),\r\n      datasets: [\r\n        {\r\n          data: Object.values(accidentTypeCount),\r\n          backgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\", \"#4BC0C0\"],\r\n        },\r\n      ],\r\n    },\r\n\r\n  });\r\n}\r\n \r\n  function loadMonthlyChart() {\r\n    const monthCount = Array(12).fill(0);\r\n    accidentData.value.forEach((accident) => {\r\n      if (accident.month > 0) monthCount[accident.month - 1]++;\r\n    });\r\n  \r\n    const ctx = document.getElementById(\"monthlyChart\").getContext(\"2d\");\r\n    if (monthlyChartInstance) monthlyChartInstance.destroy();\r\n  \r\n    monthlyChartInstance = new Chart(ctx, {\r\n      type: \"bar\",\r\n      data: {\r\n        labels: [\"1월\", \"2월\", \"3월\", \"4월\", \"5월\", \"6월\", \"7월\", \"8월\", \"9월\", \"10월\", \"11월\", \"12월\"],\r\n        datasets: [\r\n          {\r\n            label: \"월별 사고\",\r\n            data: monthCount,\r\n            backgroundColor: \"rgba(75, 192, 192, 0.6)\",\r\n            borderColor: \"rgba(75, 192, 192, 1)\",\r\n            borderWidth: 1,\r\n          },\r\n        ],\r\n      },\r\n      options: {\r\n        scales: {\r\n          y: { beginAtZero: true },\r\n        },\r\n      },\r\n    });\r\n  }\r\n  \r\n  function loadStatsChart() {\r\n    const seasonCounts = { 봄: 0, 여름: 0, 가을: 0, 겨울: 0 };\r\n    accidentData.value.forEach((accident) => {\r\n      if (seasonCounts[accident.season] !== undefined) seasonCounts[accident.season]++;\r\n    });\r\n  \r\n    const ctx = document.getElementById(\"statsChart\").getContext(\"2d\");\r\n    if (statsChartInstance) statsChartInstance.destroy();\r\n  \r\n    statsChartInstance = new Chart(ctx, {\r\n      type: \"bar\",\r\n      data: {\r\n        labels: Object.keys(seasonCounts),\r\n        datasets: [\r\n          {\r\n            label: \"계절별 사고\",\r\n            data: Object.values(seasonCounts),\r\n            backgroundColor: \"rgba(153, 102, 255, 0.6)\",\r\n            borderColor: \"rgba(153, 102, 255, 1)\",\r\n            borderWidth: 1,\r\n          },\r\n        ],\r\n      },\r\n      options: {\r\n        scales: {\r\n          y: { beginAtZero: true },\r\n        },\r\n      },\r\n    });\r\n  }\r\n\r\n  \r\n  </script>\r\n  \r\n  \r\n  <style scoped>\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n  }\r\n  \r\n  body, html {\r\n    overflow: hidden;\r\n    font-family: 'Roboto', sans-serif;\r\n    background-color: #f7f8fa;\r\n    color: #2c3e50;\r\n  }\r\n  \r\n  .dashboard {\r\n    display: grid;\r\n    grid-template-columns: 280px 1fr;\r\n    height: 100%;\r\n  }\r\n  \r\n  .sidebar {\r\n    background-color: #ffffff;\r\n    padding: 20px;\r\n    box-shadow: 2px 0px 12px rgba(0, 0, 0, 0.05);\r\n    border-radius: 10px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 15px;\r\n    height: 100%;\r\n    overflow-y: auto;\r\n  }\r\n  \r\n  .stat-section h3,\r\n  .chart-section h2,\r\n  .chart1-section h2 {\r\n    font-size: 1.4em;\r\n    color: #34495e;\r\n    font-weight: 600;\r\n    margin-bottom: 10px;\r\n    padding-left: 5px;\r\n    border-left: 4px solid #3498db;\r\n  }\r\n  \r\n  .chart-section p {\r\n    font-size: 1em;\r\n    font-weight: 600;\r\n    margin: 10px 0;\r\n    padding: 15px;\r\n    border-radius: 8px;\r\n    color: #fff;\r\n    transition: transform 0.2s ease, box-shadow 0.2s ease;\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  }\r\n  \r\n  .chart-section p:nth-child(1) {\r\n    background-color: #ff6b6b;\r\n  }\r\n  \r\n  .chart-section p:nth-child(2) {\r\n    background-color: #ffa94d;\r\n  }\r\n  \r\n  .chart-section p:nth-child(3) {\r\n    background-color: #4dabf7;\r\n  }\r\n  \r\n  .chart-section p:hover {\r\n    transform: translateY(-3px);\r\n    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);\r\n  }\r\n  \r\n  .bottomchart-section {\r\n    width: 100%;\r\n  }\r\n  \r\n  .overview-charts {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    gap: 15px;\r\n    margin-top: 15px;\r\n  }\r\n  \r\n  .chart2-section h2 {\r\n    font-size: 0.9em;\r\n    color: #7f8c8d;\r\n    margin-bottom: 5px;\r\n  }\r\n  \r\n  #highRiskChart,\r\n  #mediumRiskChart,\r\n  #lowRiskChart {\r\n    width: 70px;\r\n    height: 70px;\r\n    margin: 0 auto;\r\n  }\r\n  \r\n  .main {\r\n    padding: 20px;\r\n    background-color: #fafbfc;\r\n    overflow-y: auto;\r\n  }\r\n  \r\n  #map {\r\n    height: 55vh;\r\n    border-radius: 12px;\r\n    box-shadow: 0px 6px 12px rgba(0, 0, 0, 0.1);\r\n    margin-bottom: 15px;\r\n  }\r\n  \r\n  #grapth {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    gap: 15px;\r\n    background-color: #ffffff;\r\n    padding: 15px;\r\n    border-radius: 12px;\r\n    box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.08);\r\n    height: 280px;\r\n  }\r\n  \r\n  .chart-section,\r\n  .chart1-section {\r\n    width: 100%;\r\n    margin-top: 30px;\r\n  }\r\n  \r\n  .chart1-section h2,\r\n  .chart-section h2 {\r\n    color: #555;\r\n    font-weight: 600;\r\n    margin-bottom: 8px;\r\n  }\r\n  \r\n  .chart1-section canvas,\r\n  .chart-section canvas {\r\n    width: 100%;\r\n    height: 180px;\r\n    border-radius: 12px;\r\n    box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.05);\r\n    background-color: #f5f8fa;\r\n  }\r\n  \r\n  .search {\r\n    position: relative;\r\n    width: 250px;\r\n  }\r\n  \r\n  input {\r\n    width: 100%;\r\n    border: 1px solid #bbb;\r\n    border-radius: 8px;\r\n    padding: 10px 12px;\r\n    font-size: 14px;\r\n  }\r\n  \r\n  #search-img {\r\n    position : absolute;\r\n    width: 17px;\r\n    top: 10px;\r\n    right: 12px;\r\n    margin: 0;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  </style>\r\n  ","import script from \"./AccidentView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AccidentView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./AccidentView.vue?vue&type=style&index=0&id=486c37af&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-486c37af\"]])\n\nexport default __exports__"],"names":["L","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","Chart","register","registerables","mapContainer","ref","accidentData","accidentRank","searchQuery","leafletMap","monthlyChartInstance","doughnutChartInstance","statsChartInstance","heatmapLayer","initializeLeafletMap","value","setView","maxZoom","addTo","async","loadAccidentData","response","fetch","geojsonData","json","features","map","feature","latitude","geometry","coordinates","longitude","mountainName","properties","acdnt_place_nm","countAccident","accidentType","acdnt_cause_asort_nm","month","dclr_mnth","season","season_se_nm","addHeatmapLayer","addMarkersToMap","error","console","removeLayer","heatmapData","accident","radius","blur","markerClusterGroup","forEach","marker","bindPopup","addLayer","loadAccidentListRank","mountainAccidentCounts","Object","entries","count","sort","a","b","slice","loadCharts","loadDoughnutChart","loadMonthlyChart","loadStatsChart","accidentTypeCount","ctx","document","getElementById","getContext","destroy","type","data","labels","keys","datasets","values","backgroundColor","monthCount","Array","fill","label","borderColor","borderWidth","options","scales","y","beginAtZero","seasonCounts","봄","여름","가을","겨울","undefined","onMounted","__exports__"],"sourceRoot":""}