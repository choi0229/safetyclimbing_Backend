{"version":3,"file":"js/117.c7d2ae1b.js","mappings":"iOAaA,MAAMA,GAASC,EAAAA,EAAAA,MACTC,GAAQC,EAAAA,EAAAA,MAERC,GAAaC,EAAAA,EAAAA,IAAIC,KAAKC,MAAML,EAAMM,MAAMC,SAExCC,EAASA,IAAMV,EAAOW,OAkL5BC,eAAeC,EAAYC,EAAQC,EAAKC,GACpC,IACI,MAAMC,QAAiBC,MAAMH,GACvBI,QAAmBF,EAASG,OAG5BC,EAAYF,EAAWG,SAASC,KAAIC,IACtC,MAAMC,EAAMD,EAAKE,SAASC,YAAY,GAChCC,EAAMJ,EAAKE,SAASC,YAAY,GACtC,OAAOE,OAAOC,aAAaC,YAAYH,EAAKH,EAAI,IAI9CO,QAAyBH,OAAOI,0BAA0BnB,EAAOoB,gBAAiBb,GAExFW,EAAiBG,SAAQ,CAACC,EAAUC,KAChC,MAAMC,EAAWF,EAASG,OAAS,EAC7Bf,EAAOL,EAAWG,SAASe,GAEjC,GAAGb,EAAKgB,WAAWC,UAAYrC,EAAWsC,MAAMC,WAAW,CAE3D,IAAIC,EAAW5B,EACf,OAAQQ,EAAKgB,WAAWK,MACpB,IAAK,KACDD,EAAW,uBACX,MACJ,IAAK,KACDA,EAAW,uBACX,MACJ,IAAK,KACDA,EAAW,sBACX,MACJ,IAAK,KACDA,EAAW,mBACX,MACJ,QACIA,EAAW5B,EAInB,MAAM8B,EAAShC,EAAOiC,SAASC,IAAI,CAC/BZ,SAAUP,OAAOoB,WAAWlB,YACxBF,OAAOqB,KAAKC,UAAUf,EAASgB,WAC/BvB,OAAOqB,KAAKC,UAAUf,EAASiB,UAC/Bf,GAEJgB,UAAW,CACPC,MAAOX,EACPY,eAAgB3B,OAAO4B,eAAeC,OACtCC,MAAO,GACPpB,OAAQ,IAEZqB,MAAO,CACHC,KAAMrC,EAAKgB,WAAWsB,SAAW,GACjCC,KAAM,kBACNC,aAAcnC,OAAOoC,MAAMC,MAC3BC,aAAc,EACdX,eAAgB3B,OAAO4B,eAAeC,OACtCU,YAAa,IAAIvC,OAAOwC,WAAW,GAAI,KAE3CC,YAAa,aAAa1B,mFAA0FpB,EAAKgB,WAAWsB,SAAW,SAAStC,EAAKgB,WAAW+B,YAAc,aAI1LzD,EAAO0D,sBAAsBC,kBAAkBC,IACvC7C,OAAO8C,QAAQD,IAAmBA,IAAmB5B,IACrDhC,EAAO8D,QAAQC,UAAUC,UAAW,EACpChE,EAAO8D,QAAQC,UAAUP,YAAcxB,EAAOwB,YAClD,GAEJ,IAIR,CAAE,MAAOS,GACLC,QAAQD,MAAM,GAAGhE,mBAAsBgE,EAC3C,CACJ,C,OA5PAE,EAAAA,EAAAA,KAAU,KAER,MAAMC,EAASC,SAASC,cAAc,UACtCF,EAAOG,IAAM,qEAEbH,EAAOI,OAAS,KACdC,GAAY,EAEdJ,SAASK,KAAKC,YAAYP,GAE1B,MAAMQ,EAAOP,SAASC,cAAc,QAKpCxE,eAAe2E,IAEb1D,OAAO8D,IAAIC,mBAAqB,wLAGhC,MAAM9E,EAAS,IAAIe,OAAOgE,OAAO,kBAAmB,CAClD3D,sBAAuBL,OAAOiE,0BAE9BC,gBAAiBZ,SAASC,cAAc,OAExCY,WAAW,EAGXC,sBAAsB,EACtBC,YAAY,EACZC,iBAAiB,EACjBC,iBAAiB,EACjBC,kBAAkB,EAClBzB,SAAS,EACT0B,UAAU,IAGNC,QAAoBC,IACpBC,EAAeC,EAAwBH,EAAanG,EAAWsC,MAAMC,YAE3EgE,EAAe7F,EAAQ2F,GAGvBG,EAAc9F,EAAQ2F,GAEtB5F,EAAYC,EAAO,8BAA8B,qBACnD,CAEAF,eAAe4F,IACb,MAAMvF,QAAiBC,MAAM,yBACvB2F,QAAa5F,EAASG,OAC5B,OAAOyF,CACT,CAEA,SAASH,EAAwBH,EAAaO,GAC5C,MAAO,IACFP,EACHjF,SAAUiF,EAAYjF,SAASyF,QAAOC,GACpCA,EAAQxE,WAAWyE,SAASC,SAASJ,KAG3C,CAEA,SAASH,EAAe7F,EAAQyF,GAC9BzF,EAAOqG,YAAYnE,IAAInB,OAAOuF,kBAAkBC,KAAKd,EAAa,CAChEe,OAAQzF,OAAOoC,MAAMsD,mBAAmB,WACxCC,KAAM3F,OAAOoC,MAAMsD,mBAAmB,WACtCE,YAAa,EACbC,eAAe,KACbC,MAAMC,IACR9G,EAAO+G,MAAMD,EAAW,GAE5B,CAEA,SAAShB,EAAc9F,EAAQyF,GAC7B,IAAI5E,EAAc,GAalB,GAVA4E,EAAYjF,SAASa,SAAS6E,IACtBc,MAAMC,QAAQf,EAAQtF,SAASC,cAC/BqF,EAAQtF,SAASC,YAAYQ,SAAQ6F,IAC7BF,MAAMC,QAAQC,KACdrG,EAAcA,EAAYsG,OAAOD,GACrC,GAER,IAGuB,IAAvBrG,EAAYuG,OAEZ,YADAlD,QAAQmD,KAAK,6CAKjB,MAAMC,EAAQvG,OAAOwG,WAAWC,MAC1BC,EAAO1G,OAAOwG,WAAWG,WAAWJ,EAAOzG,EAAYuG,OAAQ,IAAIrG,OAAOwG,YAG1EI,EAAmB,IAAI5G,OAAO6G,wBAGpC,IAAIC,EAAe,IAAI9G,OAAOoB,YAAY,KAAM,KAAM,KAClD2F,EAAU,GACVC,GAAS,GAEwB,OAAjCzI,EAAWsC,OAAOC,YAClBgG,EAAe,IAAI9G,OAAOoB,YAAY,KAAM,KAAM,KAClD2F,EAAU,GACVC,GAAS,IAC+B,QAAjCzI,EAAWsC,OAAOC,YACzBgG,EAAe,IAAI9G,OAAOoB,WAAW,IAAK,IAAK,KAC/C2F,EAAU,IACVC,GAAS,IAC+B,QAAjCzI,EAAWsC,OAAOC,YACzBgG,EAAe,IAAI9G,OAAOoB,WAAW,IAAK,IAAK,KAC/C2F,GAAW,GACXC,GAAS,IAC+B,QAAjCzI,EAAWsC,OAAOC,aACzBgG,EAAe,IAAI9G,OAAOoB,YAAY,KAAM,IAAK,KACjD2F,EAAU,GACVC,GAAS,IAIblH,EAAYQ,SAAQ,EAAEiB,EAAWC,GAAWyF,KACxC,MAAMC,EAAOlH,OAAOwG,WAAWG,WAAWJ,EAAOU,EAAG,IAAIjH,OAAOwG,YACzDjG,EAAWP,OAAOoB,WAAWlB,YAAYqB,EAAWC,GAC1DoF,EAAiBO,UAAUD,EAAM3G,EAAS,IAI9C,MAAMU,EAAShC,EAAOiC,SAASC,IAAI,CAC/BZ,SAAUqG,EACVQ,MAAO,CACHC,UAAW,GACXC,MAAOtH,OAAOoC,MAAMmF,MACpBpF,aAAcnC,OAAOoC,MAAMsD,mBAAmB,WAC9CpD,aAAc,EACdkF,gBAAiBxH,OAAOyH,gBAAgBC,mBAIhDzI,EAAO0I,MAAMC,OAAOhF,kBAAiB,KACjC,MAAMrC,EAAWU,EAAOV,SAASsH,SAAS5I,EAAO0I,MAAMG,aACvD,GAAIvH,EAAU,CAEV,MAAMwH,EAAY/H,OAAOgI,WAAWC,wBAAwB1H,GAG5DtB,EAAOiJ,OAAOC,gBAAgBJ,EAAWjB,GAGzC7H,EAAOiJ,OAAOE,QAAQ,CAClBC,YAAa,CACTtB,QAAS/G,OAAOqB,KAAKiH,UAAUvB,GAC/BC,MAAOhH,OAAOqB,KAAKiH,UAAUtB,GAC7BuB,KAAM,IAGlB,KAIJtJ,EAAO0I,MAAMa,UAAYjC,EAAMkC,QAC/BxJ,EAAO0I,MAAMe,SAAWhC,EAAK+B,QAC7BxJ,EAAO0I,MAAMG,YAAcvB,EAAMkC,QACjCxJ,EAAO0I,MAAMgB,WAAa3I,OAAO4I,WAAWC,UAC5C5J,EAAO0I,MAAMmB,WAAa,GAC1B7J,EAAO0I,MAAMoB,eAAgB,EAC7B9J,EAAO+J,SAASC,OAAO1C,EAAOG,EAClC,CA/JE7C,EAAKqF,IAAM,aACXrF,EAAKsF,KAAO,uFACZ7F,SAASK,KAAKC,YAAYC,EA6J5B,I,+SCzLA,MAAMuF,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O","sources":["webpack://frontend/./src/views/MobileCourse3D.vue","webpack://frontend/./src/views/MobileCourse3D.vue?0110"],"sourcesContent":["<template>\r\n  <div>\r\n    <button @click=\"goBack\" class=\"back-button\"><img src=\"/images/뒤로가기.png\" alt=\"돋보기 아이콘\" width=\"30\"\r\n        height=\"30\"></button>\r\n    <!-- 연간 분석 섹션 -->\r\n    <div id=\"cesiumContainer\" style=\"width:100%; height: 100vh;\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { onMounted, ref } from 'vue';\r\nimport { useRouter, useRoute } from 'vue-router';\r\n\r\nconst router = useRouter();\r\nconst route = useRoute();\r\n\r\nconst courseData = ref(JSON.parse(route.query.course));\r\n\r\nconst goBack = () => router.back();\r\n\r\n/* global Cesium */\r\nonMounted(() => {\r\n  // Cesium.js 로딩\r\n  const script = document.createElement('script');\r\n  script.src = 'https://cdn.jsdelivr.net/npm/cesium@1.122.0/Build/Cesium/Cesium.js';\r\n\r\n  script.onload = () => {\r\n    initCesium();\r\n  };\r\n  document.head.appendChild(script);\r\n\r\n  const link = document.createElement('link');\r\n  link.rel = 'stylesheet';\r\n  link.href = 'https://cesium.com/downloads/cesiumjs/releases/1.95/Build/Cesium/Widgets/widgets.css';\r\n  document.head.appendChild(link);\r\n\r\n  async function initCesium() {\r\n    // Cesium Ion 토큰 설정\r\n    Cesium.Ion.defaultAccessToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiI5Nzg1OWEzOS0yMWU0LTQ1MTEtOGY5NC1hZjg0YmFhNzgxMDMiLCJpZCI6MjU2MDAxLCJpYXQiOjE3MzE4OTgxMzB9.oNztRJnt40X1wN0JAS90SaLqSFEZIdQBSE7jFqLeH3g';\r\n\r\n    // Cesium 뷰어 초기화\r\n    const viewer = new Cesium.Viewer('cesiumContainer', {\r\n      terrainProvider: await Cesium.createWorldTerrainAsync(),  // 고정밀 지형 데이터 사용\r\n      // 로고와 저작권 정보 숨기기\r\n      creditContainer: document.createElement('div'), // 빈 div로 대체\r\n      // 시계와 타임라인 숨기기\r\n      animation: false,\r\n\r\n      // 상단 도구 모음 버튼 숨기기\r\n      navigationHelpButton: false,\r\n      homeButton: false,\r\n      sceneModePicker: false,\r\n      baseLayerPicker: false,\r\n      fullscreenButton: false,\r\n      infoBox: false, // 정보 상자 비활성화 (필요 시)\r\n      geocoder: false // 검색 창 숨기기\r\n    });\r\n\r\n    const geoJsonData = await fetchGeoJson();\r\n    const filteredData = filterGeoJsonByPMNTN_NM(geoJsonData, courseData.value.courseName);\r\n\r\n    displayGeoJson(viewer, filteredData);\r\n\r\n    // 경로를 따라 마커 이동 애니메이션 시작\r\n    animateMarker(viewer, filteredData);\r\n\r\n    loadMarkers(viewer,\"/data/2023산악사고_인왕산2.geojson\",\"/images/danger.png\");\r\n  }\r\n\r\n  async function fetchGeoJson() {\r\n    const response = await fetch('/data/new북한산2.geojson');\r\n    const data = await response.json();\r\n    return data;\r\n  }\r\n\r\n  function filterGeoJsonByPMNTN_NM(geoJsonData, searchKeyword) {\r\n    return {\r\n      ...geoJsonData,\r\n      features: geoJsonData.features.filter(feature =>\r\n        feature.properties.PMNTN_NM.includes(searchKeyword)\r\n      )\r\n    }\r\n  }\r\n\r\n  function displayGeoJson(viewer, geoJsonData) {\r\n    viewer.dataSources.add(Cesium.GeoJsonDataSource.load(geoJsonData, {\r\n      stroke: Cesium.Color.fromCssColorString('#00ff00'),\r\n      fill: Cesium.Color.fromCssColorString('#00ff00'),\r\n      strokeWidth: 3,\r\n      clampToGround: true,\r\n    })).then((dataSource) => {\r\n      viewer.flyTo(dataSource);\r\n    });\r\n  }\r\n\r\n  function animateMarker(viewer, geoJsonData) {\r\n    let coordinates = [];\r\n\r\n    // 좌표를 하나의 배열로 만들기\r\n    geoJsonData.features.forEach((feature) => {\r\n        if (Array.isArray(feature.geometry.coordinates)) {\r\n            feature.geometry.coordinates.forEach(line => {\r\n                if (Array.isArray(line)) {\r\n                    coordinates = coordinates.concat(line);\r\n                }\r\n            });\r\n        }\r\n    });\r\n\r\n    if (coordinates.length === 0) {\r\n        console.warn(\"No valid coordinates found for animation.\");\r\n        return;\r\n    }\r\n\r\n    // 시작 시간과 종료 시간 설정\r\n    const start = Cesium.JulianDate.now();\r\n    const stop = Cesium.JulianDate.addSeconds(start, coordinates.length, new Cesium.JulianDate());\r\n\r\n    // SampledPositionProperty를 사용하여 시간에 따른 위치 설정\r\n    const positionProperty = new Cesium.SampledPositionProperty();\r\n\r\n    // 타입에 따라 카메라 시점 설정\r\n    let cameraOffset = new Cesium.Cartesian3(-500, -1200, 1000); // 기본값\r\n    let heading = 30; // 기본값\r\n    let pitch = -25; // 기본값\r\n\r\n    if (courseData.value?.courseName === '마루') {\r\n        cameraOffset = new Cesium.Cartesian3(-500, -1200, 1000);\r\n        heading = 30;\r\n        pitch = -25;\r\n    } else if (courseData.value?.courseName === '부암동') {\r\n        cameraOffset = new Cesium.Cartesian3(300, 100, 300);\r\n        heading = 250;\r\n        pitch = -20;\r\n    } else if (courseData.value?.courseName === '무악동') {\r\n        cameraOffset = new Cesium.Cartesian3(50, -200, 330);\r\n        heading = -20;\r\n        pitch = -20;\r\n    } else if (courseData.value?.courseName === '홍제동') {\r\n        cameraOffset = new Cesium.Cartesian3(-150, -200, 330);\r\n        heading = 50;\r\n        pitch = -20;\r\n    }\r\n\r\n    // 좌표마다 시간을 추가하여 마커가 부드럽게 이동하도록 함\r\n    coordinates.forEach(([longitude, latitude], i) => {\r\n        const time = Cesium.JulianDate.addSeconds(start, i, new Cesium.JulianDate());\r\n        const position = Cesium.Cartesian3.fromDegrees(longitude, latitude);\r\n        positionProperty.addSample(time, position); // 시간에 따른 위치 샘플 추가\r\n    });\r\n\r\n    // 마커를 경로에 맞춰 시간에 따라 이동시키기\r\n    const entity = viewer.entities.add({\r\n        position: positionProperty,\r\n        point: {\r\n            pixelSize: 20,\r\n            color: Cesium.Color.WHITE,\r\n            outlineColor: Cesium.Color.fromCssColorString('#ffa500'),\r\n            outlineWidth: 3, // 테두리 두께\r\n            heightReference: Cesium.HeightReference.CLAMP_TO_GROUND, // 지형에 고정\r\n        }\r\n    });\r\n\r\n    viewer.clock.onTick.addEventListener(() => {\r\n        const position = entity.position.getValue(viewer.clock.currentTime);\r\n        if (position) {\r\n            // 카메라의 목표 좌표계를 엔터티 위치로 변환\r\n            const transform = Cesium.Transforms.eastNorthUpToFixedFrame(position);\r\n\r\n            // 일정한 거리와 각도로 카메라 설정\r\n            viewer.camera.lookAtTransform(transform, cameraOffset);\r\n\r\n            // 카메라 각도 설정 (필요시 조정 가능)\r\n            viewer.camera.setView({\r\n                orientation: {\r\n                    heading: Cesium.Math.toRadians(heading), // 헤딩\r\n                    pitch: Cesium.Math.toRadians(pitch), // 피치\r\n                    roll: 0 // 롤\r\n                }\r\n            });\r\n        }\r\n    });\r\n\r\n    // 시간 설정\r\n    viewer.clock.startTime = start.clone();\r\n    viewer.clock.stopTime = stop.clone();\r\n    viewer.clock.currentTime = start.clone();\r\n    viewer.clock.clockRange = Cesium.ClockRange.LOOP_STOP; // 루프 종료 시 정지\r\n    viewer.clock.multiplier = 30; // 시간 배속\r\n    viewer.clock.shouldAnimate = true; // 애니메이션 활성화\r\n    viewer.timeline.zoomTo(start, stop); // 타임라인 설정\r\n}\r\n\r\n});\r\n\r\n// 마커 추가\r\nasync function loadMarkers(viewer, url, defaultImageSrc) {\r\n    try {\r\n        const response = await fetch(url);\r\n        const markerData = await response.json();\r\n\r\n        // 좌표의 고도를 얻기 위해 Cesium의 샘플 지형 함수를 사용\r\n        const positions = markerData.features.map(spot => {\r\n            const lat = spot.geometry.coordinates[1];\r\n            const lng = spot.geometry.coordinates[0];\r\n            return Cesium.Cartographic.fromDegrees(lng, lat);\r\n        });\r\n\r\n        // 지형을 샘플링하여 정확한 고도 값을 얻음\r\n        const updatedPositions = await Cesium.sampleTerrainMostDetailed(viewer.terrainProvider, positions);\r\n\r\n        updatedPositions.forEach((position, index) => {\r\n            const altitude = position.height + 1.0; // 지형 위로 1m 상승\r\n            const spot = markerData.features[index];\r\n\r\n            if(spot.properties.MNTN_NM2 == courseData.value.courseName){\r\n              // 타입에 따라 이미지 설정\r\n            let imageSrc = defaultImageSrc; // 기본 이미지\r\n            switch (spot.properties.type) {\r\n                case '실족':\r\n                    imageSrc = '/images/strumble.png';\r\n                    break;\r\n                case '조난':\r\n                    imageSrc = '/images/distress.png';\r\n                    break;\r\n                case '질환':\r\n                    imageSrc = '/images/disease.png';\r\n                    break;\r\n                case '밧줄':\r\n                    imageSrc = '/images/rope.png';\r\n                    break;\r\n                default:\r\n                    imageSrc = defaultImageSrc; // 기본 이미지 사용\r\n            }\r\n\r\n            // 마커 생성\r\n            const entity = viewer.entities.add({\r\n                position: Cesium.Cartesian3.fromDegrees(\r\n                    Cesium.Math.toDegrees(position.longitude),\r\n                    Cesium.Math.toDegrees(position.latitude),\r\n                    altitude\r\n                ),\r\n                billboard: {\r\n                    image: imageSrc,\r\n                    verticalOrigin: Cesium.VerticalOrigin.BOTTOM,\r\n                    width: 40, // 마커의 너비를 픽셀 단위로 설정\r\n                    height: 40, // 마커의 높이를 픽셀 단위로 설정\r\n                },\r\n                label: {\r\n                    text: spot.properties.MNTN_NM || '',\r\n                    font: '14pt sans-serif',\r\n                    outlineColor: Cesium.Color.BLACK,\r\n                    outlineWidth: 2,\r\n                    verticalOrigin: Cesium.VerticalOrigin.BOTTOM,\r\n                    pixelOffset: new Cesium.Cartesian2(0, -20),\r\n                },\r\n                description: `<img src=\"${imageSrc}\" alt=\"사진\" style=\"width: 150px; height: 100px;\"/><br><div style=\"padding:5px;\">${spot.properties.MNTN_NM || ''}<br>${spot.properties.SAFE_SPOT2 || ''}</div>`,\r\n            });\r\n\r\n            // 클릭 시 인포윈도우 열기\r\n            viewer.selectedEntityChanged.addEventListener((selectedEntity) => {\r\n                if (Cesium.defined(selectedEntity) && selectedEntity === entity) {\r\n                    viewer.infoBox.viewModel.showInfo = true;\r\n                    viewer.infoBox.viewModel.description = entity.description;\r\n                }\r\n            });\r\n            }\r\n\r\n            \r\n        });\r\n    } catch (error) {\r\n        console.error(`${url} 파일 로드 중 에러 발생:`, error);\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n#cesiumContainer {\r\n  width: 100%;\r\n  height: 100vh;\r\n}\r\n\r\n.back-button {\r\n  position: absolute;\r\n  top: 20px;\r\n  left: 20px;\r\n  background-color: rgba(255, 255, 255);\r\n  color: rgb(12, 12, 12);\r\n  border: none;\r\n  padding: 10px;\r\n  border-radius: 50%;\r\n  width: 50px;\r\n  height: 50px;\r\n  z-index: 10;\r\n  cursor: pointer;\r\n  box-shadow: 0 1px 6px rgba(0, 0, 0, 0.9);\r\n}\r\n</style>\r\n","import script from \"./MobileCourse3D.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./MobileCourse3D.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./MobileCourse3D.vue?vue&type=style&index=0&id=6409288b&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-6409288b\"]])\n\nexport default __exports__"],"names":["router","useRouter","route","useRoute","courseData","ref","JSON","parse","query","course","goBack","back","async","loadMarkers","viewer","url","defaultImageSrc","response","fetch","markerData","json","positions","features","map","spot","lat","geometry","coordinates","lng","Cesium","Cartographic","fromDegrees","updatedPositions","sampleTerrainMostDetailed","terrainProvider","forEach","position","index","altitude","height","properties","MNTN_NM2","value","courseName","imageSrc","type","entity","entities","add","Cartesian3","Math","toDegrees","longitude","latitude","billboard","image","verticalOrigin","VerticalOrigin","BOTTOM","width","label","text","MNTN_NM","font","outlineColor","Color","BLACK","outlineWidth","pixelOffset","Cartesian2","description","SAFE_SPOT2","selectedEntityChanged","addEventListener","selectedEntity","defined","infoBox","viewModel","showInfo","error","console","onMounted","script","document","createElement","src","onload","initCesium","head","appendChild","link","Ion","defaultAccessToken","Viewer","createWorldTerrainAsync","creditContainer","animation","navigationHelpButton","homeButton","sceneModePicker","baseLayerPicker","fullscreenButton","geocoder","geoJsonData","fetchGeoJson","filteredData","filterGeoJsonByPMNTN_NM","displayGeoJson","animateMarker","data","searchKeyword","filter","feature","PMNTN_NM","includes","dataSources","GeoJsonDataSource","load","stroke","fromCssColorString","fill","strokeWidth","clampToGround","then","dataSource","flyTo","Array","isArray","line","concat","length","warn","start","JulianDate","now","stop","addSeconds","positionProperty","SampledPositionProperty","cameraOffset","heading","pitch","i","time","addSample","point","pixelSize","color","WHITE","heightReference","HeightReference","CLAMP_TO_GROUND","clock","onTick","getValue","currentTime","transform","Transforms","eastNorthUpToFixedFrame","camera","lookAtTransform","setView","orientation","toRadians","roll","startTime","clone","stopTime","clockRange","ClockRange","LOOP_STOP","multiplier","shouldAnimate","timeline","zoomTo","rel","href","__exports__"],"sourceRoot":""}