{"version":3,"file":"js/404.497ca8ae.js","mappings":"4pCAgGA,MAAMA,GAAgBC,EAAAA,EAAAA,IAAI,IAGpBC,GAAeD,EAAAA,EAAAA,IAAI,CAAC,GAGpBE,GAAcF,EAAAA,EAAAA,IAAI,IAGlBG,GAAaH,EAAAA,EAAAA,IAAI,CAAC,GAElBI,GAASJ,EAAAA,EAAAA,IAAI,IAEbK,GAAiBL,EAAAA,EAAAA,KAAI,GAErBM,GAAUN,EAAAA,EAAAA,IAAI,SAEdO,EAAaC,UACjB,UACQC,IACNJ,EAAeK,OAAQ,QAEjBC,EAAAA,EAAAA,MACNZ,EAAcW,MAAME,SAAQC,IAC1BC,EAAgBD,EAAUE,WAAYF,EAAUG,YAAaH,EAAUI,IAAKJ,EAAUK,IAAI,GAE9F,CAAE,MAAOC,GACPC,QAAQD,MAAMA,EAChB,GAGIE,EAAcb,UAClB,IACE,MAAMc,QAAiBC,EAAAA,EAAMC,KAAK,iBAClCzB,EAAcW,MAAQY,EAASG,KAAKC,KAAIb,IAAa,IAChDA,EACHP,SAAS,EACTqB,MAAOd,EAAUc,OAAS,EAC1BC,aAAcf,EAAUe,cAAgB,EACxCb,WAAYF,EAAUE,WACtBE,IAAKJ,EAAUI,KAAOJ,EAAUgB,SAChCX,IAAKL,EAAUK,KAAOL,EAAUiB,oBAG5BnB,EAAAA,EAAAA,MACNZ,EAAcW,MAAME,SAAQC,IAC1BC,EAAgBD,EAAUE,WAAYF,EAAUG,YAAaH,EAAUI,IAAKJ,EAAUK,IAAI,IAE5Fb,EAAeK,OAAQ,CACzB,CAAE,MAAOS,GACPC,QAAQD,MAAM,kCAAmCA,EACnD,GAMIY,GAAwBC,EAAAA,EAAAA,KAAS,IAC9BjC,EAAcW,MAAMuB,QAAOpB,GACzBA,EAAUqB,cAAcC,SAASjC,EAAYQ,QAClDG,EAAUuB,aAAaD,SAASjC,EAAYQ,WAM5C2B,EAAgBA,KACpBC,EAAAA,EAAOC,KAAK,CAAEC,KAAM,cAAe,EAI/BC,EAAuB5B,IAC3ByB,EAAAA,EAAOC,KAAK,CAAEC,KAAM,uBAAwBE,MAAO,CAAE7B,UAAW8B,KAAKC,UAAU/B,KAAe,EAIhG,SAASgC,EAAUC,EAAaC,EAAUC,GACxC,MAAMC,EAAYC,SAASC,eAAeL,GAC1C,IAAKG,EAEH,YADA7B,QAAQD,MAAM,mBAAmB2B,eAInC,MAAMM,EAAU,CACdC,OAAQ,IAAIC,MAAMC,KAAKC,OAAOT,EAAUC,GACxCS,MAAO,GAIH/B,EAAM,IAAI4B,MAAMC,KAAKG,IAAIT,EAAWG,GAK1C,OAFAnD,EAAaS,MAAMoC,GAAepB,EAE3BA,CACT,CAGA,MAAMiC,EAAgBnD,UACpB,IAEE,MAAMc,QAAiBC,EAAAA,EAAMC,KAAK,qBAAsB,CACtDT,WAAYA,IAGdX,EAAOM,MAAQY,EAASG,KAGxBa,EAAAA,EAAOC,KAAK,CACVqB,KAAM,2BACNlB,MAAO,CACLtC,OAAQuC,KAAKC,UAAUxC,EAAOM,OAC9BmD,QAASvD,EAAQI,QAGvB,CAAE,MAAOS,GACPC,QAAQD,MAAM,mCAAoCA,EACpD,GAKI2C,EAAiBtD,UACrB,IACE,MAAMc,QAAiBC,EAAAA,EAAMwC,IAAI,6BAC3BC,EAAc1C,EAASG,KAE7BuC,EAAYC,SAASrD,SAAQsD,IAC3B,MAAMnD,EAAamD,EAAQC,WAAWC,SAChCC,EAAcH,EAAQI,SAASD,YAClCE,QAAO,CAACC,EAAKC,IAAeD,EAAIE,OAAOD,EAAW/C,KAAIiD,IAAS,CAAG1D,IAAK0D,EAAM,GAAIzD,IAAKyD,EAAM,SAAS,IAGnGxE,EAAWO,MAAMK,KACpBZ,EAAWO,MAAMK,GAAc,IAEjCZ,EAAWO,MAAMK,GAAYwB,QAAQ8B,EAAY,IAGnDjD,QAAQwD,IAAI,sBAAuBzE,EAAWO,MAChD,CAAE,MAAOS,GACPC,QAAQD,MAAM,6BAA8BA,EAC9C,GAGIL,EAAkBA,CAACC,EAAYC,EAAaC,EAAKC,KACrD,MAAM2D,EAAQ,OAAO7D,IACrB8D,EAASD,GAGT,MAAME,EAAoBC,OAAOC,KAAK9E,EAAWO,OAAOwE,MAAKC,GAC3DA,EAAIhD,SAASpB,KAGf,IAAKgE,EAEH,YADA3D,QAAQD,MAAM,qCAAqCJ,KAIrD,MAAMsD,EAAclE,EAAWO,MAAMqE,GAC/BK,EAAWf,EAAY3C,KAAIiD,GAAS,IAAIrB,MAAMC,KAAKC,OAAOmB,EAAM1D,IAAK0D,EAAMzD,OAEjF,IAAIQ,EAAMzB,EAAaS,MAAMmE,GAK7B,GAJKnD,IACHA,EAAMmB,EAAUgC,EAAO5D,EAAKC,IAG1BQ,EAAK,CACP,MAAM2D,EAAW,IAAI/B,MAAMC,KAAK+B,SAAS,CACvC9C,KAAM4C,EACNG,aAAc,EACdC,YAAa,UACbC,cAAe,GACfC,YAAa,UAEfL,EAASM,OAAOjE,GAEhBN,QAAQwD,IAAI,4BAA4BG,IAAqBM,EAASO,UACxE,MACExE,QAAQD,MAAM,6BAA6B0D,IAC7C,EAIF,SAASC,EAAShC,GAChB,MAAMpB,EAAMzB,EAAaS,MAAMoC,GAC3BpB,IAEFA,EAAImE,uBAAuBvC,MAAMC,KAAKuC,UAAUC,UAChD9F,EAAaS,MAAMoC,GAAe,KAEtC,EAGAkD,EAAAA,EAAAA,KAAUxF,UACR,MAAMyF,EAAS/C,SAASgD,cAAc,UACtCD,EAAOE,OAAS3F,UACd8C,MAAMC,KAAK6C,MAAK5F,gBACRsD,UACArD,UACAE,EAAAA,EAAAA,MAENZ,EAAcW,MAAME,SAAQC,IAC1BC,EAAgBD,EAAUE,WAAYF,EAAUG,YAAaH,EAAUI,IAAKJ,EAAUK,IAAI,GAC1F,GACF,EAEJ+E,EAAOI,IAAM,+FACbnD,SAASoD,KAAKC,YAAYN,EAAO,IAGnC,MAAMxF,EAAUD,UACd,IACE,MAAMc,QAAiBC,EAAAA,EAAMwC,IAAI,sBACjChE,EAAcW,MAAQY,EAASG,KAAKC,KAAIb,IAAa,IAChDA,EACHP,SAAS,EACTqB,MAAOd,EAAUc,OAAS,EAC1BC,aAAcf,EAAUe,cAAgB,EACxCb,WAAYF,EAAUE,WACtBE,IAAKJ,EAAUI,KAAOJ,EAAUgB,SAChCX,IAAKL,EAAUK,KAAOL,EAAUiB,cAIlCC,EAAsBrB,MAAQX,EAAcW,MAG5CX,EAAcW,MAAM8F,MAAK,CAACC,EAAGC,IAAM,IAAIC,KAAKD,EAAEE,kBAAoB,IAAID,KAAKF,EAAEG,0BAEvEjG,EAAAA,EAAAA,MAENZ,EAAcW,MAAME,SAAQC,IAC1B,MAAMgE,EAAQ,OAAOhE,EAAUG,cAC/B6B,EAAUgC,EAAOhE,EAAUI,IAAKJ,EAAUK,IAAI,IAEhDE,QAAQwD,IAAI7E,EAAcW,MAC5B,CAAE,MAAOmG,GACPzF,QAAQD,MAAM0F,EAChB,GAIIC,EAAOtG,UACX,IACE,MAAMuG,EAASC,aAAaC,QAAQ,UACpC,IAAKF,EAEH,YADA3F,QAAQwD,IAAI,sBAKd,MAAMtD,QAAiBC,EAAAA,EAAMC,KAAK,YAAa,CAC7CuF,OAAQA,EACR/F,YAAaA,IAGfjB,EAAcW,MAAQY,EAASG,KAAKC,KAAIb,IAAa,IAChDA,EACHP,SAAS,EACTqB,MAAOd,EAAUc,OAAS,EAC1BC,aAAcf,EAAUe,cAAgB,EACxCX,IAAKJ,EAAUI,KAAOJ,EAAUgB,SAChCX,IAAKL,EAAUK,KAAOL,EAAUiB,aAIpC,CAAE,MAAOX,GACPC,QAAQwD,IAAI,yBAA0BzD,EACxC,G,68FCvWF,MAAM+F,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O","sources":["webpack://frontend/./src/views/CommunityView.vue","webpack://frontend/./src/views/CommunityView.vue?b2b4"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <!-- 모바일 헤더 -->\r\n    <HeaderView class=\"header\" />\r\n    <div class=\"row content\">\r\n      <div v-if=\"communityState\">\r\n        <button class=\"btn btn-success btn-sm mb-3 mt-3 ms-3\" @click=\"getAllList()\">모든 게시물 보기</button>\r\n      </div>\r\n      <div v-else>\r\n        <button class=\"btn btn-success btn-sm mb-3 mt-3 ms-3\" @click=\"getSafeList()\">안전 게시물 보기</button>\r\n      </div>\r\n\r\n      <div class=\"col-md-12\">\r\n        <!-- 글쓰기 버튼 추가 -->\r\n        <div class=\"write-button-container fixed-button-container mt-3 mx-4\">\r\n          <button class=\"btn btn-lg custom-btn2\" @click=\"goToWritePost()\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"35\" height=\"35\" fill=\"currentColor\"\r\n              class=\"bi bi-plus-circle me-2\" viewBox=\"0 0 16 16\" style=\"margin-left: -12px; margin-top: -5px;\">\r\n              <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16\" />\r\n              <path\r\n                d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4\" />\r\n            </svg>\r\n          </button>\r\n        </div>\r\n\r\n        <div v-for=\"community in communityList\" :key=\"community.communityPk\" class=\"card shadow-sm\">\r\n          <div class=\"scrollable-content\">\r\n            <div class=\"community-item\">\r\n              <div class=\"d-flex align-items-center\">\r\n                <img src=\"/images/profile.png\" alt=\"프로필 사진\" class=\"profile-image me-2\" />\r\n                <p class=\"text-muted mt-4\" id=\"userNickName\">{{ community.userNickName }}</p>\r\n              </div>\r\n\r\n              <div class=\"image-map-container mb-2\">\r\n                <img v-if=\"community.communityUrl\" :src=\"community.communityUrl\" alt=\"게시글 이미지\" class=\"img-fluid\"\r\n                  style=\"width: 500px; height: 225px; object-fit: cover;\" @click=\"goToCommunityDetail(community)\" />\r\n                <div class=\"date-overlay\" id=\"communityRegDate\">{{ community.communityRegDate }}</div>\r\n\r\n\r\n                <!-- 지도 표시 -->\r\n                <div v-if=\"community.showMap\" :id=\"'map-' + community.communityPk\" class=\"map-overlay\"\r\n                  @click=\"goToMapDetail(community.courseName)\" style=\"cursor: pointer;\"></div>\r\n              </div>\r\n\r\n              <div class=\"d-flex justify-content-between align-items-center ms-2\" id=\"my-container\">\r\n                <div class=\"d-flex align-items-center\">\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"19\" height=\"19\" fill=\"currentColor\"\r\n                    class=\"bi bi-heart like-icon\" @click=\"Like(community.communityPk)\"\r\n                    :class=\"{ liked: community.liked }\" viewBox=\"0 0 16 16\">\r\n                    <path\r\n                      d=\"m8 2.748-.717-.737C5.6.281 2.514.878 1.4 3.053c-.523 1.023-.641 2.5.314 4.385.92 1.815 2.834 3.989 \r\n                      6.286 6.357 3.452-2.368 5.365-4.542 6.286-6.357.955-1.886.838-3.362.314-4.385C13.486.878 10.4.28 8.717 \r\n                      2.01zM8 15C-7.333 4.868 3.279-3.04 7.824 1.143q.09.083.176.171a3 3 0 0 1 .176-.17C12.72-3.042 23.333 4.867 8 15\"\r\n                      :class=\"{ 'text-danger': community.liked }\" />\r\n                  </svg>\r\n\r\n                  <span class=\"like-count ms-1\">{{ community.likes }}</span>\r\n\r\n                  <span class=\"comment-icon ms-2\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"19\" height=\"19\" fill=\"currentColor\"\r\n                      class=\"bi bi-chat-left-dots\" viewBox=\"0 0 16 16\">\r\n                      <path\r\n                        d=\"M14 1a1 1 0 0 1 1 1v8a1 1 0 0 1-1 1H4.414A2 2 0 0 0 3 11.586l-2 2V2a1 1 0 0 1 1-1zM2 0a2 2 0 0 0-2 2v12.793a.5.5 0 0 0 .854.353l2.853-2.853A1 1 0 0 1 4.414 12H14a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2z\" />\r\n                      <path\r\n                        d=\"M5 6a1 1 0 1 1-2 0 1 1 0 0 1 2 0m4 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0m4 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0\" />\r\n                    </svg>\r\n                  </span>\r\n                  <span class=\"comment-count ms-2\">{{ community.commentCount }}</span>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"d-flex ms-2\">\r\n                <span class=\"text-muted me-2\" id=\"userNickName\">{{ community.userNickName }}</span>\r\n                <span class=\"card-text\" id=\"cardContent\">{{ community.communityBody }}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      \r\n    </div>\r\n    \r\n  </div>\r\n\r\n  \r\n</template>\r\n\r\n<script setup>\r\n/* global kakao */\r\nimport HeaderView from '@/components/HeaderView.vue';\r\nimport { ref, computed, onMounted, nextTick } from 'vue';\r\nimport axios from 'axios';\r\nimport router from '@/router/index.js';\r\n\r\n// API에서 게시글 목록을 가져오는 함수\r\nconst communityList = ref([]);\r\n\r\n// 커뮤니티별 지도를 저장할 객체\r\nconst communityMap = ref({});\r\n\r\n// 검색어를 저장할 변수\r\nconst searchQuery = ref('');\r\n\r\n// PMNTN_NM별 데이터를 저장하는 객체\r\nconst courseData = ref({});\r\n\r\nconst course = ref([]);\r\n\r\nconst communityState = ref(false);\r\n\r\nconst showMap = ref('photo');\r\n\r\nconst getAllList = async () => {\r\n  try {\r\n    await getList(); // 모든 게시물 로드\r\n    communityState.value = false;\r\n\r\n    await nextTick(); // DOM 업데이트 후 실행\r\n    communityList.value.forEach(community => {\r\n      drawCourseOnMap(community.courseName, community.communityPk, community.lat, community.lng);\r\n    });\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nconst getSafeList = async () => {\r\n  try {\r\n    const response = await axios.post('/api/safeList');\r\n    communityList.value = response.data.map(community => ({\r\n      ...community,\r\n      showMap: true,\r\n      likes: community.likes || 0,\r\n      commentCount: community.commentCount || 0,\r\n      courseName: community.courseName,\r\n      lat: community.lat || community.latitude,\r\n      lng: community.lng || community.longitude\r\n    }));\r\n\r\n    await nextTick(); // DOM 업데이트 후 실행\r\n    communityList.value.forEach(community => {\r\n      drawCourseOnMap(community.courseName, community.communityPk, community.lat, community.lng);\r\n    });\r\n    communityState.value = true;\r\n  } catch (error) {\r\n    console.error(\"Error during safe list loading:\", error);\r\n  }\r\n};\r\n\r\n\r\n\r\n// 검색 결과를 필터링하는 computed\r\nconst filteredCommunityList = computed(() => {\r\n  return communityList.value.filter(community => {\r\n    return community.communityBody.includes(searchQuery.value) ||\r\n      community.userNickName.includes(searchQuery.value);  // 제목이나 내용에서 검색어를 포함하는 게시글만 표시\r\n  });\r\n});\r\n\r\n\r\n// 글쓰기 페이지로 이동하는 함수\r\nconst goToWritePost = () => {\r\n  router.push({ path: '/writePost' }); // 글쓰기 페이지 경로로 변경\r\n};\r\n\r\n// 상세 페이지로 이동하는 함수 추가\r\nconst goToCommunityDetail = (community) => {\r\n  router.push({ path: `/communityDetailView`, query: { community: JSON.stringify(community) } });\r\n};\r\n\r\n\r\nfunction createMap(containerId, startLat, startLng) {\r\n  const container = document.getElementById(containerId);\r\n  if (!container) {\r\n    console.error(`Element with ID ${containerId} not found`);\r\n    return;\r\n  }\r\n\r\n  const options = {\r\n    center: new kakao.maps.LatLng(startLat, startLng),\r\n    level: 6,\r\n  };\r\n\r\n  // 지도 객체 생성\r\n  const map = new kakao.maps.Map(container, options);\r\n\r\n  // 생성된 지도를 communityMap 객체에 저장\r\n  communityMap.value[containerId] = map;\r\n\r\n  return map;\r\n}\r\n\r\n// 카드 클릭 시 호출되는 함수\r\nconst goToMapDetail = async (courseName) => {\r\n  try {\r\n    // 좋아요 기능이 필요하다면 별도의 함수로 호출\r\n    const response = await axios.post('/api/course/byName', {\r\n      courseName: courseName\r\n    });\r\n\r\n    course.value = response.data;\r\n\r\n    // 페이지 이동\r\n    router.push({\r\n      name: 'mobilemountaindetailview',\r\n      query: {\r\n        course: JSON.stringify(course.value),\r\n        mapType: showMap.value, // 현재 지도 상태 전달\r\n      },\r\n    });\r\n  } catch (error) {\r\n    console.error(\"Error during like or navigation:\", error);\r\n  }\r\n};\r\n\r\n\r\n// 처음에 모든 GeoJSON 데이터를 불러와 PMNTN_NM을 키로 하는 객체로 저장\r\nconst loadCourseData = async () => {\r\n  try {\r\n    const response = await axios.get('/data/인왕산ele copy.geojson');\r\n    const geoJsonData = response.data;\r\n\r\n    geoJsonData.features.forEach(feature => {\r\n      const courseName = feature.properties.PMNTN_NM;\r\n      const coordinates = feature.geometry.coordinates\r\n        .reduce((acc, lineString) => acc.concat(lineString.map(coord => ({ lat: coord[1], lng: coord[0] }))), []);\r\n\r\n      // 누적 방식으로 각 코스의 좌표를 추가\r\n      if (!courseData.value[courseName]) {\r\n        courseData.value[courseName] = [];\r\n      }\r\n      courseData.value[courseName].push(...coordinates);\r\n    });\r\n\r\n    console.log(\"Course Data Loaded:\", courseData.value);\r\n  } catch (error) {\r\n    console.error(\"GeoJSON 데이터를 불러오는 중 오류 발생:\", error);\r\n  }\r\n};\r\n\r\nconst drawCourseOnMap = (courseName, communityPk, lat, lng) => {\r\n  const mapId = `map-${communityPk}`;\r\n  resetMap(mapId); // 지도 초기화\r\n\r\n  // courseData의 키 값 중에서 courseName을 포함하는 키를 찾음\r\n  const matchingCourseKey = Object.keys(courseData.value).find(key =>\r\n    key.includes(courseName)\r\n  );\r\n\r\n  if (!matchingCourseKey) {\r\n    console.error(`Coordinates not found for course: ${courseName}`);\r\n    return;\r\n  }\r\n\r\n  const coordinates = courseData.value[matchingCourseKey];\r\n  const linePath = coordinates.map(coord => new kakao.maps.LatLng(coord.lat, coord.lng));\r\n\r\n  let map = communityMap.value[mapId];\r\n  if (!map) {\r\n    map = createMap(mapId, lat, lng);\r\n  }\r\n\r\n  if (map) {\r\n    const polyline = new kakao.maps.Polyline({\r\n      path: linePath,\r\n      strokeWeight: 5,\r\n      strokeColor: '#00FF00',\r\n      strokeOpacity: 0.8,\r\n      strokeStyle: 'solid',\r\n    });\r\n    polyline.setMap(map); // 새로운 경로 추가\r\n\r\n    console.log(`Polyline set for course: ${matchingCourseKey}`, polyline.getPath());\r\n  } else {\r\n    console.error(`Map not found for map ID: ${mapId}`);\r\n  }\r\n};\r\n\r\n\r\nfunction resetMap(containerId) {\r\n  const map = communityMap.value[containerId];\r\n  if (map) {\r\n    // 지도 상의 모든 경로 제거\r\n    map.removeOverlayMapTypeId(kakao.maps.MapTypeId.POLYLINE);\r\n    communityMap.value[containerId] = null;\r\n  }\r\n}\r\n\r\n\r\nonMounted(async () => {\r\n  const script = document.createElement('script');\r\n  script.onload = async () => {\r\n    kakao.maps.load(async () => {\r\n      await loadCourseData();  // GeoJSON 데이터를 한 번만 로드\r\n      await getList();  // `communityList` 채운 후\r\n      await nextTick();  // DOM 업데이트 후 drawCourseOnMap 호출\r\n\r\n      communityList.value.forEach(community => {\r\n        drawCourseOnMap(community.courseName, community.communityPk, community.lat, community.lng);\r\n      });\r\n    });\r\n  };\r\n  script.src = 'https://dapi.kakao.com/v2/maps/sdk.js?appkey=333bda7da18df138fb4d9b3e5cf351c4&autoload=false';\r\n  document.head.appendChild(script);\r\n});\r\n\r\nconst getList = async () => {\r\n  try {\r\n    const response = await axios.get('/api/communityList');\r\n    communityList.value = response.data.map(community => ({\r\n      ...community,\r\n      showMap: true,\r\n      likes: community.likes || 0,\r\n      commentCount: community.commentCount || 0,  // 댓글 수 초기화\r\n      courseName: community.courseName,\r\n      lat: community.lat || community.latitude,\r\n      lng: community.lng || community.longitude\r\n    }));\r\n\r\n    // 게시글 목록을 필터링된 목록에 복사\r\n    filteredCommunityList.value = communityList.value;\r\n\r\n    // 게시글을 communityRegDate 기준으로 내림차순 정렬 (날짜와 시간 모두 고려)\r\n    communityList.value.sort((a, b) => new Date(b.communityRegDate) - new Date(a.communityRegDate));\r\n\r\n    await nextTick();  // DOM 업데이트 후 실행\r\n\r\n    communityList.value.forEach(community => {\r\n      const mapId = `map-${community.communityPk}`;\r\n      createMap(mapId, community.lat, community.lng); // 좌표에 맞는 지도 생성\r\n    });\r\n    console.log(communityList.value);\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\n\r\nconst Like = async (communityPk) => {\r\n  try {\r\n    const userId = localStorage.getItem('userId');  // 로그인된 사용자 ID 가져오기\r\n    if (!userId) {\r\n      console.log(\"User not logged in\");\r\n      return;\r\n    }\r\n\r\n    // 서버로 좋아요 상태 변경 요청\r\n    const response = await axios.post('/api/like', {\r\n      userId: userId,\r\n      communityPk: communityPk\r\n    });\r\n\r\n    communityList.value = response.data.map(community => ({\r\n      ...community,\r\n      showMap: true,\r\n      likes: community.likes || 0,\r\n      commentCount: community.commentCount || 0,  // 댓글 수 초기화\r\n      lat: community.lat || community.latitude,\r\n      lng: community.lng || community.longitude\r\n    }));\r\n\r\n\r\n  } catch (error) {\r\n    console.log(\"Error liking the post:\", error);\r\n  }\r\n};\r\n</script>\r\n\r\n\r\n<style scoped>\r\n\r\n\r\n/* 고정 헤더 스타일 */\r\n.header {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  z-index: 1000;\r\n}\r\n\r\n/* 고정 푸터 스타일 */\r\n.footer {\r\n  position: fixed;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  z-index: 1000;\r\n}\r\n\r\n.info-overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: rgba(255, 255, 255, 0.8);\r\n  /* 배경 색 */\r\n  z-index: 2;\r\n  /* 이미지 위에 보이게 */\r\n}\r\n\r\n.styled-button {\r\n  border: 2px solid #4CAF50;\r\n  /* 테두리 추가 */\r\n  border-radius: 5px;\r\n  /* 모서리 둥글게 */\r\n  padding: 8px 16px;\r\n  /* 패딩 조절 */\r\n  transition: background-color 0.3s, transform 0.2s;\r\n  /* 효과 추가 */\r\n}\r\n\r\n#map {\r\n  height: 400px;\r\n  width: 100%;\r\n}\r\n\r\nbody {\r\n  background: linear-gradient(to bottom, #fafafa, #ffffff); /* 밝은 그라데이션 */\r\n}\r\n\r\n.container {\r\n  background: #ffffff; /* 배경을 흰색으로 */\r\n  max-width: 900px; /* 중앙 정렬 */\r\n  margin: auto; /* 화면 중앙에 위치 */\r\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.05); /* 가벼운 그림자 */\r\n  border-radius: 10px; /* 부드러운 모서리 */\r\n  padding: 20px;\r\n}\r\n\r\n.main-content {\r\n  width: 70%; /* 메인 컨텐츠 넓이 */\r\n  padding-right: 20px;\r\n}\r\n\r\n.sidebar {\r\n  width: 25%; /* 사이드바 넓이 */\r\n  background-color: #fff;\r\n  border-radius: 15px;\r\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\r\n  padding: 20px;\r\n  font-family: 'Roboto', sans-serif;\r\n}\r\n\r\n.sidebar-item {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.sidebar-item h5 {\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n  color: #262626;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.sidebar-item ul {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\n\r\n.sidebar-item ul li {\r\n  margin-bottom: 8px;\r\n  font-size: 14px;\r\n  color: #555;\r\n}\r\n\r\n.sidebar-item ul li:hover {\r\n  text-decoration: underline;\r\n  cursor: pointer;\r\n}\r\n\r\n.content {\r\n  flex: 1;\r\n  /* 남은 공간을 채우도록 설정 */\r\n  overflow-y: auto;\r\n  /* 세로 스크롤 활성화 */\r\n  padding-top: 70px;\r\n  /* 헤더 공간 */\r\n  padding-bottom: 70px;\r\n  /* 푸터 공간 */\r\n  margin-top: 25%;\r\n}\r\n\r\n.card {\r\n  transition: transform 0.2s;\r\n  /* 카드에 호버 효과 */\r\n  background-color: white;\r\n  /* 카드 배경색 */\r\n  min-height: 350px;\r\n  /* 카드의 최소 높이 설정 */\r\n  border-radius: 20px;\r\n  /* 카드 테두리 동그랗게 설정 */\r\n  border: none;\r\n  /* 카드의 테두리 제거 */\r\n  max-width: 700px;\r\n  /* 카드의 최대 가로 크기 설정 */\r\n  margin: 0 auto;\r\n  /* 카드를 중앙 정렬 */\r\n  display: flex;\r\n  flex-direction: column;\r\n  word-wrap: break-word;\r\n  /* 단어가 길 때 자동으로 줄바꿈 */\r\n  overflow: visible;\r\n  /* 자식 요소의 그림자가 잘리지 않도록 설정 */\r\n}\r\n\r\n.card-body {\r\n  flex-grow: 1;\r\n  /* 카드 안의 내용이 남은 공간을 채우도록 설정 */\r\n  display: flex;\r\n  flex-direction: column;\r\n  /* 카드 내용도 세로로 배치 */\r\n  overflow: hidden;\r\n  /* 내용이 넘쳐도 스크롤이 생기지 않도록 설정 */\r\n}\r\n\r\n\r\n.like-icon:hover {\r\n  color: #FF5252; /* 빨간색 */\r\n  transform: scale(1.2); /* 살짝 확대 */\r\n  transition: 0.2s ease-in-out;\r\n}\r\n\r\n.comment-icon:hover {\r\n  color: #007BFF; /* 파란색 */\r\n  transform: scale(1.2);\r\n  transition: 0.2s ease-in-out;\r\n}\r\n\r\n\r\n\r\n.scrollable-content {\r\n  max-height: 300%;\r\n  /* 자식 요소의 최대 높이 설정 */\r\n  overflow-y: auto;\r\n  /* 세로 스크롤 가능 */\r\n  padding: 10px;\r\n  /* 내부 여백 */\r\n  background: transparent;\r\n  position: relative;\r\n  /* 그림자 효과가 부모에 영향을 받지 않도록 절대 위치 설정 */\r\n  z-index: 10;\r\n  /* 다른 요소보다 위에 위치하도록 설정 */\r\n  margin: 13px;\r\n  border-radius: 15px;\r\n}\r\n\r\n/* 추가된 스타일 */\r\n.separator-line {\r\n  border: none;\r\n  border-top: 1px solid white;\r\n  /* 구분선 스타일 */\r\n  margin: 20px 0;\r\n  /* 여백 설정 */\r\n}\r\n\r\n/* 웹킷 기반 브라우저용 스크롤바 숨기기 */\r\n.scrollable-content::-webkit-scrollbar {\r\n  width: 0;\r\n  /* 스크롤바 너비를 0으로 설정 */\r\n}\r\n\r\n/* Firefox에서 스크롤바 숨기기 */\r\n.scrollable-content {\r\n  scrollbar-width: none;\r\n  /* Firefox에서 스크롤바 숨기기 */\r\n}\r\n\r\n/* 이미지와 지도 컨테이너 스타일 */\r\n.image-map-container {\r\n  position: relative;\r\n  width: 100%;\r\n\r\n}\r\n\r\n.image-map-container img {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n  /* 이미지 비율 유지하며 크기를 조절 */\r\n  border-radius: 15px;\r\n}\r\n\r\n.map-overlay {\r\n  position: absolute;\r\n  /* 절대 위치 지정 */\r\n  bottom: 0;\r\n  /* 컨테이너의 아래쪽에 정렬 */\r\n  margin-bottom: 2.5%;\r\n  margin-right: 2.5%;\r\n  right: 0;\r\n  /* 컨테이너의 오른쪽에 정렬 */\r\n  width: 80px;\r\n  /* 너비를 원하는 크기로 설정 */\r\n  height: 80px;\r\n  /* 높이를 원하는 크기로 설정 */\r\n  border: 2px solid white;\r\n  /* 테두리 설정 */\r\n  border-radius: 15px;\r\n  /* 테두리 모서리를 둥글게 설정 */\r\n  background: rgba(255, 255, 255, 0.15);\r\n  backdrop-filter: blur(10px);\r\n  border: 1px solid rgba(255, 255, 255, 0.2);\r\n}\r\n\r\n.date-overlay {\r\n  position: absolute;\r\n  /* 절대 위치 설정 */\r\n  top: 2px;\r\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);\r\n  /* 그림자 효과 */\r\n  bottom: 10px;\r\n  /* 이미지의 아래쪽에서 10px 떨어지도록 설정 */\r\n  left: 10px;\r\n  /* 이미지의 왼쪽에서 10px 떨어지도록 설정 */\r\n  color: white;\r\n  /* 텍스트 색상 설정 (가독성을 위해) */\r\n  background-color: rgba(0, 0, 0, 0);\r\n  /* 배경색과 투명도 설정 */\r\n  padding: 5px;\r\n  /* 텍스트 주위에 패딩 추가 */\r\n  border-radius: 5px;\r\n  /* 모서리를 둥글게 설정 */\r\n}\r\n\r\n/* 추가된 스타일 */\r\n.separator-line {\r\n  border: none;\r\n  border-top: 1px solid white;\r\n  margin: 20px 0;\r\n}\r\n\r\n@font-face {\r\n  font-family: 'TheJamsil5Bold';\r\n  src: url('https://fastly.jsdelivr.net/gh/projectnoonnu/noonfonts_2302_01@1.0/TheJamsil5Bold.woff2') format('woff2');\r\n  font-weight: 700;\r\n  font-style: normal;\r\n}\r\n\r\nh1,\r\nh2,\r\nh3,\r\np {\r\n  /* 특정 요소에 폰트 적용 */\r\n  font-family: 'TheJamsil5Bold', sans-serif !important;\r\n}\r\n\r\n#cardContent {\r\n  font-family: 'TheJamsil4Bold';\r\n  font-weight: 500;\r\n  font-size: 14px;\r\n}\r\n\r\n#userNickName {\r\n  font-family: 'TheJamsil5Bold';\r\n  font-weight: 600;\r\n  font-size: 14px;\r\n  margin-left: 2;\r\n  /* 왼쪽 정렬 */\r\n  text-align: left;\r\n  /* 왼쪽 정렬 */\r\n  width: 500px;\r\n  /* 고정 너비 설정 */\r\n  min-width: 50px;\r\n  /* 최소 너비 설정 */\r\n}\r\n\r\n#communityRegDate {\r\n  font-family: 'TheJamsil4Bold';\r\n  font-weight: 700;\r\n  font-size: 15px;\r\n}\r\n\r\n.info-overlay {\r\n  position: absolute;\r\n  /* 이미지 위에 배치 */\r\n  bottom: 0;\r\n  /* 이미지의 아래쪽에 정렬 */\r\n  left: 0;\r\n  /* 이미지의 왼쪽에 정렬 */\r\n  right: 0;\r\n  /* 이미지의 오른쪽에 정렬 */\r\n  display: flex;\r\n  /* 가로로 나열 */\r\n  justify-content: flex-end;\r\n  /* 수평 방향으로 오른쪽 정렬 */\r\n  align-items: flex-end;\r\n  /* 세로 방향으로 아래쪽에 정렬 */\r\n  padding: 10px;\r\n  /* 패딩 추가 */\r\n  background: rgba(255, 255, 255, 0);\r\n  /* 배경을 완전히 투명하게 설정 */\r\n  z-index: 2;\r\n  /* 이미지 위에 보이게 */\r\n}\r\n\r\n.overlay-content {\r\n  display: flex;\r\n  /* 가로로 나열 */\r\n  justify-content: space-around;\r\n  /* 항목 간격을 균등하게 배치 */\r\n  align-items: center;\r\n  /* 수직 정렬 */\r\n  gap: 20px;\r\n  /* 아이템 간격 */\r\n}\r\n\r\n.overlay-title {\r\n  margin: 0px;\r\n  /* 마진 제거 */\r\n  font-size: 17px;\r\n  /* 폰트 크기 조절 */\r\n  color: white;\r\n  /* 글씨 색을 흰색으로 설정 */\r\n  font-weight: bold;\r\n  /* 글씨를 두껍게 설정 */\r\n}\r\n\r\n.card-group {\r\n  display: flex;\r\n  /* 가로로 나열 */\r\n  width: 100%;\r\n  /* 카드 그룹의 너비를 100%로 설정 */\r\n}\r\n\r\n.info-card {\r\n  width: 150px;\r\n  /* 카드의 너비 설정 */\r\n  height: auto;\r\n  /* 카드의 높이 설정 */\r\n  margin: 0 5px;\r\n  /* 카드 간격 */\r\n  color: white;\r\n  background-color: rgba(255, 255, 255, 0);\r\n}\r\n\r\n.custom-btn {\r\n  padding: 4px 7px;\r\n  /* 버튼의 상하/좌우 패딩 조정 */\r\n  font-size: 10px;\r\n  /* 버튼의 글씨 크기 조정 */\r\n  border-radius: 20px;\r\n}\r\n\r\n.profile-image {\r\n  width: 40px;\r\n  /* 원하는 너비 */\r\n  height: 40px;\r\n  /* 원하는 높이 */\r\n  border-radius: 50%;\r\n  /* 동그란 형태로 만들기 */\r\n  object-fit: cover;\r\n  /* 이미지 비율 유지 */\r\n}\r\n\r\n\r\n.back-button-container {\r\n  text-align: left;\r\n  /* 버튼을 왼쪽에 정렬 */\r\n  margin-top: 10px;\r\n}\r\n\r\n/* 스타일 정의 */\r\n.location-text {\r\n  font-size: 0.70em;\r\n  /* 폰트 크기를 줄입니다 */\r\n  font-weight: 100;\r\n  /* 얇은 글씨 */\r\n  margin: 0;\r\n  padding: 0;\r\n  text-decoration: underline;\r\n  /* 밑줄 추가 */\r\n  color: #555;\r\n  /* 텍스트 색상 조정 (필요 시 수정 가능) */\r\n  text-align: left;\r\n  /* 왼쪽 정렬 */\r\n  margin-left: 2px;\r\n}\r\n\r\n.fixed-button-container {\r\n  position: fixed;\r\n  bottom: 100px;\r\n  /* 원하는 위치에 맞게 조정 */\r\n  right: 20px;\r\n  /* 원하는 위치에 맞게 조정 */\r\n  z-index: 9999;\r\n  /* 가능한 높은 값으로 설정 */\r\n}\r\n\r\n.custom-btn2 {\r\n  background-color: #FF5E57; /* 강렬한 레드/오렌지 */\r\n  color: white;\r\n  border: none;\r\n  border-radius: 50%; /* 원형 버튼 */\r\n  width: 60px;\r\n  height: 60px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 1.5rem;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2); /* 버튼 그림자 */\r\n  transition: transform 0.2s;\r\n}\r\n\r\n.custom-btn2:hover {\r\n  transform: scale(1.1); /* 약간 확대 */\r\n  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.3); /* 그림자 강조 */\r\n}\r\n\r\n#my-container .d-flex.align-items-center {\r\n  height: 30px;\r\n  /* 원하는 높이로 조정 */\r\n  padding: 0;\r\n  /* 패딩 제거 */\r\n  margin: 0;\r\n  /* 마진 제거 */\r\n}\r\n\r\n#my-container {\r\n  padding: 0;\r\n  /* 패딩 제거 */\r\n  height: 35px;\r\n  /* 원하는 높이로 조정 */\r\n}\r\n\r\n#userNickName {\r\n  flex: 0 0 15%;\r\n  /* userNickName이 25% 너비를 차지하도록 설정 */\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  word-wrap: break-word;\r\n  /* 긴 단어가 있을 경우 줄바꿈 */\r\n}\r\n\r\n#cardContent {\r\n  flex: 1;\r\n  /* 나머지 공간을 모두 차지 */\r\n  font-size: 14px;\r\n  color: #333;\r\n  word-wrap: break-word;\r\n  /* 긴 텍스트가 있을 경우 줄바꿈 */\r\n  text-align: left;\r\n  /* 텍스트를 왼쪽 정렬 */\r\n}\r\n\r\n/* 컨텐츠 영역 스타일 */\r\n.content {\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  padding-top: 0px;\r\n  /* 게시글 내용과 검색창 간 간격 */\r\n  padding-bottom: 70px;\r\n  /* 푸터 공간 확보 */\r\n}\r\n</style>","import script from \"./CommunityView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CommunityView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./CommunityView.vue?vue&type=style&index=0&id=558bbfc2&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-558bbfc2\"]])\n\nexport default __exports__"],"names":["communityList","ref","communityMap","searchQuery","courseData","course","communityState","showMap","getAllList","async","getList","value","nextTick","forEach","community","drawCourseOnMap","courseName","communityPk","lat","lng","error","console","getSafeList","response","axios","post","data","map","likes","commentCount","latitude","longitude","filteredCommunityList","computed","filter","communityBody","includes","userNickName","goToWritePost","router","push","path","goToCommunityDetail","query","JSON","stringify","createMap","containerId","startLat","startLng","container","document","getElementById","options","center","kakao","maps","LatLng","level","Map","goToMapDetail","name","mapType","loadCourseData","get","geoJsonData","features","feature","properties","PMNTN_NM","coordinates","geometry","reduce","acc","lineString","concat","coord","log","mapId","resetMap","matchingCourseKey","Object","keys","find","key","linePath","polyline","Polyline","strokeWeight","strokeColor","strokeOpacity","strokeStyle","setMap","getPath","removeOverlayMapTypeId","MapTypeId","POLYLINE","onMounted","script","createElement","onload","load","src","head","appendChild","sort","a","b","Date","communityRegDate","err","Like","userId","localStorage","getItem","__exports__"],"sourceRoot":""}