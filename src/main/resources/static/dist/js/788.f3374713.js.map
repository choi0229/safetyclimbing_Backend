{"version":3,"file":"js/788.f3374713.js","mappings":"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","sources":["webpack://frontend/./src/api/index.js","webpack://frontend/./src/api/complaint.js","webpack://frontend/./src/views/ComplaintView.vue","webpack://frontend/./src/views/ComplaintView.vue?7072"],"sourcesContent":["import axios from 'axios';\r\n\r\nfunction apiInstance() {\r\n  const instance = axios.create({\r\n    baseURL: 'http://localhost:9000/api',\r\n    headers: {\r\n      'Content-Type': 'application/json;charset=utf-8',\r\n    },\r\n  });\r\n  return instance;\r\n}\r\n\r\nexport { apiInstance };","import { apiInstance } from \"./index.js\";\r\nconst api = apiInstance();\r\nimport router from \"@/router/index.js\";\r\nimport axios from 'axios';\r\n\r\n//complaintList 가져오기 요청\r\nexport async function getComplaintList() {\r\n  try { \r\n    const response = await axios.get('/api/complaint/list');\r\n    console.log(\"you can use getComplaintList\", response.data);\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error(err); // 에러를 콘솔에 출력\r\n  }\r\n}\r\n\r\n//complaintList 날짜 최신순으로 가져오기 요청\r\nexport async function getRecentComplaintList() {\r\n  try { \r\n    const response = await axios.get('/api/complaint/listRecent');\r\n    console.log(\"you can use getRecentComplaintList\", response.data);\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error(err); // 에러를 콘솔에 출력\r\n  }\r\n}\r\n\r\n//complaintList 글쓴이아이디에 해당하는 리스트 최신순으로 가져오기 요청\r\nexport async function getComplaintByUserId(userId) {\r\n  try { \r\n    const response = await axios.get(`/api/complaint/mine/${userId}`);\r\n    //console.log(\"getComplaintByUserId\", response.data);\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error(err); // 에러를 콘솔에 출력\r\n  }\r\n}\r\n\r\n//complaintList 글쓴이아이디에 해당하는 리스트 최신순으로 가져오기 요청\r\nexport async function getComplaintListByInst(institution) {\r\n  try { \r\n    const response = await axios.get(`/api/complaint/myList/${institution}`);\r\n    //console.log(\"getComplaintListByInst\", response.data);\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error(err); // 에러를 콘솔에 출력\r\n  }\r\n}\r\n\r\n//pathList 날짜 최신순으로 가져오기 요청\r\nexport async function getPathList() {\r\n  try { \r\n    const response = await axios.get('/api/pathList');\r\n    console.log(\"you can use getPathList\", response.data);\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error(err); // 에러를 콘솔에 출력\r\n  }\r\n}\r\n\r\n// 민원글 작성 요청\r\nexport async function insertComplaint(data) {\r\n  try {\r\n    const response = await axios.post('/api/complaint/insert', data);\r\n    console.log('응답 상태 코드:', response.status); // 응답 상태 코드 확인\r\n    console.log('민원글 작성에 대한 응답 데이터:', response.data); \r\n    return response.data;\r\n  } catch (err) {\r\n    console.error('API 요청 중 오류 발생:', err);\r\n    throw err;\r\n  }\r\n}\r\n\r\n// 민원글 번호에 따른 민원글 한개 가져오기 요청\r\nexport async function getComplaintByNo(complaintNo) {\r\n  try {\r\n    const response = await axios.get(`/api/complaint/one/${complaintNo}`);\r\n    console.log(\"API response:\", response);\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error(err); // 에러를 콘솔에 출력\r\n  }\r\n}\r\n\r\n// 유저 아이디에 따른 유저정보 한개 가져오기 요청\r\nexport async function getUserById(userId) {\r\n  try {\r\n    const response = await axios.get(`/api/userInfo/${userId}`);\r\n    console.log(\"API response:\", response);\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error(err); // 에러를 콘솔에 출력\r\n  }\r\n  \r\n}\r\n\r\n// 코스 한개씩 가져오기 요청\r\nexport async function getCourseById(courseId) {\r\n  try {\r\n    const response = await axios.get(`/api/course/${courseId}`);\r\n    console.log(\"API response:\", response);\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error(err); // 에러를 콘솔에 출력\r\n  }\r\n}\r\n\r\n\r\n// 민원글 번호에 따른 글 삭제 요청\r\nexport async function deleteComplaintByNo(complaintNo) {\r\n  try {\r\n    const response = await axios.delete(`/api/complaint/delete/${complaintNo}`);\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n}\r\n\r\n// 글 업데이트\r\nexport async function updateComplaintByNo(complaintNo, data) {\r\n  try {\r\n    const response = await axios.patch(`/api/complaint/update/${complaintNo}`, data);\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n}\r\n\r\n//특정 유저의 complaintList를 가져오기 요청\r\nexport async function getUserPostList(userNo) {\r\n  try { \r\n    const response = await api.get(`/auth/userpostlist/${userNo}`);\r\n    console.log(userNo);\r\n    console.log(\"you can use getUserPostList\", response.data);\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error(err); // 에러를 콘솔에 출력\r\n  }\r\n}\r\n\r\n//게시글 추가 및 \r\nexport async function insertPostAndKeyword(postData, keywordData) {\r\n  const formData = new FormData();\r\n  formData.append('post', new Blob([JSON.stringify(postData)], { type: 'application/json' }));\r\n  formData.append('postkeyword', new Blob([JSON.stringify(keywordData)], { type: 'application/json' }));\r\n\r\n  try {\r\n    const response = await api.post('/auth/insert', formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error(err);\r\n    if (err.response && err.response.status === 401) {\r\n      // 로그인 페이지로 이동\r\n      alert(\"로그인 후 이용하실 수 있습니다.\")\r\n      router.push({ path: '/login' });\r\n    }\r\n    throw err;\r\n  }\r\n} \r\n\r\n// 이미지 저장요청\r\nexport async function saveImage(formData) {\r\n  try {\r\n    const response = await api.post('/auth/upload-image', formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n    console.log('서버 응답:', response.data);\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error('이미지 업로드 중 오류 발생:', err); // 에러를 콘솔에 출력\r\n  }\r\n}\r\n\r\n// 민원글 번호에 따른 민원처리정보 한개 가져오기 요청\r\nexport async function getProcessingByNo(processingComplaintNo) {\r\n  try {\r\n    const response = await axios.get(`/api/complaint/processing/${processingComplaintNo}`);\r\n    console.log(\"API response:\", response);\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error(err); // 에러를 콘솔에 출력\r\n  }\r\n}\r\n\r\n// 민원처리정보 작성 요청\r\nexport async function insertProcessing(data) {\r\n  try {\r\n    const response = await axios.post('/api/complaint/insertProcessing', data);\r\n    console.log('응답 상태 코드:', response.status); // 응답 상태 코드 확인\r\n    console.log('민원처리정보 작성에 대한 응답 데이터:', response.data); \r\n    return response.data;\r\n  } catch (err) {\r\n    console.error('API 요청 중 오류 발생:', err);\r\n    throw err;\r\n  }\r\n}\r\n\r\n// 민원처리정보 업데이트\r\nexport async function updateProcessingByNo(processingComplaintNo, data) {\r\n  try {\r\n    const response = await axios.patch(`/api/complaint/updateProcessing/${processingComplaintNo}`, data);\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n}","<template>\r\n  <!--begin::Content container-->\r\n  <div id=\"kt_app_content_container\" class=\"app-container container-xxl\" style=\"margin-top: 10px; margin-bottom: 10px;\">\r\n    <!--begin::Post card-->\r\n    <div class=\"card\">\r\n      <!--begin::Body-->\r\n      <div class=\"card-body p-lg-20 pb-lg-0\">\r\n          <!--begin::Content-->\r\n          <div class=\"flex-lg-row-fluid me-xl-15\">\r\n            <!--begin::Post content-->\r\n            <div class=\"mb-17\">\r\n              <!--begin::Info-->\r\n              <div class=\"d-flex flex-wrap mb-2\">\r\n                <!--begin::Item-->\r\n                <div>\r\n                  <button class=\"styled-button\" @click=\"goToMainPage()\">\r\n                    뒤로가기\r\n                  </button>\r\n                </div>\r\n                <!--end::Item-->\r\n              </div>\r\n              <!--end::Info-->\r\n\r\n              <!-- ==== start 카드 내용 ==== -->\r\n              <div class=\"card p-3 mt-4 mb-3\" style=\"background-color: #21252908;\">\r\n                <!--begin::Title-->\r\n                <div class=\"row align-items-center mb-3 mt-3\">\r\n                  <div class=\"col-md-1 text-center\">\r\n                    <label class=\"col-form-label fw-bold\">제목</label>\r\n                  </div>\r\n                  <div class=\"col-md-11\">\r\n                    <input class=\"form-control form-control-lg\" type=\"text\" v-model=\"titleInput\"/>\r\n                  </div>\r\n                </div>\r\n                <!--end::Title-->\r\n\r\n                <!-- begin::타입 -->\r\n                <div class=\"row align-items-center\">\r\n                  <div class=\"col-md-1 text-center\">\r\n                    <label for=\"category\" class=\"col-form-label fw-bold\">구분</label>  \r\n                  </div>\r\n                  <div class=\"col-auto\">\r\n                    <div class=\"form-group\">\r\n                      <select\r\n                        v-model=\"typeInput\"\r\n                        id=\"number\"\r\n                        name=\"number\"\r\n                        class=\"form-control\"\r\n                        style=\"cursor: pointer\"\r\n                      >\r\n                      <option value=\"\" disabled>유형 선택</option>\r\n                      <option value=\"파손\">파손</option>\r\n                      <option value=\"낙석\">낙석</option>\r\n                      <option value=\"화재\">화재</option>\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <!-- end::타입 -->\r\n\r\n                <!-- begin::산이름 -->\r\n                <div class=\"row align-items-center mb-3 mt-3\">\r\n                  <div class=\"col-md-1 text-center\">\r\n                    <label class=\"col-form-label fw-bold\">산 이름</label>\r\n                  </div>\r\n                  <div class=\"col-auto\">\r\n                    <input type=\"text\" id=\"groupName\" class=\"form-control\" v-model=\"mountainNameInput\"/>\r\n                  </div>\r\n                </div>\r\n                <!-- end::산이름 -->\r\n            \r\n                <!--begin::민원 지도 찍기-->\r\n                <div class=\"\">\r\n                  <div id=\"map\" style=\"width: 100%; height: 350px\"></div>\r\n                  <p><em>지도를 클릭해주세요!</em></p>\r\n                  <div id=\"clickLatlng\"></div>\r\n                </div>\r\n                <!--end::민원 지도 찍기-->\r\n            \r\n                <!-- 이미지 선택 START -->\r\n                <div class=\"d-flex flex-column fv-row\">\r\n                  <label class=\"d-flex align-items-center fs-6 fw-semibold mb-2\">\r\n                    <span class=\"required\">사진 등록</span>\r\n                  </label>\r\n                  <input\r\n                    type=\"file\"\r\n                    id=\"image\"\r\n                    @change=\"onFileChange\"\r\n                    ref=\"image\"\r\n                  />\r\n                </div>\r\n                <!-- 이미지 선택 END -->\r\n\r\n                <!--begin::설명-->\r\n                <div class=\"mb-3 mt-3\">\r\n                  <label for=\"exampleFormControlTextarea1\" class=\"form-label\">위치, 시간, 내용을 자세히 입력해주세요.</label>\r\n                  <textarea\r\n                    class=\"form-control\"\r\n                    id=\"exampleFormControlTextarea1\"\r\n                    rows=\"7\"\r\n                    v-model=\"contentInput\"></textarea>\r\n                </div>\r\n                <!--end::설명-->\r\n                <!-- begin::등록버튼 -->\r\n                <div class=\"d-flex justify-content-end\">\r\n                  <button\r\n                    id=\"updateButton\"\r\n                    @click=\"insertComplaintButton()\"\r\n                    class=\"btn btn-success fs-6 p-2\"\r\n                  >\r\n                  등록하기\r\n                  </button>\r\n                </div>\r\n                <!-- end::등록버튼 -->\r\n              </div>\r\n              <!-- ==== end 카드 내용 ==== -->\r\n            </div>\r\n          </div>\r\n          <!--end::Post content-->\r\n        </div>\r\n        <!--end::Content-->\r\n      <!--end::Layout-->\r\n    </div>\r\n    <!--end::Body-->\r\n  </div>\r\n  <!--end::Post card-->\r\n<!--end::Content container-->\r\n</template>\r\n\r\n<script setup>\r\n/* global kakao */\r\nimport { ref, onMounted } from \"vue\";\r\nimport router from \"@/router/index.js\";\r\nimport { insertComplaint } from \"@/api/complaint.js\";\r\nimport axios from 'axios';\r\n\r\n// 민원글 저장 필요한 변수 생성\r\nconst titleInput = ref(\"\");\r\nlet userIdInput = localStorage.getItem(\"userNickName\");\r\nconst mountainNameInput = ref(\"\");\r\nconst contentInput = ref(\"\");\r\nconst typeInput = ref(\"\");\r\nlet latitudeInput = 0;\r\nlet longitudeInput = 0;\r\n\r\n\r\n// onMounted로 컴포넌트가 마운트된 후에 실행되도록 설정\r\nonMounted(() => {\r\ninitializeMap();\r\n});\r\n\r\nfunction initializeMap() {\r\n// Kakao 지도 API 스크립트를 로드\r\nconst script = document.createElement('script');\r\nscript.onload = () => kakao.maps.load(createMap); // 스크립트 로드 후 createMap 호출\r\nscript.src = 'https://dapi.kakao.com/v2/maps/sdk.js?appkey=333bda7da18df138fb4d9b3e5cf351c4&autoload=false&libraries=services'; // Kakao 지도 API\r\ndocument.head.appendChild(script);\r\n\r\n}\r\n\r\nfunction createMap() {\r\nconst mapContainer = document.getElementById(\"map\"); // 지도를 표시할 div 선택\r\nconst mapOption = {\r\n    center: new kakao.maps.LatLng(37.660833, 126.993333), // 지도의 중심 좌표\r\n    level: 8, // 지도 확대 레벨\r\n};\r\n\r\n// 지도 생성\r\nconst map = new kakao.maps.Map(mapContainer, mapOption);\r\n\r\n// 지도를 클릭한 위치에 표출할 마커입니다\r\nvar marker = new kakao.maps.Marker({\r\n    // 지도 중심좌표에 마커를 생성합니다\r\n    position: map.getCenter(),\r\n});\r\n// 지도에 마커를 표시합니다\r\nmarker.setMap(map);\r\n\r\n// 지도에 클릭 이벤트를 등록합니다\r\n// 지도를 클릭하면 마지막 파라미터로 넘어온 함수를 호출합니다\r\nkakao.maps.event.addListener(map, \"click\", function (mouseEvent) {\r\n    // 클릭한 위도, 경도 정보를 가져옵니다\r\n    var latlng = mouseEvent.latLng;\r\n\r\n    // 마커 위치를 클릭한 위치로 옮깁니다\r\n    marker.setPosition(latlng);\r\n\r\n    var message = \"클릭한 위치의 위도는 \" + latlng.getLat() + \" 이고, \";\r\n    message += \"경도는 \" + latlng.getLng() + \" 입니다\";\r\n\r\n    latitudeInput = latlng.getLat();\r\n    longitudeInput = latlng.getLng();\r\n\r\n    var resultDiv = document.getElementById(\"clickLatlng\");\r\n    resultDiv.innerHTML = message;\r\n});\r\n\r\n}\r\n\r\n// ==== 이미지 관련 코드 ==== //\r\n// 이미지 주소로 넘기기\r\nconst selectedFile = ref(null);\r\n\r\nconst onFileChange = (event) => {\r\nselectedFile.value = event.target.files[0];\r\n};\r\n\r\nconst uploadImage = async () => {\r\nif (!selectedFile.value) {\r\nreturn null; // 이미지가 없으면 null 반환\r\n}\r\n\r\nconst formData = new FormData();\r\nformData.append('file', selectedFile.value);\r\n\r\ntry {\r\nconst response = await axios.post(\r\n  '/api/complaint/upload',\r\n  formData,\r\n  {\r\n    headers: {\r\n      'Content-Type': 'multipart/form-data',\r\n    },\r\n  }\r\n);\r\nreturn response.data; // 서버에서 반환한 이미지 경로\r\n} catch (error) {\r\nconsole.error('Error uploading image', error);\r\nreturn null;\r\n}\r\n};\r\n\r\n// 민원 작성 함수 - 서버 요청\r\nasync function insertComplaintButton() {\r\nconst imagePath = await uploadImage();\r\n\r\nconst complaintData = {\r\ncomplaintTitle: titleInput.value,\r\ncomplaintContent: contentInput.value,\r\ncomplaintType: typeInput.value,\r\ncomplaintImg: imagePath || '',\r\nuserId: userIdInput,\r\nmountainName: mountainNameInput.value,\r\nlatitude: latitudeInput,\r\nlongitude: longitudeInput\r\n};\r\n\r\ntry {\r\nconst response = await insertComplaint(complaintData);\r\nconsole.log('서버 응답: ', response);\r\n\r\ngoToMainPage();\r\n} catch (error) {\r\nconsole.error(error);\r\n}\r\n}\r\n\r\n\r\nfunction goToMainPage() {\r\nrouter.replace({ path: \"/complaintList\" });\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.styled-button {\r\nbackground: linear-gradient(#d3d3d3, #a9a9a9);\r\ncolor: white;\r\npadding: 10px 20px;\r\nborder: none;\r\nborder-radius: 25px;\r\nfont-size: 16px;\r\nfont-weight: bold;\r\ncursor: pointer;\r\nbox-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\ntransition: all 0.3s ease;\r\n}\r\n</style>\r\n","import script from \"./ComplaintView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ComplaintView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ComplaintView.vue?vue&type=style&index=0&id=33718866&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-33718866\"]])\n\nexport default __exports__"],"names":["apiInstance","instance","axios","create","baseURL","headers","api","async","getComplaintList","response","get","console","log","data","err","error","getRecentComplaintList","getComplaintByUserId","userId","getComplaintListByInst","institution","getPathList","insertComplaint","post","status","getComplaintByNo","complaintNo","getUserById","getCourseById","courseId","deleteComplaintByNo","delete","updateComplaintByNo","patch","getUserPostList","userNo","getProcessingByNo","processingComplaintNo","insertProcessing","updateProcessingByNo","titleInput","ref","userIdInput","localStorage","getItem","mountainNameInput","contentInput","typeInput","latitudeInput","longitudeInput","initializeMap","script","document","createElement","onload","kakao","maps","load","createMap","src","head","appendChild","mapContainer","getElementById","mapOption","center","LatLng","level","map","Map","marker","Marker","position","getCenter","setMap","event","addListener","mouseEvent","latlng","latLng","setPosition","message","getLat","getLng","resultDiv","innerHTML","onMounted","selectedFile","onFileChange","value","target","files","uploadImage","formData","FormData","append","insertComplaintButton","imagePath","complaintData","complaintTitle","complaintContent","complaintType","complaintImg","mountainName","latitude","longitude","goToMainPage","router","replace","path","__exports__"],"sourceRoot":""}