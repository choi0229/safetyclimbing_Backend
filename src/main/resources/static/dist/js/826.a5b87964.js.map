{"version":3,"file":"js/826.a5b87964.js","mappings":"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","sources":["webpack://frontend/./src/components/MobileFooterView3.vue","webpack://frontend/./src/components/MobileFooterView3.vue?a8a5","webpack://frontend/./src/views/RecordView.vue","webpack://frontend/./src/views/RecordView.vue?5489"],"sourcesContent":["<template>\r\n  <div id=\"mobileFooter\">\r\n    <!-- 코스 아이콘 -->\r\n    <div class=\"footer-category\" @click=\"gotoMobileCourse()\" style=\"margin-right: 10px;\">\r\n      <img src=\"/images/코스2.png\" alt=\"코스 아이콘\" style=\"filter: grayscale(100%) brightness(0%);\">\r\n      <p style=\"\">코스</p>\r\n    </div>\r\n\r\n    <!-- 등산 아이콘 -->\r\n    <div class=\"footer-category\" @click=\"gotoMobileRecoding()\" style=\"margin-right: 10px;\">\r\n      <img src=\"/images/HikingIcon.gif\" alt=\"등산 아이콘\" style=\"filter: hue-rotate(280deg); width: 45px; height: 45px;\">\r\n      <p style=\"\">등산</p>\r\n    </div>\r\n\r\n    <!-- 홈 아이콘 -->\r\n    <div class=\"footer-category home\" @click=\"gotoHome()\">\r\n      <img src=\"/images/홈.png\" alt=\"홈 아이콘\" style=\"filter: grayscale(100%) brightness(0%);\">\r\n      <p style=\"\">홈</p>\r\n    </div>\r\n\r\n    <!-- 민원 신고 아이콘 -->\r\n    <div class=\"footer-category\" @click=\"gotoMobileComplaint()\" style=\"margin-left: 10px;\">\r\n      <img src=\"/images/위험신고.png\" alt=\"민원 신고 아이콘\" style=\"filter: grayscale(100%) brightness(0%);\">\r\n      <p style=\"\">민원신고</p>\r\n    </div>\r\n\r\n    <!-- 커뮤니티 아이콘 -->\r\n    <div class=\"footer-category\" @click=\"gotoMobileCommunity()\" style=\"margin-left: 10px;\">\r\n      <img src=\"/images/커뮤니티.png\" alt=\"커뮤니티 아이콘\" style=\"filter: grayscale(100%) brightness(0%);\">\r\n      <div style=\"margin: 0;  font-size: 13px; line-height: 1.2; text-align: center;\">커뮤니티</div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\n\r\nfunction gotoHome() {\r\n  window.location.href = '/mobilemainview';\r\n}\r\n\r\nfunction gotoMobileCourse() {\r\n  window.location.href = '/mobilecourseview';\r\n}\r\n\r\nfunction gotoMobileCommunity() {\r\n  window.location.href = '/mobilecommunity';\r\n}\r\n\r\nfunction gotoMobileComplaint() {\r\n  window.location.href = '/complaintListMobile';\r\n}\r\n\r\nfunction gotoMobileRecoding() {\r\n  window.location.href = '/record';\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n@font-face {\r\n  font-family: 'TheJamsil5Bold';\r\n  src: url('https://fastly.jsdelivr.net/gh/projectnoonnu/noonfonts_2302_01@1.0/TheJamsil5Bold.woff2') format('woff2');\r\n  font-weight: 700;\r\n  font-style: normal;\r\n}\r\n\r\nh1,\r\nh2,\r\nh3,\r\ndiv,\r\n.btn-group .btn,\r\np {\r\n  /* 특정 요소에 폰트 적용 */\r\n  font-family: \"TheJamsil5Bold\", sans-serif !important;\r\n}\r\n\r\n#mobileFooter {\r\n  position: fixed;\r\n  height: 70px; /* 푸터 높이 */\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  background-color: #ffffff;\r\n  display: flex;\r\n  justify-content: space-between; /* 간격 균등 배치 */\r\n  align-items: center;\r\n  padding: 0 5px; /* 좌우 여백 */\r\n  box-shadow: 0 -2px 4px rgba(0, 0, 0, 0.1);\r\n  z-index: 1000;\r\n}\r\n\r\n.footer-category {\r\n  display: flex;\r\n  flex-direction: column; /* 아이콘과 텍스트 세로 배치 */\r\n  align-items: center; /* 수평 중앙 정렬 */\r\n  text-align: center;\r\n  font-family: 'TheJamsil4Bold';\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  flex: 1; /* 각 버튼의 동일한 크기 */\r\n}\r\n\r\n.footer-category img {\r\n  width: 30px; /* 아이콘 크기 증가 */\r\n  height: 30px;\r\n  margin-bottom: 5px; /* 아이콘과 텍스트 간 간격 */\r\n}\r\n\r\n.footer-category p {\r\n  margin: 0; /* 텍스트 간 여백 제거 */\r\n  font-size: 13px;\r\n  line-height: 1.2;\r\n  text-align: center;\r\n}\r\n\r\n</style>\r\n","import script from \"./MobileFooterView3.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./MobileFooterView3.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./MobileFooterView3.vue?vue&type=style&index=0&id=43785973&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-43785973\"]])\n\nexport default __exports__","<template>\r\n    <MobileHeaderView class=\"header\" />\r\n    <!-- 상단 버튼 그룹 -->\r\n    <div class=\"btn-group-container\">\r\n        <div class=\"btn-group\" role=\"group\" aria-label=\"Basic radio toggle button group\">\r\n            <input type=\"radio\" class=\"btn-check\" name=\"btnradio\" id=\"btnradio1\" autocomplete=\"off\" checked>\r\n            <label class=\"btn btn-outline-success\" for=\"btnradio1\">운동</label>\r\n            <input type=\"radio\" class=\"btn-check\" name=\"btnradio\" id=\"btnradio2\" autocomplete=\"off\" @click=\"goToRecordImg()\">\r\n            <label class=\"btn btn-outline-success\" for=\"btnradio2\">기록</label>\r\n            <input type=\"radio\" class=\"btn-check\" name=\"btnradio\" id=\"btnradio3\" autocomplete=\"off\" @click=\"goToMyCom()\">\r\n            <label class=\"btn btn-outline-success\" for=\"btnradio3\">나의 커뮤니티</label>\r\n        </div>\r\n    </div>\r\n    <!-- 지도 및 주요 콘텐츠 -->\r\n    <MobileHeaderView class=\"header\" />\r\n        <div class=\"app-main\">\r\n            <div class=\"map-container\">\r\n                <div id=\"map\"></div>\r\n                <!-- 가운데 시작 버튼 -->\r\n                <div class=\"timer-display\">\r\n                    <span>{{ formattedHours }}</span>:<span>{{ formattedMins }}</span>:<span>{{ formattedSecs }}</span>\r\n                </div>\r\n                <div class=\"centered-button\">\r\n                    <button @click=\"toggleTracking\" class=\"start-button\">\r\n                    {{ isTracking ? \"저장\" : \"시작\" }}\r\n                    </button>\r\n                </div>\r\n\r\n                <!-- 하단 목표 설정 버튼 -->\r\n                <button class=\"goal-button\" @click=\"stopTracking\">\r\n                <img src=\"/images/정지4.png\" alt=\"\" style=\"width: 20px; height: 20px;\">\r\n                </button>\r\n            <button class=\"TTS\"><img src=\"/images/음성.png\" style=\"width: 32px; height: auto;\"></button>\r\n            </div>\r\n        </div>\r\n        <MobileFooterView3 class=\"footer\"></MobileFooterView3>\r\n\r\n<div class=\"modal\" id=\"saveModal\" data-bs-backdrop=\"static\" data-bs-keyboard=\"false\" tabindex=\"-1\" aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog modal-dialog-centered\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\"><img src=\"/images/저장.png\" alt=\"\" style=\"width: 20px; height: 20px; margin-right: 3px;\">기록 저장</h5>\r\n        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <p style=\"border-bottom: solid 1px #333;\">등산 기록을 저장하시겠습니까?</p>\r\n        <div class=\"d-flex flex-column mb-3 fv-row\">\r\n            <label class=\"d-flex align-items-center fs-6 fw-semibold mb-2\">\r\n            <span class=\"required\">사진 등록</span>\r\n            </label>\r\n            <input\r\n            type=\"file\"\r\n            id=\"image\"\r\n            @change=\"onFileChange\"\r\n            ref=\"image\"\r\n            accept=\"image/*\"\r\n            />\r\n        </div>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\" @click=\"delteRecord()\">삭제</button>\r\n        <button type=\"button\" class=\"btn btn-primary\" @click=\"saveRecord()\">저장</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n</template>\r\n\r\n<script setup>\r\nimport MobileFooterView3 from \"@/components/MobileFooterView3.vue\";\r\nimport MobileHeaderView from \"@/components/MobileHeaderView.vue\";\r\n/* global kakao */\r\nimport { ref, reactive, computed, onMounted, onBeforeUnmount } from 'vue';\r\nimport axios from 'axios';\r\nimport router from '@/router';\r\nimport { Modal } from \"bootstrap\";\r\n\r\n// 위치 상태 관리\r\nconst latitude = ref(37.641774041520812);\r\nconst longitude = ref(126.98750152017325);\r\nconst altitude = ref(null);\r\nconst speed = ref(null);\r\nconst bearing = ref(null);\r\nconst time = ref(\"\");\r\nlet polyline, map, redDot, whiteDot, BigDot;\r\n\r\n// 타이머 관련 상태 관리\r\nlet hours = ref(0);\r\nlet mins = ref(0); \r\nlet secs = ref(0);\r\nlet interval;\r\nlet path = reactive([]); // 경로 저장\r\nconst isTracking = ref(false); // 경로 기록 상태\r\nconst isTrackingComplete = ref(false); // 기록 저장 버튼 활성화 상태\r\n\r\n// 음성\r\nconst message = ref('30m 앞에 위험 구간입니다. 주의하세요.');\r\nconst triggeredMarkers = new Set(); // 경고가 이미 발생한 마커 ID를 저장하는 Set\r\nconst isVoiceLoaded = ref(false); // 스크립트 로드 상태 추적\r\n\r\n// 지도 초기화 함수\r\nfunction initializeMap() {\r\n    const script = document.createElement('script');\r\n    script.src = 'https://dapi.kakao.com/v2/maps/sdk.js?appkey=333bda7da18df138fb4d9b3e5cf351c4&autoload=false&libraries=clusterer,services';\r\n    document.head.appendChild(script);\r\n\r\n    script.onload = () => {\r\n        if (window.kakao && window.kakao.maps) {\r\n            window.kakao.maps.load(() => {\r\n                const mapContainer = document.getElementById('map');\r\n                const mapOption = {\r\n                    center: new kakao.maps.LatLng(latitude.value, longitude.value),\r\n                    level: 3\r\n                };\r\n                map = new kakao.maps.Map(mapContainer, mapOption);\r\n\r\n                // 점 및 경로 표시 초기화\r\n                initOverlays();\r\n                initPolyline();\r\n                loadDangerMarkers(\"/data/2023산악사고_인왕산2.geojson\", '/images/danger.png');\r\n                // 지도 로드 후에 위치 업데이트\r\n                if (latitude.value && longitude.value) {\r\n                    console.log('실행');\r\n                    updateMapPosition();\r\n                }\r\n            });\r\n        }\r\n    };\r\n}\r\n\r\n// 사용자 위치와 위험 지점 위치를 경로로 추가하여 거리 계산하기\r\nfunction calculateDistanceUsingPolyline(userPosition, dangerPosition) {\r\n  const linePath = [\r\n    userPosition,\r\n    dangerPosition\r\n  ];\r\n  const polyline = new kakao.maps.Polyline({ path: linePath });\r\n  return polyline.getLength();\r\n}\r\n\r\n// 위험 구역 접근 확인 함수\r\nfunction checkProximityUsingPolyline(userPosition) {\r\n  console.log(\"Checking proximity for position:\", userPosition); // 확인 로그\r\n  dangerMarkers.value.forEach((dangerMarker) => {\r\n    const markerPosition = dangerMarker.getPosition();\r\n    const markerId = `${markerPosition.getLat()},${markerPosition.getLng()}`;\r\n\r\n    if (triggeredMarkers.has(markerId)) return;\r\n\r\n    const distance = calculateDistanceUsingPolyline(userPosition, markerPosition);\r\n    if (distance <= 30) {\r\n      console.log('위험 구역 접근:', dangerMarker.getTitle());\r\n      speakMessage();\r\n      triggeredMarkers.add(markerId);\r\n    }\r\n  });\r\n}\r\n\r\nfunction loadResponsiveVoice() {\r\n  return new Promise((resolve, reject) => {\r\n    const script = document.createElement('script');\r\n    script.src = 'https://code.responsivevoice.org/responsivevoice.js?key=VGYcmCsP';\r\n    script.onload = () => {\r\n      isVoiceLoaded.value = true;\r\n      resolve();\r\n    };\r\n    script.onerror = () => reject(new Error('ResponsiveVoice.js 로드 실패'));\r\n    document.head.appendChild(script);\r\n  });\r\n}\r\n\r\n// 음성 안내 함수\r\nfunction speakMessage() {\r\n  if (isVoiceLoaded.value && window.responsiveVoice) {\r\n    const text = message.value;\r\n    const lang = \"Korean Female\";\r\n    window.responsiveVoice.speak(text, lang);\r\n  } else {\r\n    alert('음성 합성 라이브러리가 로드되지 않았습니다.');\r\n  }\r\n}\r\n\r\nconst dangerMarkers = ref([]);  // 위험구역 마커 목록을 저장할 ref 변수 (삭제되지 않음)\r\n\r\n// JSON 데이터를 사용하여 위험 마커 추가\r\nasync function loadDangerMarkers(url, imageSrc) {\r\n  try {\r\n    const response = await fetch(url); // JSON 파일에서 마커 정보를 가져오기\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! status: ${response.status}`);\r\n    }\r\n    const markerData = await response.json();\r\n    console.log(`${url} 마커 데이터 로드 성공:`, markerData);\r\n\r\n    const imageSize = new kakao.maps.Size(35, 45);\r\n    const imageOpation = { offset: new kakao.maps.Point(12, 35) };\r\n    const markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize, imageOpation);\r\n\r\n    // GeoJSON 데이터의 features 배열에서 마커 추가\r\n    markerData.features.forEach((spot) => {\r\n      const lat = spot.geometry.coordinates[1]; // 위도\r\n      const lng = spot.geometry.coordinates[0]; // 경도\r\n      const markerPosition = new kakao.maps.LatLng(lat, lng); // 마커 좌표\r\n\r\n      // 마커 생성\r\n      const marker = new kakao.maps.Marker({\r\n        position: markerPosition, // 마커 위치\r\n        map: map, // 마커를 표시할 지도 객체\r\n        title: spot.properties.MNTN_NM, // 마커 제목\r\n        image: markerImage,\r\n        id: `${lat},${lng}`, // 마커의 고유 ID로 좌표 사용\r\n      });\r\n\r\n      // 위험구역 마커를 dangerMarkers에 추가\r\n      dangerMarkers.value.push(marker);\r\n\r\n      // 마커에 대한 정보창 추가\r\n      const infowindow = new kakao.maps.InfoWindow({\r\n        content: `<div style=\"padding:5px;\">${spot.properties.MNTN_NM}<br>${spot.properties.SAFE_SPOT2}</div>`, // 정보창 내용\r\n      });\r\n\r\n      // 마커에 마우스오버 이벤트 등록\r\n      kakao.maps.event.addListener(marker, 'mouseover', () => infowindow.open(map.value, marker));\r\n      kakao.maps.event.addListener(marker, 'mouseout', () => infowindow.close());\r\n    });\r\n\r\n    // 추가 좌표 (예시: 37.5677020596, 126.82765689400)\r\n    // 추가 좌표 (예시: 37.56883961294, 126.8310780462)\r\n    const extraLat = 37.515772995522;\r\n    const extraLng = 127.03493276089;\r\n    const extraMarkerPosition = new kakao.maps.LatLng(extraLat, extraLng);\r\n    \r\n    const extraMarker = new kakao.maps.Marker({\r\n      position: extraMarkerPosition,\r\n      map: map,\r\n      title: \"추가 위험 지역\",\r\n      image: markerImage,\r\n      id: `${extraLat},${extraLng}`,\r\n    });\r\n\r\n    // 추가 마커 dangerMarkers 목록에 추가\r\n    dangerMarkers.value.push(extraMarker);\r\n    //마커 추가 끝\r\n  } catch (error) {\r\n    console.error(`${url} 파일 로드 중 에러 발생:`, error);\r\n  }\r\n}\r\n\r\n// 서버에서 위치 정보들을 가져오는 함수\r\nasync function fetchLocation() {\r\n    try {\r\n        const response = await axios.get('/api/recordlocation');\r\n        console.log(\"Received response:\", response.data); // 응답 데이터 확인\r\n        latitude.value = response.data.latitude;\r\n        longitude.value = response.data.longitude;\r\n        altitude.value = response.data.altitude;\r\n        speed.value = response.data.speed;\r\n        bearing.value = response.data.bearing;\r\n        time.value = response.data.time;\r\n\r\n        // 지도와 경로를 갱신\r\n        updateMapPosition();\r\n    } catch (error) {\r\n        console.error(\"Error fetching location:\", error);\r\n    }\r\n}\r\n\r\n// 지도와 마커 위치 갱신 함수\r\nfunction updateMapPosition() {\r\n    \r\n    if (!map) return;  // Kakao Maps가 로드되지 않았으면 반환\r\n\r\n    const newLatLng = new kakao.maps.LatLng(latitude.value, longitude.value);\r\n\r\n    // 경로 추가 (isTracking이 true일 때만 기록)\r\n    if (isTracking.value) {\r\n        path.push({\r\n            latitude: latitude.value,\r\n            longitude: longitude.value,\r\n            altitude: altitude.value,\r\n            speed: speed.value,\r\n            bearing: bearing.value,\r\n            time: time.value\r\n        });\r\n        polyline.setPath(path.map(point => new kakao.maps.LatLng(point.latitude, point.longitude)));\r\n\r\n    }\r\n\r\n    // 마커 위치 업데이트\r\n    if (redDot && whiteDot && BigDot) {\r\n        redDot.setPosition(newLatLng);\r\n        whiteDot.setPosition(newLatLng);\r\n        BigDot.setPosition(newLatLng);\r\n    }\r\n\r\n    // 지도 중심 이동\r\n    map.panTo(newLatLng);\r\n\r\n    // 사용자 위치가 위험 구역 근처인지 확인하여 음성 안내 재생\r\n    checkProximityUsingPolyline(newLatLng);\r\n}\r\n\r\n// CustomOverlay 초기화 함수\r\nfunction initOverlays() {\r\n    const position = new kakao.maps.LatLng(latitude.value, longitude.value);\r\n    BigDot = new kakao.maps.CustomOverlay({\r\n        position,\r\n        content: '<div style=\"width: 24px; height: 24px; border-radius: 50%; background-color: rgba(255, 0, 0, 0.2);\"></div>',\r\n        yAnchor: 0.5\r\n    });\r\n    BigDot.setMap(map);\r\n\r\n    whiteDot = new kakao.maps.CustomOverlay({\r\n        position,\r\n        content: '<div style=\"width: 14px; height: 14px; border-radius: 50%; background-color: #FFFFFF;\"></div>',\r\n        yAnchor: 0.5\r\n    });\r\n    whiteDot.setMap(map);\r\n\r\n    redDot = new kakao.maps.CustomOverlay({\r\n        position,\r\n        content: '<div style=\"width: 10px; height: 10px; background-color: #FF0000; border-radius: 50%;\"></div>',\r\n        yAnchor: 0.5\r\n    });\r\n    redDot.setMap(map);\r\n}\r\n\r\n// Polyline 초기화 함수\r\nfunction initPolyline() {\r\n    polyline = new kakao.maps.Polyline({\r\n        map: map,\r\n        path: path,\r\n        strokeWeight: 5,\r\n        strokeColor: '#0000FF',\r\n        strokeOpacity: 0.7,\r\n        strokeStyle: 'solid'\r\n    });\r\n}\r\n\r\n// 타이머 관련 함수\r\nfunction startTimer() {\r\n    secs.value++;\r\n    if (secs.value >= 60) {\r\n        secs.value = 0;\r\n        mins.value++;\r\n    }\r\n    if (mins.value >= 60) {\r\n        mins.value = 0;\r\n        hours.value++;\r\n    }\r\n}\r\n\r\n// 경로 추적 상태 토글 함수\r\nfunction toggleTracking() {\r\n    if (isTracking.value) {\r\n        resetTracking(); // 정지 시 기록 저장 활성화\r\n        isTrackingComplete.value = true;\r\n    } else {\r\n        startTracking(); // 시작 시 기록 저장 비활성화\r\n        isTrackingComplete.value = false;\r\n    }\r\n}\r\n\r\n// 타이머 및 경로 추적 함수들\r\nfunction startTracking() {\r\n    if (!isTracking.value) {\r\n        isTracking.value = true;\r\n        interval = setInterval(startTimer, 1000);\r\n    }\r\n}\r\n\r\nfunction stopTracking() {\r\n    clearInterval(interval);\r\n    isTracking.value = false;\r\n}\r\n\r\nfunction resetTracking() {\r\n    clearInterval(interval);\r\n    isTracking.value = false;\r\n    showSaveModal();\r\n}\r\n\r\n// 시간 포맷팅 함수\r\nconst formattedHours = computed(() => hours.value.toString().padStart(2, '0'));\r\nconst formattedMins = computed(() => mins.value.toString().padStart(2, '0'));\r\nconst formattedSecs = computed(() => secs.value.toString().padStart(2, '0'));\r\n\r\nconst totalTime = computed(() => `${formattedHours.value}:${formattedMins.value}:${formattedSecs.value}`);\r\n\r\n// 모달 관련 함수, 변수\r\nlet saveModal;\r\n\r\nfunction showSaveModal(){\r\n    const elem = document.querySelector('#saveModal');\r\n    saveModal = new Modal(elem);\r\n    saveModal.show();\r\n}\r\n\r\nfunction delteRecord() {\r\n    hours.value = 0;\r\n    mins.value = 0;\r\n    secs.value = 0;\r\n    path.splice(0, path.length); // 경로 초기화\r\n    polyline.setPath(path);\r\n}\r\n\r\nasync function saveRecord() {\r\n    console.log(\"경로:\", path, \"타입:\", typeof path);\r\n\r\n    // requestInsertPath 호출 시 각 객체에서 모든 속성 추출\r\n    const trackingPathList = path.map(point => ({\r\n        latitude: point.latitude,\r\n        longitude: point.longitude,\r\n        altitude: point.altitude,\r\n        speed: point.speed,\r\n        bearing: point.bearing,\r\n        time: point.time\r\n    }));\r\n\r\n    console.log(\"바꾼 경로 : \",trackingPathList);\r\n\r\n    const id = await requestInsertPathInfo();\r\n    console.log(\"id = \" + id);\r\n\r\n    if (id) { // pathId가 유효한 경우에만 저장\r\n        await requestInsertTrackingPath(trackingPathList, id);\r\n    } else {\r\n        console.error(\"Path ID is not valid.\");\r\n        return; // ID가 유효하지 않으면 종료\r\n    }\r\n    \r\n    saveModal.hide();\r\n    delteRecord();\r\n    router.push({path:'/recordImg'});\r\n}\r\n\r\nasync function requestInsertPathInfo() {\r\n    const imagePath = await uploadImage();\r\n    const data = {\r\n        userId: localStorage.getItem(\"userId\"),\r\n        pathImg: imagePath || '',\r\n        totalTime: totalTime.value\r\n    }\r\n    try {\r\n        const response = await axios.post('/api/savePathInfo', data);\r\n        console.log('등산 기록 코스에 대한 응답 데이터:', response.data);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error(\"Error fetching location:\", error);\r\n    }\r\n}\r\n\r\nasync function requestInsertTrackingPath(trackingPathList, pathId) {\r\n    for (const tracking of trackingPathList) {\r\n        const data = {\r\n            pathId: pathId,\r\n            latitude: tracking.latitude,\r\n            longitude: tracking.longitude,\r\n            altitude: tracking.altitude,\r\n            speed: tracking.speed,\r\n            bearing: tracking.bearing,\r\n            time: tracking.time\r\n        };\r\n        \r\n        try {\r\n            const response = await axios.post('/api/saveTrackingPath', data);\r\n            console.log('코스 경로 정보에 대한 응답 데이터:', response.data);\r\n        } catch (error) {\r\n            console.error(\"Error saving tracking path:\", error);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nfunction goToRecordImg(){\r\n    router.push({path:'/recordImg'});\r\n}\r\n\r\nfunction goToMyCom(){\r\n    router.push({path:'/myCommunity'});\r\n}\r\n\r\n// 컴포넌트가 마운트될 때 지도 초기화 및 위치 추적 시작\r\nonMounted(async() => {\r\n    try{\r\n        await loadResponsiveVoice();\r\n        \r\n        initializeMap();\r\n        fetchLocation();\r\n        setInterval(fetchLocation, 2000); // 3초마다 위치 데이터 가져오기\r\n    }catch(error){\r\n        console.log(error);\r\n    }\r\n});\r\n\r\n// 컴포넌트가 언마운트될 때 인터벌 클리어\r\nonBeforeUnmount(() => {\r\n    clearInterval(fetchLocation);\r\n});\r\n\r\n// ==== 이미지 관련 코드 ====\r\nconst selectedFile = ref(null);\r\n\r\nconst onFileChange = (event) => {\r\n  selectedFile.value = event.target.files[0];\r\n};\r\n\r\nconst uploadImage = async () => {\r\n  if (!selectedFile.value) {\r\n    return null;\r\n  }\r\n  const formData = new FormData();\r\n  formData.append('file', selectedFile.value);\r\n\r\n  try {\r\n    const response = await axios.post('/api/complaint/upload', formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error uploading image', error);\r\n    return null;\r\n  }\r\n};\r\n\r\n\r\n</script>\r\n\r\n\r\n\r\n<style scoped>\r\nh1,\r\nh2,\r\nh3,\r\n.btn-group .btn,\r\n.start-button,\r\np {\r\n  /* 특정 요소에 폰트 적용 */\r\n  font-family: \"TheJamsil5Bold\", sans-serif !important;\r\n}\r\n\r\n.map-container {\r\n    width: 100%;\r\n    height: 670px;\r\n    overflow: hidden; /* Prevent scroll */\r\n    position: relative;\r\n}\r\n\r\n#map {\r\n    width: 100%;\r\n    height: 100%; /* 부모 높이에 맞추기 */\r\n}\r\n\r\n.time {\r\n    position: absolute;\r\n    bottom: 90px; /* 지도 하단에서 약간 떨어뜨려 표시 */\r\n    left: 53%;\r\n    transform: translateX(-50%);\r\n    background-color: rgba(255, 255, 255, 0.8); /* 반투명 배경 */\r\n    padding: 10px;\r\n    border-radius: 10px;\r\n    display: flex;\r\n    align-items: center;\r\n    width: 90%;\r\n    justify-content: space-between;\r\n    z-index: 10;\r\n}\r\n\r\n.time p {\r\n    margin: 0;\r\n}\r\n\r\n.time button {\r\n    margin-left: 5px;\r\n}\r\n\r\n\r\n.icon-button img {\r\n    width: 24px; /* 아이콘 크기 */\r\n    height: 24px;\r\n}\r\n\r\n.icon-button:hover {\r\n    background-color: #848484; /* 마우스 오버 시 약간 진한 회색 */\r\n}\r\n\r\n.icon-button:active {\r\n    background-color: #ff4d4d; /* 클릭 시 빨간색 */\r\n}\r\n\r\n.btn-group-container {\r\n  position: fixed;\r\n  top: 13px; /* 헤더 위에 나타나도록 조정 */\r\n  right: 10px; /* 오른쪽 끝에 배치 */\r\n  z-index: 50; /* 헤더 위에 나타나도록 설정 */\r\n  background-color: white;\r\n  border-radius: 8px; /* 둥근 모서리 */\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 5px; /* 버튼 간 간격 */\r\n  padding: 5px;\r\n}\r\n\r\n/* 버튼 스타일 */\r\n.btn-group .btn {\r\n  font-size: 12px; /* 버튼 글씨 크기 축소 */\r\n  padding: 4px 8px; /* 버튼 패딩 축소 */\r\n  color: black;\r\n  border: 1px solid #4caf50;\r\n  border-radius: 4px; /* 약간 둥글게 */\r\n  margin: 0;\r\n  white-space: nowrap; /* 텍스트 줄바꿈 방지 */\r\n}\r\n\r\n.btn-group .btn:hover {\r\n  background-color: #4caf50;\r\n  color: white;\r\n}\r\n\r\n.btn-group .btn-check:checked + .btn {\r\n  background-color: #4caf50;\r\n  color: white;\r\n}\r\n\r\n.header {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    z-index: 30;\r\n    background-color: white; /* 헤더 배경색 */\r\n    border-bottom: 1px solid #ddd; /* 헤더 아래 구분선 */\r\n    height: 60px; /* 헤더 높이 설정 */\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    padding: 0 15px;\r\n}\r\n\r\n.timer-display{\r\n    position: absolute;\r\n    bottom: 8%; \r\n    left: 50%;\r\n    transform: translate(-50%, 50%);\r\n    z-index: 12; /* 지도 위에 표시되도록 */   \r\n    font-size: 30px;\r\n    font-weight: bold;\r\n    color: #333333;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    text-align: center;\r\n    border-bottom: solid 1px #4caf50;\r\n    padding-left: 4px;\r\n    padding-right: 4px;\r\n}\r\n\r\n.centered-button {\r\n  position: absolute;\r\n  bottom: 20%; \r\n  left: 50%;\r\n  transform: translate(-50%, 50%);\r\n  z-index: 10; /* 지도 위에 표시되도록 */\r\n}\r\n\r\n/* 하단 목표 설정 버튼 */\r\n.goal-button {\r\n    width: 50px; \r\n    height: 50px;\r\n    position: absolute;\r\n    bottom: 16%;\r\n    left: 25%;\r\n    transform: translateX(-50%);\r\n    background-color: #ffffff;\r\n    border: 1px solid #cccccc;\r\n    border-radius: 50%;\r\n    font-size: 14px;\r\n    color: #333333;\r\n    cursor: pointer;\r\n    z-index: 10;\r\n    box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.2);\r\n    transition: all 0.3s ease;\r\n}\r\n\r\n/* 호버 효과 */\r\n.goal-button:hover {\r\n    background-color: #f8f8f8; /* 약간 밝아지는 효과 */\r\n    border-color: #bdbdbd;\r\n    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.3); /* 그림자 강화 */\r\n}\r\n\r\n/* 클릭 효과 */\r\n.goal-button:active {\r\n    background-color: #e0e0e0; /* 클릭 시 색상 변경 */\r\n    transform: translateX(-100%) scale(0.95); /* 클릭 시 약간 작아짐 */\r\n}\r\n\r\n.start-button {\r\n    width: 130px;\r\n    height: 130px;\r\n    position: relative;\r\n    bottom: 0px;\r\n    border: none;\r\n    border-radius: 50%;\r\n    background-color: #51b951; /* 버튼 배경색 (노란색) */\r\n    font-size: 22px;\r\n    font-weight: bold;\r\n    color: white;\r\n    cursor: pointer;\r\n    box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.2); /* 약간의 그림자 */\r\n    transition: all 0.3s ease;\r\n}\r\n\r\n.start-button:hover {\r\n    background-color: #a6ec02; /* hover 시 더 짙은 노란색 */\r\n    color: black; /* 텍스트를 흰색으로 변경 */\r\n}\r\n\r\n.start-button:active {\r\n    background-color: #ffa500; /* 클릭 시 색상 변경 */\r\n    transform: scale(0.95); /* 클릭 시 약간 줄어듦 */\r\n}\r\n\r\n/* 하단 목표 설정 버튼 */\r\n.TTS {\r\n    position: absolute;\r\n    bottom: 16%;\r\n    left: 75%;\r\n    transform: translateX(-50%);\r\n    background-color: #ffffff;\r\n    border: 1px solid #cccccc;\r\n    border-radius: 50%; /* 원형 버튼 */\r\n    width: 50px; /* 버튼의 너비 */\r\n    height: 50px; /* 버튼의 높이 (너비와 동일하게 설정) */\r\n    display: flex; /* 내부 텍스트를 중앙 정렬 */\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: 14px;\r\n    color: #333333;\r\n    cursor: pointer;\r\n    z-index: 10;\r\n    box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.2); /* 약간의 그림자 */\r\n    transition: all 0.3s ease;\r\n}\r\n\r\n/* 호버 효과 */\r\n.TTS:hover {\r\n    background-color: #f8f8f8; /* 약간 밝아지는 효과 */\r\n    border-color: #bdbdbd;\r\n    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.3); /* 그림자 강화 */\r\n}\r\n\r\n/* 클릭 효과 */\r\n.TTS:active {\r\n    background-color: #e0e0e0; /* 클릭 시 색상 변경 */\r\n    transform: scale(0.95); /* 클릭 시 약간 작아짐 */\r\n}\r\n\r\n.footer {\r\n    position: fixed;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    height: 60px; /* 적절한 높이 */\r\n    z-index: 1000; /* 위에 고정 */\r\n    background-color: white; /* 배경색 */\r\n    box-shadow: 0px -1px 5px rgba(0, 0, 0, 0.1); /* 위쪽 그림자 */\r\n}\r\n\r\n/* 반응형 조정 */\r\n@media (max-width: 768px) {\r\n  .start-button {\r\n    width: 100px;\r\n    height: 100px;\r\n    font-size: 25x;\r\n  }\r\n\r\n  .goal-button {\r\n    font-size: 12px;\r\n  }\r\n}\r\n\r\n.modal-content {\r\n  border-radius: 15px; /* 둥근 모서리 */\r\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.2); /* 그림자 */\r\n  background: linear-gradient(145deg, #f9f9f9, #ffffff); /* 부드러운 배경 그라데이션 */\r\n  padding: 20px; /* 내부 간격 */\r\n}\r\n\r\n/* 모달 헤더 */\r\n.modal-header {\r\n  border-bottom: none; /* 구분선 제거 */\r\n  text-align: center; /* 텍스트 중앙 정렬 */\r\n  padding-bottom: 10px;\r\n}\r\n\r\n.modal-title {\r\n  font-family: \"TheJamsil5Bold\", sans-serif;\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n  color: #333;\r\n}\r\n\r\n.btn-close {\r\n  background-color: #f0f0f0;\r\n  border-radius: 50%;\r\n  padding: 5px;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.btn-close:hover {\r\n  background-color: #e0e0e0;\r\n}\r\n\r\n/* 모달 바디 */\r\n.modal-body {\r\n  font-family: \"TheJamsil5Bold\", sans-serif;\r\n  color: #666;\r\n  line-height: 1.6;\r\n  font-size: 14px;\r\n  text-align: center; /* 텍스트 중앙 정렬 */\r\n}\r\n\r\n.modal-body p {\r\n  font-size: 16px;\r\n  margin-bottom: 20px;\r\n  font-weight: 600;\r\n  color: #444;\r\n}\r\n\r\n/* 사진 등록 파일 업로드 스타일 */\r\ninput[type=\"file\"] {\r\n  display: block;\r\n  margin: 10px auto;\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n  width: 80%; /* 업로드 창 크기 */\r\n  transition: all 0.3s ease;\r\n}\r\n\r\ninput[type=\"file\"]:hover {\r\n  background-color: #f9f9f9;\r\n  border-color: #bbb;\r\n}\r\n\r\n/* 모달 푸터 */\r\n.modal-footer {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border-top: none; /* 구분선 제거 */\r\n}\r\n\r\n.modal-footer button {\r\n  font-family: \"TheJamsil5Bold\", sans-serif;\r\n  font-size: 14px;\r\n  padding: 10px 20px;\r\n  border-radius: 10px; /* 둥근 버튼 */\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.modal-footer .btn-secondary {\r\n  background-color: #e0e0e0;\r\n  color: #333;\r\n  border: none;\r\n}\r\n\r\n.modal-footer .btn-secondary:hover {\r\n  background-color: #d6d6d6;\r\n}\r\n\r\n.modal-footer .btn-primary {\r\n  background-color: #4caf50;\r\n  color: white;\r\n  border: none;\r\n}\r\n\r\n.modal-footer .btn-primary:hover {\r\n  background-color: #45a047;\r\n}\r\n\r\n/* 추가 장식 */\r\n.modal-footer .btn-primary::before {\r\n  content: \"✔ \";\r\n  font-weight: bold;\r\n}\r\n\r\n.modal-footer .btn-secondary::before {\r\n  content: \"✖ \";\r\n  font-weight: bold;\r\n}\r\n</style>","import script from \"./RecordView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./RecordView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./RecordView.vue?vue&type=style&index=0&id=f99ac608&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-f99ac608\"]])\n\nexport default __exports__"],"names":["gotoHome","window","location","href","gotoMobileCourse","gotoMobileCommunity","gotoMobileComplaint","gotoMobileRecoding","__exports__","latitude","ref","longitude","altitude","speed","bearing","time","polyline","map","redDot","whiteDot","BigDot","interval","hours","mins","secs","path","reactive","isTracking","isTrackingComplete","message","triggeredMarkers","Set","isVoiceLoaded","initializeMap","script","document","createElement","src","head","appendChild","onload","kakao","maps","load","mapContainer","getElementById","mapOption","center","LatLng","value","level","Map","initOverlays","initPolyline","loadDangerMarkers","console","log","updateMapPosition","calculateDistanceUsingPolyline","userPosition","dangerPosition","linePath","Polyline","getLength","checkProximityUsingPolyline","dangerMarkers","forEach","dangerMarker","markerPosition","getPosition","markerId","getLat","getLng","has","distance","getTitle","speakMessage","add","loadResponsiveVoice","Promise","resolve","reject","onerror","Error","responsiveVoice","text","lang","speak","alert","async","url","imageSrc","response","fetch","ok","status","markerData","json","imageSize","Size","imageOpation","offset","Point","markerImage","MarkerImage","features","spot","lat","geometry","coordinates","lng","marker","Marker","position","title","properties","MNTN_NM","image","id","push","infowindow","InfoWindow","content","SAFE_SPOT2","event","addListener","open","close","extraLat","extraLng","extraMarkerPosition","extraMarker","error","fetchLocation","axios","get","data","newLatLng","setPath","point","setPosition","panTo","CustomOverlay","yAnchor","setMap","strokeWeight","strokeColor","strokeOpacity","strokeStyle","startTimer","toggleTracking","resetTracking","startTracking","setInterval","stopTracking","clearInterval","showSaveModal","formattedHours","computed","toString","padStart","formattedMins","formattedSecs","totalTime","saveModal","elem","querySelector","Modal","show","delteRecord","splice","length","saveRecord","trackingPathList","requestInsertPathInfo","requestInsertTrackingPath","hide","router","imagePath","uploadImage","userId","localStorage","getItem","pathImg","post","pathId","tracking","goToRecordImg","goToMyCom","onMounted","onBeforeUnmount","selectedFile","onFileChange","target","files","formData","FormData","append","headers"],"sourceRoot":""}