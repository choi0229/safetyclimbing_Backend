{"version":3,"file":"js/482.bccc17be.js","mappings":"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","sources":["webpack://frontend/./src/views/MountainDetailView.vue","webpack://frontend/./src/views/MountainDetailView.vue?024c","webpack://frontend/./node_modules/chart.js/auto/auto.js"],"sourcesContent":["<template>\r\n  <HeaderView style=\"z-index: 4;width: 1920px;\"></HeaderView>\r\n\r\n  <div class=\"dashboard\">\r\n\r\n    <aside class=\"sidebar\">\r\n      <div class=\"d-flex flex-column\">\r\n        <div>\r\n          <!-- 헤더 섹션 -->\r\n          <div class=\"header\">\r\n            <button @click=\"goBack\" class=\"back-button\"><img src=\"/images/moveback_icon.png\" alt=\"뒤로가기 아이콘\" width=\"15\"\r\n                height=\"15\"></button>\r\n\r\n\r\n          </div>\r\n\r\n          <!-- 코스 이미지 및 기본 정보 -->\r\n          <div class=\"course-info\">\r\n            <div class=\"image-container\">\r\n              <img v-if=\"courseData?.courseImage\" :src=\"courseData.courseImage\" alt=\"Mountain Image\"\r\n                class=\"course-image\" />\r\n              <div class=\"image-overlay\">\r\n                <p class=\"image-course-name\">{{ courseData?.courseName }}코스</p>\r\n                <p class=\"image-course-location\">{{ courseData?.courseLocation }}<span id=\"courseTitle\">{{\r\n                  courseData?.mountainName || '코스 정보' }}</span></p>\r\n                <p class=\"difficulty-text\"> 난이도: {{ averageDifficultyText }} · <i\r\n                    class=\"bi bi-star-fill image-rating-star\"></i> {{ averageRating }}({{ reviewCount }})</p>\r\n              </div>\r\n            </div>\r\n            <div class=\"course-details\">\r\n              <p>{{ courseData?.courseContent }}</p>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"button-group\">\r\n            <div class=\"btn custom-btn primary-btn\" @click=\"showCoursePreviewModal\">\r\n              <img src=\"/images/미리보기.png\">\r\n            <p type=\"button\" @click=\"showCoursePreviewModal\">코스 미리보기</p>\r\n            </div>\r\n\r\n            <div class=\"btn custom-btn secondary-btn\" @click=\"goToCourse3DPage()\">\r\n              <img src=\"/images/산3D.png\">\r\n              <p type=\"button\" >3D 보기</p>\r\n            </div>\r\n            \r\n            <div class=\"btn custom-btn tertiary-btn\">\r\n              <img src=\"/images/비교하기.png\">\r\n              <p type=\"button\">코스 비교하기</p>\r\n            </div>\r\n            \r\n          </div>\r\n\r\n          <!-- 사고 요약 섹션 -->\r\n          <div class=\"accident-summary\">\r\n            <div class=\"carousel-container\">\r\n              <div class=\"card-carousel\" ref=\"accidentCarouselRef\">\r\n                <div class=\"card\">\r\n                  <div class=\"card-overlay\">\r\n                    <img src=\"/images/strumble.png\" class=\"card-img-top\"/>\r\n                    <span class=\"accident-item-content1\">실족 : {{ strumbleCount }}\r\n                      <div class=\"image-grid\">\r\n                        <div v-for=\"(strumble, index) in strumbles\" :key=\"strumble\" class=\"image-item\">\r\n                          <img\r\n                            :src=\"'/images/' + strumble\"\r\n                            class=\"clickable-image\"\r\n                            @click=\"openInfoWindowForImage(index, '실족')\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"card\">\r\n                  <div class=\"card-overlay\">\r\n                    <img src=\"/images/distress.png\" class=\"card-img-top\" /> \r\n                    <span class=\"accident-item-content1\">조난 : {{ distressCount }}\r\n                      <div class=\"image-grid\">\r\n                        <div v-for=\"(distress, index) in distresses\" :key=\"distress\" class=\"image-item\">\r\n                          <img\r\n                            :src=\"'/images/' + distress\"\r\n                            class=\"clickable-image\"\r\n                            @click=\"openInfoWindowForImage(index, '조난')\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </span>\r\n                    <span class=\"accident-item-content2\"></span>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"card\">\r\n                  <div class=\"card-overlay\">\r\n                    <img src=\"/images/disease.png\" class=\"card-img-top\" />\r\n                    <span class=\"accident-item-content1\">질환 : {{ diseaseCount }}\r\n                      <div class=\"image-grid\">\r\n                        <div v-for=\"(disease, index) in diseases\" :key=\"disease\" class=\"image-item\">\r\n                          <img\r\n                            :src=\"'/images/' + disease\"\r\n                            class=\"clickable-image\"\r\n                            @click=\"openInfoWindowForImage(index, '질환')\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </span>\r\n                    <span class=\"accident-item-content2\"></span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- 날씨 : 시작 -->\r\n          <div class=\"weather-forecast\" v-if=\"dailyWeather.length > 0\">\r\n\r\n            <div class=\"date-selector\">\r\n\r\n              <div v-for=\"(day, index) in dailyWeather.slice(0, 6)\" :key=\"index\" class=\"date-button-wrapper\">\r\n\r\n                <div class=\"day-label\">{{ formatDayOfWeek(day.date) }}</div> <!-- 요일 표시 -->\r\n\r\n                <button :class=\"['date-button', { active: selectedDateIndex === index }]\" @click=\"selectDate(index)\">\r\n                  {{ formatDate(day.date) }}\r\n                </button>\r\n\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"forecast-details\" v-if=\"selectedDay\">\r\n              <div class=\"d-flex\">\r\n\r\n                <div class=\"row\" id=\"forecast1\">\r\n\r\n                  <div class=\"d-flex\" style=\"margin-top: -1rem; margin-left: 0.3rem; width:200px; height:100px\">\r\n                    <p class=\"current-temperature\">{{ Math.round(selectedDay.currentTemp - 273.15) }}°</p>\r\n                    <p class=\"weather-icon\" v-html=\"getWeatherEmoji(selectedDay.weather[0].main)\"></p>\r\n                  </div>\r\n\r\n\r\n                  <div class=\"row\">\r\n\r\n                    <p class=\"description\">{{ translateWeatherDescription(selectedDay.weather[0].id) }}</p>\r\n\r\n                    <div class=\"temperature-range d-flex\">\r\n                      <p class=\"min-temp\">최저: {{ Math.round(selectedDay.minTemp - 273.15) }}°</p>\r\n                      <p class=\"max-temp\">최고: {{ Math.round(selectedDay.maxTemp - 273.15) }}°</p>\r\n                    </div>\r\n\r\n                  </div>\r\n\r\n                </div>\r\n\r\n\r\n\r\n\r\n                <div class=\"rainSun-info\">\r\n                  <div class=\"rain-info d-flex\">\r\n                    <div class=\"rain-icon\" :style=\"{ '--rain-level': selectedDay.pop * 100 + '%' }\"></div>\r\n                    <p class=\"rain-chance\" style=\"margin-top: 1rem; margin-left: 1.5rem;\">{{\r\n                      Math.round(selectedDay.pop * 100) }}%</p>\r\n                  </div>\r\n\r\n                  <div class=\"sun-info\">\r\n                    <p id=\"sunrise\"><img src=\"/images/sunrise.png\" alt=\"sunrise\" class=\"icon-small\">일출: {{\r\n                      sunriseTimes[selectedDateIndex] }}</p>\r\n                    <p id=\"sunset\"><img src=\"/images/sunset.png\" alt=\"sunset\" class=\"icon-small\">일몰: {{\r\n                      sunsetTimes[selectedDateIndex] }}</p>\r\n                  </div>\r\n\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"summary-section\">\r\n          <div class=\"rating\">\r\n            <p class=\"average-rating-text\">{{ averageRating }}</p>\r\n            <div class=\"stars\">\r\n              <i v-for=\"star in fullStars\" :class=\"'bi bi-star-fill'\" :key=\"star\"></i>\r\n              <i v-if=\"halfStar\" class=\"bi bi-star-half\"></i>\r\n              <i v-for=\"star in emptyStars\" class=\"bi bi-star\" :key=\"star\"></i>\r\n            </div>\r\n            <p class=\"review-count-text\">{{ reviewCount }}개의 리뷰</p>\r\n          </div>\r\n\r\n          <div class=\"rating-breakdown\">\r\n            <div v-for=\"(count, star) in ratingDistribution\" :key=\"star\" class=\"rating-bar\">\r\n              <span>{{ star }}점</span>\r\n              <i class=\"bi bi-star-fill n-star\"></i>\r\n              <div class=\"progress-bar\">\r\n                <div class=\"progress\" :style=\"{ width: (count / reviewCount) * 100 + '%' }\"></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 리뷰 작성 버튼 -->\r\n\r\n\r\n        <!-- 리뷰 작성 모달 -->\r\n        <div v-if=\"showModal\" class=\"overlay\" @click.self=\"showModal = false\">\r\n          <div class=\"review-form\">\r\n            <button class=\"close-button\" @click=\"showModal = false\">X</button>\r\n            <h2>리뷰 작성</h2>\r\n\r\n            <!-- 코스 선택 -->\r\n            <label for=\"course\" class=\"modal-label\">코스 선택</label>\r\n            <select v-model=\"selectedCourse\" id=\"course\" class=\"input-field\">\r\n              <option value=\"\" disabled>코스를 선택하세요</option>\r\n              <option v-for=\"course in courses\" :key=\"course.courseId\" :value=\"course.courseId\">\r\n                {{ course.courseName }}\r\n              </option>\r\n            </select>\r\n\r\n            <!-- 별점 -->\r\n            <div class=\"rating\">\r\n              <label class=\"modal-label\">별점</label>\r\n              <div class=\"stars\">\r\n                <i v-for=\"star in 5\" :key=\"star\"\r\n                  :class=\"star <= rating ? 'bi bi-star-fill n-star' : 'bi bi-star n-star'\" @click=\"setRating(star)\">\r\n                </i>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- 난이도 선택 -->\r\n            <label for=\"difficulty\" class=\"modal-label\">난이도</label>\r\n            <select v-model=\"difficulty\" id=\"difficulty\" class=\"input-field\">\r\n              <option value=\"\" disabled>난이도를 선택하세요</option>\r\n              <option value=\"쉬움\">쉬움</option>\r\n              <option value=\"보통\">보통</option>\r\n              <option value=\"어려움\">어려움</option>\r\n            </select>\r\n\r\n            <!-- 리뷰 내용 -->\r\n            <label class=\"modal-label\">리뷰 내용</label>\r\n            <textarea v-model=\"reviewContent\" placeholder=\"후기 내용을 입력하세요\" class=\"input-field textarea\"></textarea>\r\n\r\n            <!-- 사진 업로드 -->\r\n            <label for=\"photos\" class=\"modal-label\">사진 업로드</label>\r\n            <input type=\"file\" multiple @change=\"onFileChange\" class=\"file-input\" />\r\n\r\n            <!-- 제출 버튼 -->\r\n            <button @click=\"submitReview\" class=\"submit-button\">리뷰 작성</button>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 리뷰 페이지 -->\r\n        <div class=\"review-page\">\r\n          <div class=\"content-wrapper\">\r\n            <div class=\"review-search\">\r\n          \r\n            </div>\r\n            <div>\r\n              <button class=\"review-button\" @click=\"showModal = true\"><img src=\"/images/write.png\"\r\n                  style=\"width: 32px; height:32px; justify-content: center; margin-bottom: 0.1rem;\"></button>\r\n            </div>\r\n\r\n            <div class=\"reviews-list\">\r\n              <div v-for=\"review in visibleReviews\" :key=\"review.reviewId\" class=\"review-item\">\r\n                <div class=\"review-header\">\r\n                  <img class=\"profile-image\" :src=\"review.profileImage || '/images/main1.jpg'\" alt=\"Profile\" />\r\n                  <div class=\"user-info\">\r\n                    <h3>{{ review?.userId || 'Unknown User' }}</h3>\r\n                    <div class=\"stars-inline\" v-if=\"review?.rating !== undefined\">\r\n                      <i v-for=\"star in 5\" :class=\"{\r\n                        'bi bi-star-fill': review?.rating && star <= Math.floor(review.rating),\r\n                        'bi bi-star-half': review?.rating && star === Math.ceil(review.rating) && review.rating % 1 >= 0.5,\r\n                        'bi bi-star': !review?.rating || star > Math.ceil(review.rating)\r\n                      }\" :key=\"star\"></i>\r\n                    </div>\r\n\r\n                    <span class=\"review-date\">{{ formatDate(review?.date) }}</span>\r\n                  </div>\r\n                  <!-- 로그인한 사용자와 리뷰 작성자가 동일할 때만 수정 및 삭제 버튼 표시 -->\r\n                  <template v-if=\"review.userId === loggedInUserId\">\r\n                    <button @click=\"editReview(review)\" class=\"edit-button\">수정</button>\r\n                    <button @click=\"confirmDelete(review.reviewId)\" class=\"delete-button\">X</button>\r\n                  </template>\r\n                </div>\r\n                <p class=\"review-content\">{{ review?.reviewContent || '내용 없음' }}</p>\r\n                <div class=\"review-photos\">\r\n                  <img v-for=\"photo in review.photos\" :src=\"photo\" :key=\"photo\" alt=\"리뷰 사진\" class=\"review-photo\" />\r\n                </div>\r\n                <span class=\"difficulty\">난이도: {{ review?.difficulty || '정보 없음' }}</span>\r\n              </div>\r\n            </div>\r\n            <button v-if=\"canShowMore\" @click=\"loadMoreReviews\" class=\"load-more-button\">더 보기</button>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 리뷰 수정 모달 -->\r\n        <div v-if=\"editModal && currentReview\" class=\"overlay\" @click.self=\"editModal = false\">\r\n          <div class=\"review-form\">\r\n            <button class=\"close-button\" @click=\"editModal = false\">X</button>\r\n            <h2>리뷰 수정</h2>\r\n\r\n            <!-- 코스 선택 (수정 모달에서는 비활성화) -->\r\n            <label class=\"modal-label\">코스 선택</label>\r\n            <select v-model=\"currentReview.courseId\" class=\"input-field\" disabled>\r\n              <option :value=\"currentReview.courseId\">{{ courseData2.courseName }} 코스</option>\r\n              <option v-for=\"course in courses\" :key=\"course.courseId\" :value=\"course.courseId\">\r\n                {{ course.courseName }}\r\n              </option>\r\n            </select>\r\n\r\n            <!-- 별점 -->\r\n            <label class=\"modal-label\">별점</label>\r\n            <div class=\"stars\">\r\n              <i v-for=\"star in 5\" :key=\"star\"\r\n                :class=\"star <= currentReview.rating ? 'bi bi-star-fill n-star' : 'bi bi-star n-star'\"\r\n                @click=\"currentReview.rating = star\"></i>\r\n            </div>\r\n\r\n            <!-- 난이도 선택 -->\r\n            <label class=\"modal-label\">난이도</label>\r\n            <select v-model=\"currentReview.difficulty\" class=\"input-field\">\r\n              <option value=\"쉬움\">쉬움</option>\r\n              <option value=\"보통\">보통</option>\r\n              <option value=\"어려움\">어려움</option>\r\n            </select>\r\n\r\n            <!-- 리뷰 내용 -->\r\n            <label class=\"modal-label\">리뷰 내용</label>\r\n            <textarea v-model=\"currentReview.reviewContent\" placeholder=\"후기 내용을 입력하세요\"\r\n              class=\"input-field textarea\"></textarea>\r\n\r\n            <!-- 저장 버튼 -->\r\n            <button @click=\"saveReview\" class=\"submit-button\">저장</button>\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n        <!-- 삭제 확인 모달 -->\r\n        <div v-if=\"deleteModal\" class=\"overlay\" @click.self=\"deleteModal = false\">\r\n          <div class=\"review-form\">\r\n            <button class=\"close-button\" @click=\"deleteModal = false\">X</button>\r\n            <h2>리뷰 삭제</h2>\r\n            <p>정말 삭제하시겠습니까?</p>\r\n            <div class=\"modal-actions\">\r\n              <button @click=\"deleteReview\" class=\"submit-button confirm-button\">예</button>\r\n              <button @click=\"deleteModal = false\" class=\"submit-button cancel-button\">아니오</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </aside>\r\n\r\n    <main class=\"main\">\r\n      <!-- 세로 버튼 그룹 : 시작 -->\r\n      <!-- 실족, 조난, 질환 버튼 -->\r\n      <div class=\"toggle-switch-container2\" style=\"z-index: 10;\"> <!-- 기존 z-index를 낮춰 설정 -->\r\n        <div class=\"toggle-switch2\" @click=\"toggleMap('default')\" :class=\"{ active: showMap === 'default' }\">\r\n          <img src=\"/images/기본.png\" alt=\"\" style=\"width: 20px; height: auto; margin-right: 5px;\"> 기본\r\n        </div>\r\n        <div class=\"toggle-switch2\" @click=\"toggleMap('photo')\" :class=\"{ active: showMap === 'photo' }\">\r\n          <img src=\"/images/사진.png\" alt=\"\" style=\"width: 20px; height: auto; margin-right: 5px;\"> 사진\r\n        </div>\r\n        <div class=\"toggle-switch2\" @click=\"applyFilter('실족')\" :class=\"{ active: selectedFilter === '실족' }\">\r\n          <img src=\"/images/strumble.png\" alt=\"\" style=\"width: 20px; height: auto; margin-right: 5px;\"> 실족\r\n        </div>\r\n        <div class=\"toggle-switch2\" @click=\"applyFilter('조난')\" :class=\"{ active: selectedFilter === '조난' }\">\r\n          <img src=\"/images/distress.png\" alt=\"\" style=\"width: 20px; height: auto; margin-right: 5px;\"> 조난\r\n        </div>\r\n        <div class=\"toggle-switch2\" @click=\"applyFilter('질환')\" :class=\"{ active: selectedFilter === '질환' }\">\r\n          <img src=\"/images/disease.png\" alt=\"\" style=\"width: 20px; height: auto; margin-right: 5px;\"> 질환\r\n        </div>\r\n      </div>\r\n\r\n  <div v-if=\"showMap === 'default'\" id=\"map\" ref=\"map-container\" class=\"map-container\">\r\n        \r\n        <!-- 메인 페이지 내용 -->\r\n      <button id=\"showHelpButton\" @click=\"showHelp = true\">?</button>\r\n        <div class=\"map-legend ms-4\">\r\n          \r\n          <div class=\"legend-item\">\r\n            <div class=\"legend-icon\" style=\"background-color:#FF4500;\"></div>\r\n            <span>오르막</span>\r\n          </div>\r\n          \r\n          <div class=\"legend-item\">\r\n            <div class=\"legend-icon\" style=\"background-color:#32CD32;\"></div>\r\n            <span>평지</span>\r\n          </div>\r\n          \r\n          <div class=\"legend-item\">\r\n            <div class=\"legend-icon\" style=\"background-color:#1E90FF;\"></div>\r\n            <span>내리막</span>\r\n          </div>\r\n          \r\n        </div>\r\n      </div>\r\n      <div v-else-if=\"showMap === 'photo'\" id=\"photoMap\" class=\"map-container\"></div>\r\n\r\n      <div id=\"grapth\">\r\n        <div class=\"chart1-section\">\r\n          <canvas id=\"elevationChart\" style=\"height: 180px; width: 1000px;\"></canvas>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  </div>\r\n\r\n <!-- 코스 미리보기 모달 -->\r\n <div class=\"modal fade\" id=\"kt_modal_course_preview\" tabindex=\"-1\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog modal-dialog-centered mw-1200px\">\r\n    <div class=\"modal-content rounded\">\r\n\r\n      <div class=\"modal-header compact-header\">\r\n        <h1 class=\"modal-title\">코스 미리보기</h1>\r\n        <button class=\"btn btn-sm btn-icon btn-active-color-primary\" data-bs-dismiss=\"modal\">\r\n          <i class=\"bi bi-x-circle\"></i>\r\n        </button>\r\n      </div>\r\n\r\n      <div class=\"modal-body scroll-y px-10 px-lg-15 pt-0 pb-15\">\r\n        <div class=\"mb-13 text-center\">\r\n          <div class=\"text-muted fw-semibold fs-5\">동영상과 경로를 동시에 미리 확인 할 수 있습니다.</div>\r\n        </div>\r\n\r\n        <!-- 지도와 비디오 미리보기 영역 -->\r\n        <div class=\"video-container\">\r\n          <!-- 지도 -->\r\n          <div id=\"modalMap\"></div>\r\n\r\n          <!-- 비디오 -->\r\n          <video\r\n            ref=\"videoRef\"\r\n            controls\r\n            autoplay\r\n            muted\r\n            @timeupdate=\"syncCourseWithVideo\"\r\n          >\r\n            <source src=\"/videos/HJcourse.mp4\" type=\"video/mp4\" />\r\n            브라우저가 비디오 태그를 지원하지 않습니다.\r\n          </video>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n</template>\r\n\r\n<script setup>\r\nimport HeaderView from '@/components/HeaderView.vue';\r\nimport { onMounted, ref, computed } from 'vue';\r\nimport Chart from 'chart.js/auto';\r\nimport axios from \"axios\";\r\nimport { defineProps } from 'vue';\r\nimport { useRouter, useRoute } from 'vue-router';\r\nimport { nextTick } from 'vue';\r\nimport { Modal } from 'bootstrap';\r\n\r\nconst props = defineProps({\r\n  course: {\r\n    type: String,\r\n    required: true\r\n  }\r\n\r\n});\r\n\r\n// props로 전달된 mountain 데이터를 JSON으로 파싱\r\nconst courseData = ref(JSON.parse(props.course));\r\n\r\n// mountainData가 제대로 파싱되었는지 확인\r\nconsole.log(\"Mountain Data:\", courseData.value);\r\n\r\n\r\n/* global kakao */\r\nconst map = ref(null);\r\nconst routeCoordinates = ref([]);\r\nlet chartInstance = null;\r\nconst currentMarker = ref(null);\r\nconst modalPolyline = ref(null);  // 모달 지도 경로\r\nconst showMap = ref('default');  // 기본 지도를 기본값으로 설정\r\n  let photoMap = ref(null);\r\nconst distressCount = ref(0);\r\nconst strumbleCount = ref(0);\r\nconst diseaseCount = ref(0);\r\n\r\nconst videoRef = ref(null);\r\nconst modalMap = ref(null);\r\n\r\nonMounted(() => {\r\n  const queryMapType = route.query.mapType || 'default'; // 기본값은 'default'\r\n    showMap.value = queryMapType\r\n\r\n  initializeMap();\r\n  // mountainData로부터 lat, lon을 사용해 날씨 정보를 가져옴\r\n  \r\n  fetchReviewsAndRatings();\r\n  fetchSummary();\r\n\r\n  fetchWeatherData(37.590870, 126.958077);\r\n  requestCourse()\r\n\r\n});\r\n\r\nfunction showCoursePreviewModal() {\r\n  console.log('showCoursePreviewModal 호출됨');\r\n  const elem = document.querySelector('#kt_modal_course_preview');\r\n  const coursePreviewModal = new Modal(elem); // Bootstrap Modal 객체 생성\r\n  coursePreviewModal.show(); // 모달 표시\r\n\r\n  coursePreviewModal._element.addEventListener('shown.bs.modal', () => {\r\n    initializeModalMap(); // 모달 지도 초기화\r\n    kakao.maps.event.trigger(modalMap.value, 'resize'); // 지도 크기 재조정\r\n    modalMap.value.setCenter(new kakao.maps.LatLng(37.66433293993584, 127.01160029114365));\r\n    console.log('모달 지도 리사이즈 완료');\r\n  });\r\n}\r\n\r\n// 모달 지도 초기화\r\nfunction initializeModalMap() {\r\n  const modalMapElement = document.getElementById('modalMap');\r\n  if (!modalMapElement) {\r\n    console.error('modalMap 요소를 찾을 수 없습니다.');\r\n    return;\r\n  }\r\n\r\n  modalMap.value = new kakao.maps.Map(modalMapElement, {\r\n    center: new kakao.maps.LatLng(37.66433293993584, 127.01160029114365),\r\n    level: 5,\r\n  });\r\n\r\n  loadGeoJSONFromServer('/data/인왕산ele copy.geojson', modalMap.value);\r\n\r\n  if (routeCoordinates.value.length > 0) {\r\n    const groupedCoordinates = groupCoordinates(routeCoordinates.value, 5);\r\n    addRouteLayer(groupedCoordinates, modalMap.value); // 모달 지도에 경로 추가\r\n  }\r\n}\r\n\r\nconst selectedFilter = ref('전체');\r\n\r\nlet mapMarkers = []\r\n\r\n // 버튼 클릭\r\n function applyFilter(filter) {\r\n    selectedFilter.value = filter;\r\n    \r\n    // 기존 마커 지우기\r\n    if (mapMarkers.length) {\r\n      mapMarkers.forEach(marker => marker.setMap(null));\r\n      mapMarkers = [];\r\n    }\r\n    \r\n    // 전체버튼 클릭시 마커 띄우기\r\n    if (selectedFilter.value === '전체') {\r\n      loadMarkers(\"/data/헬기장spot.geojson\", '/images/helipad.png');\r\n      loadMarkers(\"/data/화장실.geojson\", '/images/toilets.png');\r\n      loadDangerMarkers(\"/data/2023산악사고_인왕산2.geojson\", '/images/danger.png');\r\n    } else {\r\n      // Otherwise, load only markers for the selected filter\r\n      loadDangerMarkers(\"/data/2023산악사고_인왕산2.geojson\", '/images/danger.png');\r\n    }\r\n  }\r\n\r\n  // JSON 데이터를 사용하여 마커 추가\r\n  async function loadMarkers(url, imageSrc) {\r\n  try {\r\n    // GeoJSON 데이터 로드\r\n    const response = await fetch(url);\r\n    if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\r\n    const markerData = await response.json();\r\n\r\n    // 필터링된 마커 데이터 가져오기\r\n    const filteredMarkers = markerData.features.filter((feature) => {\r\n      const courseName = feature.properties.MNTN_NM2;\r\n      return (\r\n        courseName === courseData.value.courseName);\r\n    });\r\n\r\n    // 필터링된 마커를 지도에 추가\r\n    filteredMarkers.forEach((spot) => {\r\n      const lat = spot.geometry.coordinates[1];\r\n      const lng = spot.geometry.coordinates[0];\r\n      const markerPosition = new kakao.maps.LatLng(lat, lng);\r\n\r\n      // 마커 생성\r\n      const imageSize = new kakao.maps.Size(35, 45);\r\n      const imageOption = { offset: new kakao.maps.Point(12, 35) };\r\n      const markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize, imageOption);\r\n\r\n      const marker = new kakao.maps.Marker({\r\n        position: markerPosition,\r\n        map: map.value,\r\n        title: spot.properties.MNTN_NM,\r\n        image: markerImage,\r\n      });\r\n\r\n      mapMarkers.push(marker); // 새 마커 배열에 추가\r\n\r\n      // 인포윈도우 설정\r\n      const infowindow = new kakao.maps.InfoWindow({\r\n        content: `\r\n          <div style=\"display: flex; flex-direction: column; align-items: center; width: 150px; height: auto; \r\n          box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); font-family: Arial, sans-serif; overflow: hidden; \r\n          border: 1px solid #ddd; border-radius: 12px; z-index: 500;\">\r\n            <!-- 사진 영역 -->\r\n            <div style=\"display: flex; justify-content: center; align-items: center; width: 100%; height: 150px; \r\n            overflow: hidden; border-bottom: 2px solid #ced4da;\">\r\n              <img src=\"/images/${spot.properties.image}\" alt=\"사진\" \r\n              style=\"width: 130px; height: 120px; object-fit: cover; border: 1px solid black; border-radius: 10px;\" />\r\n            </div>\r\n            <!-- 텍스트 영역 -->\r\n            <div style=\"text-align: center; padding: 10px;\">\r\n              <p style=\"font-size: 14px; font-weight: bold; margin: 0; color: #333;\">\r\n                <img src=\"/images/window산.png\" style=\"width: 16px; height: 16px;\" /> ${spot.properties.MNTN_NM}\r\n              </p>\r\n              <p style=\"font-size: 12px; color: #666; margin: 5px 0;\">- ${spot.properties.SAFE_SPOT2} -</p>\r\n            </div>\r\n          </div>\r\n        `,\r\n        disableAutoPan: true, // 인포윈도우 표시로 인해 지도가 이동하지 않도록 설정\r\n      });\r\n\r\n      // 마커 클릭 이벤트\r\n      kakao.maps.event.addListener(marker, 'click', () => {\r\n        if (infowindow.getMap()) {\r\n          infowindow.close();\r\n        } else {\r\n          infowindow.open(map.value, marker);\r\n        }\r\n      });\r\n    });\r\n  } catch (error) {\r\n    console.error(`${url} 파일 로드 중 에러 발생:`, error);\r\n  }\r\n}\r\n\r\nconst distresses = ref([]);\r\nconst strumbles = ref([]);\r\nconst diseases = ref([]);\r\n\r\n\r\nfunction openInfoWindowForImage(index, type = '실족') {\r\n  // 이미지와 타입에 해당하는 마커 찾기\r\n  const target = markers.value.find(\r\n    (item) => item.type === type && item.image === (type === '실족' ? strumbles.value[index] :\r\n                                                   type === '조난' ? distresses.value[index] :\r\n                                                   diseases.value[index])\r\n  );\r\n\r\n  if (target) {\r\n    // 이전에 열린 인포윈도우가 있다면 닫기\r\n    if (currentMarker.value && currentMarker.value.infowindow) {\r\n      currentMarker.value.infowindow.close();\r\n    }\r\n\r\n    // 해당 마커의 인포윈도우 열기\r\n    target.infowindow.open(map.value, target.marker);\r\n\r\n    // 현재 열려 있는 마커 저장\r\n    currentMarker.value = target;\r\n  } else {\r\n    console.error('해당 이미지를 찾을 수 없습니다.');\r\n  }\r\n}\r\n\r\n\r\nconst markers = ref([]); // 모든 마커와 관련 데이터를 저장\r\n\r\nasync function loadDangerMarkers(url, imageSrc) {\r\n  try {\r\n    if(selectedFilter.value == '전체'){\r\n      strumbles.value = [];\r\n      distresses.value = [];\r\n      diseases.value = [];\r\n      strumbleCount.value = 0;\r\n      distressCount.value = 0;\r\n      diseaseCount.value = 0;\r\n    } else if(selectedFilter.value == '실족'){\r\n      strumbles.value = [];\r\n      strumbleCount.value = 0;\r\n    } else if(selectedFilter.value == '조난'){\r\n      distresses.value = [];\r\n      distressCount.value = 0;\r\n    } else if(selectedFilter.value == '질환'){\r\n      diseases.value = [];\r\n      diseaseCount.value = 0;\r\n    }    \r\n\r\n\r\n    const response = await fetch(url);\r\n    if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\r\n    const markerData = await response.json();\r\n\r\n    const filteredMarkers = markerData.features.filter((feature) => {\r\n      const markerType = feature.properties.type;\r\n      const courseName = feature.properties.MNTN_NM2;\r\n      return courseName === courseData.value.courseName &&\r\n             (selectedFilter.value === '전체' || markerType === selectedFilter.value || !markerType);\r\n    });\r\n\r\n    filteredMarkers.forEach((spot) => {\r\n      const lat = spot.geometry.coordinates[1];\r\n      const lng = spot.geometry.coordinates[0];\r\n      const markerPosition = new kakao.maps.LatLng(lat, lng);\r\n\r\n      if (spot.properties.type === '실족') {\r\n        strumbleCount.value += 1;\r\n        strumbles.value.push(spot.properties.image);\r\n      } else if (spot.properties.type === '조난') {\r\n        distressCount.value += 1;\r\n        distresses.value.push(spot.properties.image);\r\n      } else if (spot.properties.type === '질환') {\r\n        diseaseCount.value += 1;\r\n        diseases.value.push(spot.properties.image);\r\n      }\r\n\r\n      // 마커 이미지 설정\r\n      switch (spot.properties.type) {\r\n          case '실족':\r\n            imageSrc = '/images/strumble.png';\r\n            break;\r\n          case '조난':\r\n            imageSrc = '/images/distress.png';\r\n            break;\r\n          case '질환':\r\n            imageSrc = '/images/disease.png';\r\n            break;\r\n        }\r\n\r\n      const imageSize = new kakao.maps.Size(35, 45);\r\n      const imageOption = { offset: new kakao.maps.Point(12, 35) };\r\n      const markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize, imageOption);\r\n\r\n      const marker = new kakao.maps.Marker({\r\n        position: markerPosition,\r\n        map: map.value,\r\n        title: spot.properties.MNTN_NM,\r\n        image: markerImage,\r\n      });\r\n\r\n      // 인포윈도우 설정\r\n      const infowindow = new kakao.maps.InfoWindow({\r\n          content: `\r\n    <div style=\"display: flex; flex-direction: column; align-items: center; width: 150px; height: auto; box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); font-family: Arial, sans-serif; overflow: hidden; border: 1px solid #ddd; border-radius: 12px; z-index: 500;\">\r\n      <!-- 사진 영역 -->\r\n      <div style=\"display: flex; justify-content: center; align-items: center; width: 100%; height: 150px; overflow: hidden; border-bottom: 2px solid #ced4da;\">\r\n        <img src=\"/images/${spot.properties.image}\" alt=\"사진\" \r\n          style=\"\r\n            width: 130px; \r\n            height: 120px; \r\n            object-fit: cover; \r\n            border: 1px solid black; \r\n            border-radius: 10px;\r\n            box-sizing: border-box; /* 여백과 크기 조정 방지 */\r\n            position: relative;\r\n          \">\r\n      </div>\r\n      <!-- 텍스트 영역 -->\r\n      <div style=\"text-align: center; padding: 10px; margin-top: -10px;\">\r\n        <p style=\"font-size: 14px; font-weight: bold; margin: 0; color: #333;\">\r\n          <img src=\"/images/window산.png\" style=\"width: 16px; height: 16px;\"/> ${spot.properties.MNTN_NM}\r\n        </p>\r\n        <p style=\"font-size: 12px; color: #666; margin: 5px 0 0;\">- ${spot.properties.SAFE_SPOT2} -</p>\r\n      </div>\r\n    </div>\r\n  `,\r\n          disableAutoPan: true, // 인포윈도우 표시로 인해 지도가 이동하지 않도록 설정\r\n});\r\n\r\n      // 마커와 인포윈도우, 추가 데이터를 markers 배열에 저장\r\n      markers.value.push({\r\n        type: spot.properties.type,\r\n        image: spot.properties.image,\r\n        marker,\r\n        infowindow,\r\n      });\r\n\r\n      // 마커 클릭 시 인포윈도우 열기\r\n      kakao.maps.event.addListener(marker, 'click', () => {\r\n        infowindow.open(map.value, marker);\r\n      });\r\n      mapMarkers.push(marker); // 마커를 배열에 저장\r\n    });\r\n  } catch (error) {\r\n    console.error(`${url} 파일 로드 중 에러 발생:`, error);\r\n  }\r\n}\r\n\r\n\r\n// 비디오 재생 시간에 따른 경로 동기화\r\nfunction syncCourseWithVideo(event) {\r\n  if (!modalMap.value || !routeCoordinates.value.length) return;\r\n\r\n  const progress = event.target.currentTime / event.target.duration;\r\n  const index = Math.floor(progress * routeCoordinates.value.length);\r\n\r\n  if (index >= 0 && index < routeCoordinates.value.length) {\r\n    const point = routeCoordinates.value[index];\r\n\r\n    if (currentMarker.value) currentMarker.value.setMap(null);\r\n\r\n    currentMarker.value = new kakao.maps.Marker({\r\n      position: new kakao.maps.LatLng(point.lat, point.lng),\r\n      map: modalMap.value,\r\n    });\r\n\r\n    modalMap.value.panTo(new kakao.maps.LatLng(point.lat, point.lng));\r\n  }\r\n}\r\n\r\n// 지도 초기화\r\nfunction initializeMap() {\r\n    if (showMap.value === 'default') {\r\n        const script = document.createElement('script');\r\n        script.onload = () => kakao.maps.load(() => {\r\n          map.value = new kakao.maps.Map(document.getElementById('map'), {\r\n            center: new kakao.maps.LatLng(37.66433293993584, 127.01160029114365),\r\n            level: 5,\r\n          });\r\n          if (map.value) {\r\n            loadGeoJSONFromServer('/data/인왕산ele copy.geojson');\r\n            loadMarkers(\"/data/헬기장spot.geojson\", '/images/helipad.png');\r\n            loadMarkers(\"/data/화장실.geojson\", '/images/toilets.png');\r\n            loadDangerMarkers(\"/data/2023산악사고_인왕산2.geojson\", '/images/danger.png');\r\n          }\r\n        });\r\n        script.src = 'https://dapi.kakao.com/v2/maps/sdk.js?appkey=333bda7da18df138fb4d9b3e5cf351c4&autoload=false';\r\n        document.head.appendChild(script);\r\n    } else if (showMap.value === 'photo') { // 여기에\r\n        const script = document.createElement('script');\r\n        script.onload = () => kakao.maps.load(() => {\r\n          photoMap.value = new kakao.maps.Map(document.getElementById('photoMap'), {\r\n          center: new kakao.maps.LatLng(37.66433293993584, 127.01160029114365),\r\n          level: 5,\r\n          });\r\n          if (photoMap.value) {\r\n            loadGeoJSONFromServer('/data/인왕산ele copy.geojson', photoMap.value);\r\n            loadMarkersToPhotoMap();\r\n          }\r\n        });\r\n        script.src = 'https://dapi.kakao.com/v2/maps/sdk.js?appkey=333bda7da18df138fb4d9b3e5cf351c4&autoload=false';\r\n        document.head.appendChild(script);\r\n      }\r\n  }\r\n\r\n   // 지도 토글 함수\r\n   const toggleMap = (type) => {\r\n    showMap.value = type;\r\n    initializeMap();\r\n  };\r\n\r\n// GeoJSON 데이터 로드 함수\r\nasync function loadGeoJSONFromServer(url, targetMap = map.value) {\r\n    try {\r\n      const response = await fetch(url);\r\n      if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\r\n      \r\n      const geojsonData = await response.json();\r\n      console.log('GeoJSON data loaded:', geojsonData);  // GeoJSON 데이터를 콘솔에 출력해 확인\r\n      processGeoJSON(geojsonData, targetMap);  // GeoJSON 데이터를 처리하여 경로를 그리는 함수 호출\r\n    } catch (error) {\r\n      console.error('GeoJSON 파일 로드 중 에러 발생:', error);\r\n    }\r\n  }\r\n\r\n  // 커뮤니티 코스 불러오기\r\n  let comCourse = ref([]);\r\n\r\nconst requestCourse = async () => {\r\n  try{\r\n    console.log(courseData.value.courseName)\r\n    const response = await axios.post('/api/comCourse',{\r\n      courseName: courseData.value.courseName\r\n    });\r\n    comCourse.value = response.data;\r\n    console.log(comCourse.value)\r\n  }catch(error){\r\n    console.log('에러발생! '+error)\r\n  }\r\n}\r\n\r\n\r\n  // 마커를 photoMap에 추가하는 함수\r\n  function loadMarkersToPhotoMap() {\r\n    if (!photoMap.value) {\r\n      console.error(\"photoMap이 초기화되지 않았습니다.\");\r\n      return;\r\n    }\r\n  \r\n    // comCourse 데이터에서 좌표 정보를 가져와 마커를 생성\r\n    comCourse.value.forEach(course => {\r\n      const lat = course.latitude;\r\n      const lng = course.longitude;\r\n  \r\n      // 마커의 위치 설정\r\n      const markerPosition = new kakao.maps.LatLng(lat, lng);\r\n  \r\n      const imageSrc = '/images/danger-icon.png';\r\n      const imageSize = new kakao.maps.Size(35, 45);\r\n      const imageOption = { offset: new kakao.maps.Point(12, 35) };\r\n      const markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize, imageOption);\r\n\r\n      const marker = new kakao.maps.Marker({\r\n        position: markerPosition,\r\n        map: photoMap.value,\r\n        title:  course.courseName, // 마커에 코스 이름 표시\r\n        image: markerImage,\r\n      });\r\n  \r\n      const infowindowPhotoMap = new kakao.maps.InfoWindow({\r\n          content: `\r\n    <div style=\"display: flex; flex-direction: column; align-items: center; width: 150px; height: auto; box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); font-family: Arial, sans-serif; overflow: hidden; border: 1px solid #ddd; border-radius: 12px; z-index: 500;\">\r\n      <!-- 사진 영역 -->\r\n      <div style=\"display: flex; justify-content: center; align-items: center; width: 100%; height: 150px; overflow: hidden; border-bottom: 2px solid #ced4da;\">\r\n        <img src=\"${course.communityUrl}\" alt=\"사진\" \r\n          style=\"\r\n            width: 130px; \r\n            height: 120px; \r\n            object-fit: cover; \r\n            border: 1px solid black; \r\n            border-radius: 10px;\r\n            box-sizing: border-box; /* 여백과 크기 조정 방지 */\r\n            position: relative;\r\n          \">\r\n      </div>\r\n      <!-- 텍스트 영역 -->\r\n      <div style=\"text-align: center; padding: 10px; margin-top: -10px;\">\r\n        <p style=\"font-size: 14px; font-weight: bold; margin: 0; color: #333;\">\r\n          <img src=\"/images/window산.png\" style=\"width: 16px; height: 16px;\"/> ${course.communityTitle}\r\n        </p>\r\n        <p style=\"font-size: 12px; color: #666; margin: 5px 0 0;\">- ${course.courseName} -</p>\r\n      </div>\r\n    </div>\r\n  `,\r\n          disableAutoPan: true, // 인포윈도우 표시로 인해 지도가 이동하지 않도록 설정\r\n        });\r\n  \r\n      // 마커 클릭으로 infowindow 토글 방식\r\n      kakao.maps.event.addListener(marker, 'click', () => {\r\n      if (infowindowPhotoMap.getMap()) {\r\n        // infowindow가 현재 열려 있는 경우 닫기\r\n        infowindowPhotoMap.close();\r\n      } else {\r\n        // infowindow가 닫혀 있는 경우 열기\r\n        infowindowPhotoMap.open(photoMap.value, marker);\r\n      }\r\n    });\r\n    });\r\n  }\r\n\r\n\r\n\r\n  function processGeoJSON(geojsonData, targetMap) {\r\n    let allCoordinates = [];\r\n  \r\n    geojsonData.features.forEach((feature) => {\r\n      if (feature.properties.PMNTN_NM && feature.properties.PMNTN_NM.includes(courseData.value.courseName)) {\r\n        let coordinates = [];\r\n  \r\n        // MultiLineString을 처리하기 위해 중첩 배열을 펼침\r\n        if (feature.geometry.type === 'MultiLineString') {\r\n          feature.geometry.coordinates.forEach(line => {\r\n            coordinates = coordinates.concat(line.map((coord) => ({\r\n              lng: coord[0],\r\n              lat: coord[1],\r\n              elevation: feature.properties.DN || 0\r\n            })));\r\n          });\r\n        } else if (feature.geometry.type === 'LineString') {\r\n          coordinates = feature.geometry.coordinates.map((coord) => ({\r\n            lng: coord[0],\r\n            lat: coord[1],\r\n            elevation: feature.properties.DN || 0\r\n          }));\r\n        }\r\n  \r\n        routeCoordinates.value = allCoordinates;  // 경로 좌표를 할당\r\n        allCoordinates = allCoordinates.concat(coordinates);\r\n      }\r\n    });\r\n  \r\n    if (allCoordinates.length > 0) {\r\n      const groupedCoordinates = groupCoordinates(allCoordinates, 5); // 5개씩 그룹화\r\n      addRouteLayer(groupedCoordinates, targetMap);\r\n      drawElevationChart(allCoordinates);\r\n    } else {\r\n      console.log('유효한 구간 데이터가 없습니다.');\r\n    }\r\n  }\r\n  \r\n  // 좌표 그룹화 함수\r\n  function groupCoordinates(coordinates, groupSize) {\r\n    const groups = [];\r\n    for (let i = 0; i < coordinates.length; i += groupSize) {\r\n      groups.push(coordinates.slice(i, i + groupSize));\r\n    }\r\n    return groups;\r\n  }\r\n\r\n// 경로 레이어 추가 함수\r\nfunction addRouteLayer(groupedCoordinates, targetMap) {\r\n    if (!targetMap) {\r\n      console.error(\"targetMap이 초기화되지 않았습니다.\");\r\n      return;\r\n    }\r\n  \r\n    // 중첩 배열을 평평하게 만든 flatCoordinates 생성\r\n    const flatCoordinates = groupedCoordinates.flat();\r\n  \r\n    // 지도에 그릴 경로 생성\r\n    const linePath = flatCoordinates.map((coord) => new kakao.maps.LatLng(coord.lat, coord.lng));\r\n  \r\n    // map.value에 경로를 그리는 경우\r\n    if (targetMap === map.value) {\r\n      drawBaseRoute(flatCoordinates); // 기본 경로 그리기\r\n  \r\n      groupedCoordinates.forEach((group) => {\r\n        if (group.length > 1) {\r\n          const startPoint = group[0];\r\n          const endPoint = group[group.length - 1];\r\n          const slope = calculateSlope(startPoint, endPoint);\r\n          const color = getColorBySlope(slope);\r\n  \r\n          // 각 그룹에 대한 경로 생성\r\n          const groupLinePath = group.map(coord => new kakao.maps.LatLng(coord.lat, coord.lng));\r\n  \r\n          const polyline = new kakao.maps.Polyline({\r\n            path: groupLinePath,\r\n            strokeWeight: 5,\r\n            strokeColor: color,\r\n            strokeOpacity: 0.8,\r\n            strokeStyle: 'solid'\r\n          });\r\n  \r\n          polyline.setMap(map.value); // 경로를 map에 그리기\r\n        }\r\n      });\r\n  \r\n    // modalMap.value에 경로를 그리는 경우\r\n    } else if (targetMap === photoMap.value) {\r\n      console.log('groupedCoordinates:', groupedCoordinates);\r\n  \r\n      modalPolyline.value = new kakao.maps.Polyline({\r\n        path: linePath, // 평평하게 만든 경로 사용\r\n        strokeWeight: 5,\r\n        strokeColor: '#00FF00',\r\n        strokeOpacity: 0.8,\r\n        strokeStyle: 'solid',\r\n      });\r\n  \r\n      modalPolyline.value.setMap(photoMap.value); // 모달 지도에 경로 설정\r\n    } else if (targetMap === modalMap.value) {\r\n      console.log('groupedCoordinates:', groupedCoordinates);\r\n  \r\n      modalPolyline.value = new kakao.maps.Polyline({\r\n        path: linePath, // 평평하게 만든 경로 사용\r\n        strokeWeight: 5,\r\n        strokeColor: '#00FF00',\r\n        strokeOpacity: 0.8,\r\n        strokeStyle: 'solid',\r\n      });\r\n  \r\n      modalPolyline.value.setMap(modalMap.value); // 모달 지도에 경로 설정\r\n    }\r\n  \r\n    // 지도 경계를 경로에 맞게 설정\r\n    const bounds = new kakao.maps.LatLngBounds();\r\n    flatCoordinates.forEach(coord => bounds.extend(new kakao.maps.LatLng(coord.lat, coord.lng)));\r\n    targetMap.setBounds(bounds); // 타겟 맵에 맞게 경계 조정\r\n  }\r\n\r\n  // 새로운 함수: 기본 녹색 경로를 그리는 함수\r\n  function drawBaseRoute(coordinates) {\r\n    const linePath = coordinates.map(coord => new kakao.maps.LatLng(coord.lat, coord.lng));\r\n  \r\n    const basePolyline = new kakao.maps.Polyline({\r\n      path: linePath,\r\n      strokeWeight: 5,\r\n      strokeColor: '#32CD32', // 기본 경로 색상 (녹색)\r\n      strokeOpacity: 1, // 기본 경로는 약간 투명하게 설정\r\n      strokeStyle: 'solid'\r\n    });\r\n  \r\n    basePolyline.setMap(map.value);\r\n  }\r\n\r\nfunction calculateDistance(index, coord, coordinates) {\r\n  if (index === 0) return 0; // 첫 번째 좌표의 거리는 0\r\n\r\n  const prevCoord = coordinates[index - 1];\r\n\r\n  const R = 6371; // 지구 반지름 (km)\r\n  const dLat = deg2rad(coord[1] - prevCoord[1]);\r\n  const dLng = deg2rad(coord[0] - prevCoord[0]);\r\n\r\n  const a =\r\n    Math.sin(dLat / 2) * Math.sin(dLat / 2) +\r\n    Math.cos(deg2rad(prevCoord[1])) * Math.cos(deg2rad(coord[1])) *\r\n    Math.sin(dLng / 2) * Math.sin(dLng / 2);\r\n\r\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n  return R * c; // 거리 반환\r\n}\r\n\r\nfunction deg2rad(deg) {\r\n  return deg * (Math.PI / 180);\r\n}\r\n\r\nfunction calculateCumulativeDistances(coordinates) {\r\n    let cumulativeDistances = [];\r\n    let totalDistance = 0;\r\n  \r\n    for (let i = 0; i < coordinates.length; i++) {\r\n      if (i > 0) {\r\n        totalDistance += calculateDistance(i, coordinates[i], coordinates);\r\n      }\r\n      cumulativeDistances.push(totalDistance);\r\n    }\r\n  \r\n    return cumulativeDistances;\r\n  }\r\n\r\n  // 경사도에 따른 색상 결정 함수\r\n  function getColorBySlope(slope) {\r\n    if (slope > 30) return '#FF4500'; // 급경사 (빨강)\r\n    if (slope < -15) return '#1E90FF'; // 급한 내리막 (파랑)\r\n    return '#32CD32'; // 평지에 가까움 (초록)\r\n  }\r\n\r\n  function calculateHaversineDistance(coord1, coord2) {\r\n    const R = 6371e3; // 지구 반지름 (미터 단위)\r\n    const lat1 = deg2rad(coord1.lat);\r\n    const lat2 = deg2rad(coord2.lat);\r\n    const deltaLat = deg2rad(coord2.lat - coord1.lat);\r\n    const deltaLon = deg2rad(coord2.lng - coord1.lng);\r\n  \r\n    const a =\r\n      Math.sin(deltaLat / 2) * Math.sin(deltaLat / 2) +\r\n      Math.cos(lat1) * Math.cos(lat2) *\r\n      Math.sin(deltaLon / 2) * Math.sin(deltaLon / 2);\r\n  \r\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n  \r\n    // 두 지점 간의 거리 반환 (미터 단위)\r\n    return R * c;\r\n  }\r\n\r\n  function calculateSlope(start, end) {\r\n    // 하버사인 공식을 사용하여 두 지점 간의 수평 거리 (지구 곡률 반영)\r\n    const horizontalDistance = calculateHaversineDistance(\r\n      { lat: start.lat, lng: start.lng },\r\n      { lat: end.lat, lng: end.lng }\r\n    );\r\n  \r\n    // 고도 차이 계산\r\n    const elevationChange = end.elevation - start.elevation;\r\n  \r\n    // 피타고라스 정리를 사용해 두 지점 간의 대각선 거리 계산\r\n    const diagonalDistance = Math.sqrt(\r\n      Math.pow(horizontalDistance, 2) + Math.pow(elevationChange, 2)\r\n    );\r\n  \r\n    // 수평 거리가 너무 짧으면 경사도 계산을 무시하고 기본 경사도 0으로 설정\r\n    if (horizontalDistance < 1) { // 예시: 수평 거리가 10m 미만일 경우\r\n      return 0; // 경사도 0으로 간주\r\n    }\r\n  \r\n    // 경사도 = 고도 차이 / 대각선 거리 * 100\r\n    return (elevationChange / diagonalDistance) * 100;\r\n  }\r\n\r\nfunction drawElevationChart(data) {\r\n    const ctx = document.getElementById('elevationChart').getContext('2d');\r\n  \r\n    // 누적 거리 계산 (기존의 총 거리를 계산)\r\n    const distances = calculateCumulativeDistances(data.map(point => [point.lng, point.lat]));\r\n    const totalDistance = distances[distances.length - 1]; // 총 거리\r\n    const scaleFactor = 645 / totalDistance; // 645m에 맞추기 위한 스케일링 비율\r\n  \r\n    // 각 누적 거리를 스케일링\r\n    const scaledDistances = distances.map(distance => distance * scaleFactor);\r\n    const elevations = data.map(point => point.elevation); // y축: 고도\r\n  \r\n  // 배경 이미지를 넣기 위한 커스텀 플러그인 정의\r\n  const backgroundImagePlugin = {\r\n      id: 'backgroundImagePlugin',\r\n      beforeDraw: (chart) => {\r\n        if (chart.config.options.backgroundImage) {\r\n          const ctx = chart.ctx;\r\n          const chartArea = chart.chartArea;\r\n          const backgroundImage = new Image();\r\n          backgroundImage.src = chart.config.options.backgroundImage;\r\n  \r\n          // 이미지가 로드된 후 캔버스에 그리기\r\n          backgroundImage.onload = function () {\r\n            ctx.save();\r\n            ctx.globalAlpha = 0.4; // 불투명도 설정 (0.0: 완전히 투명, 1.0: 완전히 불투명)\r\n            ctx.drawImage(backgroundImage, chartArea.left, chartArea.top, chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\r\n            ctx.restore();\r\n          };\r\n        }\r\n      },\r\n    };\r\n    if(chartInstance){\r\n      return \r\n    }\r\n  \r\n    chartInstance = new Chart(ctx, {\r\n      type: 'line',\r\n      data: {\r\n        labels: scaledDistances, // x축: 스케일링된 누적 거리\r\n        datasets: [\r\n          {\r\n            label: '고도 (m)',\r\n            data: elevations,  // y축: 고도\r\n            borderColor: 'rgba(75, 192, 192, 1)',\r\n            borderWidth: 2,\r\n            fill: false,\r\n          },\r\n        ],\r\n      },\r\n      options: {\r\n        backgroundImage: '/images/mountainbackground.png',\r\n        scales: {\r\n          x: {\r\n            title: {\r\n              display: true,\r\n              text: '거리 (m)', // x축 제목 (미터 단위로 표시)\r\n            },\r\n            grid: {\r\n              display : false,\r\n            },\r\n            ticks: {\r\n              autoSkip: true, // 자동으로 레이블을 생략함\r\n              maxTicksLimit: 10, // 최대 레이블 개수를 10개로 제한\r\n              maxRotation: 0, // 레이블을 비스듬히 하지 않음\r\n              minRotation: 0, // 레이블을 수평으로 유지\r\n              callback: function(value) {\r\n                return value.toFixed(2) + ' m'; // 원하는 형식으로 레이블 포맷\r\n              }\r\n            }\r\n          },\r\n          y: {\r\n            title: {\r\n              display: true,\r\n              text: '고도 (m)', // y축 제목\r\n            },\r\n            grid: {\r\n              display : false,\r\n            }\r\n          },\r\n        },\r\n        interaction: {\r\n          mode: 'index',\r\n          intersect: false,\r\n        },\r\n        plugins: {\r\n          tooltip: {\r\n            enabled:false,\r\n          },\r\n          legend: {\r\n            display: false,\r\n          }\r\n        },\r\n        onClick: (event, elements) => {\r\n          if (elements.length > 0) {\r\n            const index = elements[0].index;\r\n            highlightRouteOnMap(index); // 클릭 시 지도에서 경로 강조\r\n          }\r\n        },\r\n        onHover: (event, elements) => {\r\n          if (elements.length > 0) {\r\n            const index = elements[0].index;\r\n            highlightRouteOnMap(index); // 마우스 오버 시 경로 강조\r\n          }\r\n        },\r\n      },\r\n      plugins: [backgroundImagePlugin],\r\n    });\r\n  }\r\n\r\n// 경로 상의 마커 강조 함수\r\nfunction highlightRouteOnMap(index, targetMap = map.value) {\r\n    if (!targetMap) {\r\n      console.error(\"지도 객체가 초기화되지 않았습니다. targetMap이 null입니다.\");\r\n      return;  // targetMap이 null이면 함수 실행 중지\r\n    }\r\n  \r\n    if (index >= 0 && index < routeCoordinates.value.length) {\r\n      const point = routeCoordinates.value[index];\r\n  \r\n      if (currentMarker.value) {\r\n        currentMarker.value.setMap(null);\r\n      }\r\n  \r\n      const imageSrc = '/images/running.png';\r\n      const imagesSize = new kakao.maps.Size(35,45);\r\n      const imageOption = { offset: new kakao.maps.Point(17,45) };\r\n      const markerImage = new kakao.maps.MarkerImage(imageSrc,imagesSize,imageOption);\r\n  \r\n      currentMarker.value = new kakao.maps.Marker({\r\n        position: new kakao.maps.LatLng(point.lat, point.lng),\r\n        image: markerImage,\r\n      });\r\n  \r\n      currentMarker.value.setMap(targetMap);\r\n      targetMap.panTo(new kakao.maps.LatLng(point.lat, point.lng));  // targetMap이 null이 아닐 때만 panTo 호출\r\n    }\r\n  }\r\n\r\n// 날씨\r\nconst dailyWeather = ref([]);\r\nconst sunriseTimes = ref([]);\r\nconst sunsetTimes = ref([]);\r\nconst selectedDateIndex = ref(0); // 선택된 날짜 인덱스\r\n\r\n// 선택된 날짜의 날씨 데이터\r\nconst selectedDay = computed(() => dailyWeather.value[selectedDateIndex.value]);\r\n\r\n// 날짜 선택 함수\r\nconst selectDate = (index) => {\r\n  selectedDateIndex.value = index;\r\n};\r\n\r\n\r\n// 날씨 정보 조회\r\nconst fetchWeatherData = async (latitude, longitude) => {\r\n  try {\r\n    const apiKey = \"5c48577c775896e979e7bcc3b225b730\";\r\n    const response = await axios.get(\r\n      `https://api.openweathermap.org/data/2.5/forecast?lat=${latitude}&lon=${longitude}&appid=${apiKey}`\r\n    );\r\n\r\n    console.log(response.data); // 응답 확인용 콘솔 로그\r\n\r\n    const groupedByDay = {};\r\n    response.data.list.forEach(item => {\r\n      const date = item.dt_txt.split(\" \")[0];\r\n      if (!groupedByDay[date]) groupedByDay[date] = [];\r\n      groupedByDay[date].push(item);\r\n    });\r\n\r\n    const selectedWeather = [];\r\n    Object.keys(groupedByDay).forEach(date => {\r\n      const { currentTemp, minTemp, maxTemp } = calculateMinMaxTemp(groupedByDay[date]);\r\n      const daySummary = {\r\n        date,\r\n        currentTemp,\r\n        minTemp,\r\n        maxTemp,\r\n        ...groupedByDay[date][0],\r\n      };\r\n      selectedWeather.push(daySummary);\r\n    });\r\n\r\n    dailyWeather.value = selectedWeather;\r\n\r\n    const sunriseSunsetPromises = dailyWeather.value.map(day =>\r\n      axios.get(\r\n        `https://api.sunrise-sunset.org/json?lat=${latitude}&lng=${longitude}&date=${day.date}&formatted=0`\r\n      )\r\n    );\r\n\r\n    const sunriseSunsetResults = await Promise.all(sunriseSunsetPromises);\r\n    sunriseTimes.value = sunriseSunsetResults.map(result => formatTime(result.data.results.sunrise));\r\n    sunsetTimes.value = sunriseSunsetResults.map(result => formatTime(result.data.results.sunset));\r\n\r\n  } catch (error) {\r\n    console.error(\"Error fetching weather data:\", error);\r\n  }\r\n};\r\n\r\n// 요일 변환 함수\r\nconst formatDayOfWeek = (date) => {\r\n  const formattedDate = new Date(date);\r\n  return formattedDate.toLocaleDateString(\"ko-KR\", { weekday: \"short\" });\r\n};\r\n\r\n// 날짜 포맷 변환 함수\r\nconst formatDate = (date) => {\r\n  const formattedDate = new Date(date);\r\n  return `${formattedDate.getDate()}`;\r\n};\r\n\r\n// 날씨 이모티콘 반환 함수\r\nconst getWeatherEmoji = (weatherMain) => {\r\n  const weatherIcons = {\r\n    Clear: \"☀️\",\r\n    Clouds: \"☁️\",\r\n    Rain: \"🌧️\",\r\n    Snow: \"🌨️\",\r\n    Fog: \"🌁\",\r\n    Thunderstorm: \"⛈️\",\r\n    Drizzle: \"🌦️\",\r\n    Mist: \"🌫️\",\r\n    breeze: \"༄\",\r\n    \"Few Clouds\": \"🌥️\",\r\n    \"freezing rain\": \"🌧️➜❄️\",\r\n  };\r\n  return weatherIcons[weatherMain] || \"🌥️\";\r\n};\r\n\r\n// 날씨 ID를 한국어 설명으로 변환하는 함수\r\nconst translateWeatherDescription = (weatherId) => {\r\n  const weatherDescriptions = {\r\n    200: \"가벼운 비를 동반한 천둥구름\",\r\n    201: \"비를 동반한 천둥구름\",\r\n    202: \"폭우를 동반한 천둥구름\",\r\n    210: \"약한 천둥구름\",\r\n    211: \"천둥구름\",\r\n    212: \"강한 천둥구름\",\r\n    221: \"불규칙적 천둥구름\",\r\n    230: \"약한 연무를 동반한 천둥구름\",\r\n    231: \"연무를 동반한 천둥구름\",\r\n    232: \"강한 안개비를 동반한 천둥구름\",\r\n    300: \"가벼운 안개비\",\r\n    301: \"안개비\",\r\n    302: \"강한 안개비\",\r\n    310: \"가벼운 적은비\",\r\n    311: \"적은비\",\r\n    312: \"강한 적은비\",\r\n    313: \"소나기와 안개비\",\r\n    314: \"강한 소나기와 안개비\",\r\n    321: \"소나기\",\r\n    500: \"약한 비\",\r\n    501: \"중간 비\",\r\n    502: \"강한 비\",\r\n    503: \"매우 강한 비\",\r\n    504: \"극심한 비\",\r\n    511: \"우박\",\r\n    520: \"약한 소나기 비\",\r\n    521: \"소나기 비\",\r\n    522: \"강한 소나기 비\",\r\n    531: \"불규칙적 소나기 비\",\r\n    600: \"가벼운 눈\",\r\n    601: \"눈\",\r\n    602: \"강한 눈\",\r\n    611: \"진눈깨비\",\r\n    612: \"소나기 진눈깨비\",\r\n    615: \"약한 비와 눈\",\r\n    616: \"비와 눈\",\r\n    620: \"약한 소나기 눈\",\r\n    621: \"소나기 눈\",\r\n    622: \"강한 소나기 눈\",\r\n    701: \"박무\",\r\n    711: \"연기\",\r\n    721: \"연무\",\r\n    731: \"모래 먼지\",\r\n    741: \"안개\",\r\n    751: \"모래\",\r\n    761: \"먼지\",\r\n    762: \"화산재\",\r\n    771: \"돌풍\",\r\n    781: \"토네이도\",\r\n    800: \"구름 한 점 없는 맑은 하늘\",\r\n    801: \"약간의 구름이 낀 하늘\",\r\n    802: \"드문드문 구름이 낀 하늘\",\r\n    803: \"구름이 거의 없는 하늘\",\r\n    804: \"구름으로 뒤덮인 흐린 하늘\",\r\n    900: \"토네이도\",\r\n    901: \"태풍\",\r\n    902: \"허리케인\",\r\n    903: \"한랭\",\r\n    904: \"고온\",\r\n    905: \"바람부는\",\r\n    906: \"우박\",\r\n    951: \"바람이 거의 없는\",\r\n    952: \"약한 바람\",\r\n    953: \"부드러운 바람\",\r\n    954: \"중간 세기 바람\",\r\n    955: \"신선한 바람\",\r\n    956: \"센 바람\",\r\n    957: \"돌풍에 가까운 센 바람\",\r\n    958: \"돌풍\",\r\n    959: \"심각한 돌풍\",\r\n    960: \"폭풍\",\r\n    961: \"강한 폭풍\",\r\n    962: \"허리케인\"\r\n  };\r\n  return weatherDescriptions[weatherId] || \"알 수 없는 날씨\";\r\n};\r\n\r\nconst calculateMinMaxTemp = (dayData) => {\r\n  const temps = dayData.map(item => item.main.temp);\r\n  const currentTemp = dayData[0].main.temp;\r\n  const minTemp = Math.min(...temps);\r\n  const maxTemp = Math.max(...temps);\r\n  return { currentTemp, minTemp, maxTemp };\r\n};\r\n\r\n// 시간 포맷 변환 함수\r\nconst formatTime = (time) => {\r\n  const date = new Date(time);\r\n  return date.toLocaleTimeString(\"ko-KR\", { hour: \"2-digit\", minute: \"2-digit\", timeZone: \"Asia/Seoul\" });\r\n};\r\n\r\n\r\n//------------------------------------- 여기는 리뷰\r\n\r\nconst router = useRouter();\r\nconst route = useRoute();\r\nconst goBack = () => router.back();\r\n\r\nconst showModal = ref(false); // 리뷰 작성 모달\r\nconst editModal = ref(false); // 리뷰 수정 모달\r\nconst deleteModal = ref(false); // 리뷰 삭제 확인 모달\r\n\r\nconst currentReview = ref({\r\n  courseId: null,\r\n  reviewId: null,\r\n  userId: '',\r\n  rating: 0,\r\n  difficulty: '',\r\n  reviewContent: ''\r\n});\r\nconst selectedReviewId = ref(null); // 삭제할 리뷰 ID\r\nconst loggedInUserId = ref(localStorage.getItem('userId') || '');\r\n\r\n// 전달된 query 데이터 파싱\r\nconst courseData2 = ref({});\r\nconst selectedCourse = ref('');\r\nconst rating = ref(0);\r\nconst difficulty = ref('');\r\nconst reviewContent = ref('');\r\nconst photos = ref([]);\r\nconst courses = ref([]);\r\n\r\n// 리뷰 수정 모달 열기\r\nconst editReview = async (review) => {\r\n  console.log(\"리뷰 수정 모달 열기:\", review);\r\n  currentReview.value = { ...review };\r\n  await nextTick(); // 렌더링 강제 트리거\r\n  editModal.value = true; // 모달 열기\r\n  console.log(\"currentReview 상태:\", currentReview.value);\r\n  console.log(\"editModal 상태:\", editModal.value);\r\n};\r\n\r\n\r\n// 리뷰 삭제 확인 모달 열기\r\nconst confirmDelete = (reviewId) => {\r\n  console.log(\"리뷰 삭제 요청됨, ID:\", reviewId); // 삭제할 리뷰 ID 확인\r\n  if (reviewId && reviewId !== 0) {\r\n    selectedReviewId.value = reviewId;\r\n    console.log(\"선택된 리뷰 ID:\", selectedReviewId.value); // 선택된 ID 확인\r\n    deleteModal.value = true;\r\n  } else {\r\n    console.warn(\"유효하지 않은 리뷰 ID입니다:\", reviewId);\r\n  }\r\n};\r\n\r\n\r\n// 리뷰 수정 저장\r\nconst saveReview = async () => {\r\n  console.log(\"리뷰 저장 실행, currentReview:\", currentReview.value);\r\n  if (!currentReview.value || !currentReview.value.reviewId) {\r\n    console.error(\"유효하지 않은 리뷰 ID\");\r\n    return;\r\n  }\r\n  try {\r\n    // 반응형 객체가 아닌 일반 객체로 변환하여 서버로 전송\r\n    const reviewData = {\r\n      reviewId: currentReview.value.reviewId,\r\n      userId: loggedInUserId.value,  // 필요시 .value 추가\r\n      rating: currentReview.value.rating,\r\n      difficulty: currentReview.value.difficulty,\r\n      reviewContent: currentReview.value.reviewContent,\r\n    };\r\n\r\n    // 서버에 수정 요청 보내기\r\n    await axios.put(`/api/reviews/edit/${currentReview.value.reviewId}`, reviewData);\r\n\r\n    alert('리뷰가 성공적으로 수정되었습니다.');\r\n    editModal.value = false; // 모달 닫기\r\n    fetchReviewsAndRatings(); // 리뷰와 평점 데이터 갱신\r\n  } catch (error) {\r\n    console.error('리뷰 수정 오류:', error);\r\n    alert(\"리뷰 수정에 실패했습니다.\");\r\n  }\r\n};\r\n\r\n\r\n\r\n// 리뷰 삭제\r\nconst deleteReview = async () => {\r\n  try {\r\n    await axios.delete(`/api/reviews/delete/${selectedReviewId.value}`, {\r\n      params: { userId: localStorage.getItem('userId') },\r\n    });\r\n    alert('리뷰가 삭제되었습니다.');\r\n    deleteModal.value = false;\r\n    fetchReviewsAndRatings();\r\n  } catch (error) {\r\n    console.error('리뷰 삭제 오류:', error);\r\n  }\r\n};\r\n\r\ntry {\r\n  courseData.value = route.query.course ? JSON.parse(route.query.course) : {};\r\n} catch (e) {\r\n  console.error(\"Failed to parse course data:\", e);\r\n  courseData.value = {}; // 파싱 오류 시 빈 객체로 초기화\r\n}\r\n\r\nconsole.log(\"Loaded course data:\", courseData.value);\r\n\r\n\r\nconst difficultyMapping = {\r\n  \"쉬움\": 1,\r\n  \"보통\": 2,\r\n  \"어려움\": 3,\r\n};\r\n\r\nconst averageDifficultyText = computed(() => {\r\n  if (reviews.value.length === 0) return \"정보 없음\";\r\n  const totalDifficulty = reviews.value.reduce((sum, review) => {\r\n    return sum + (difficultyMapping[review.difficulty] || 0);\r\n  }, 0);\r\n  const averageDifficulty = totalDifficulty / reviews.value.length;\r\n\r\n  // 평균 난이도\r\n  if (averageDifficulty <= 1.5) {\r\n    return \"쉬움\";\r\n  } else if (averageDifficulty <= 2.5) {\r\n    return \"보통\";\r\n  } else {\r\n    return \"어려움\";\r\n  }\r\n});\r\n\r\n\r\nconst courseId = computed(() => courseData.value.courseId);\r\n\r\nconst averageRating = ref(0);\r\nconst reviewSummary = ref('');\r\nconst reviews = ref([]);\r\nconst ratingDistribution = ref({});\r\nconst reviewCount = ref(0);\r\nconst searchQuery = ref('');\r\nconst reviewsToShow = ref(3);\r\n\r\nconst setRating = (star) => {\r\n  rating.value = star;\r\n};\r\n\r\nconst onFileChange = (event) => {\r\n  photos.value = Array.from(event.target.files);\r\n};\r\n\r\nconst submitReview = async () => {\r\n  if (!validateForm()) {\r\n    return; // 입력값이 부족하면 제출x\r\n  }\r\n\r\n  const review = {\r\n    courseId: selectedCourse.value,\r\n    userId: localStorage.getItem('userId'),\r\n    rating: rating.value,\r\n    difficulty: difficulty.value,\r\n    reviewContent: reviewContent.value,\r\n  };\r\n\r\n  const formData = new FormData();\r\n  formData.append('review', new Blob([JSON.stringify(review)], { type: 'application/json' }));\r\n\r\n  photos.value.forEach((photo, index) => {\r\n    formData.append(`photos[${index}]`, photo);\r\n  });\r\n\r\n  try {\r\n    await axios.post('/api/reviews/create', formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n    alert('리뷰가 성공적으로 작성되었습니다!');\r\n    // 모달 닫기\r\n    showModal.value = false;\r\n\r\n    // 리뷰와 평점 데이터 다시 가져오기\r\n    fetchReviewsAndRatings();\r\n  } catch (error) {\r\n    console.error('리뷰 작성 오류:', error);\r\n  }\r\n};\r\n\r\n\r\nconst validateForm = () => {\r\n  if (!selectedCourse.value) {\r\n    alert('코스를 선택하세요.');\r\n    return false;\r\n  }\r\n  if (rating.value === 0) {\r\n    alert('별점을 선택하세요.');\r\n    return false;\r\n  }\r\n  if (!difficulty.value) {\r\n    alert('난이도를 선택하세요.');\r\n    return false;\r\n  }\r\n  if (!reviewContent.value) {\r\n    alert('리뷰 내용을 입력하세요.');\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\r\n// 리뷰와 평점 데이터 갱신\r\nconst fetchReviewsAndRatings = async () => {\r\n  if (!courseId.value) return;\r\n  try {\r\n    const response = await axios.get(`/api/course/${courseId.value}/reviews`);\r\n    console.log(\"로드된 리뷰 데이터:\", response.data.reviews); // 데이터 확인\r\n    reviews.value = response.data.reviews.map(review => ({\r\n      ...review,\r\n      reviewId: review.reviewId || review.id || null\r\n    }));\r\n\r\n    ratingDistribution.value = response.data.ratingDistribution || {};\r\n    reviewCount.value = response.data.reviewCount || 0;\r\n\r\n    if (response.data.averageRating) {\r\n      averageRating.value = response.data.averageRating.toFixed(1);\r\n    }\r\n  } catch (error) {\r\n    console.error('리뷰 데이터를 가져오는 데 실패했습니다:', error);\r\n  }\r\n};\r\n\r\n\r\n\r\nconst fetchSummary = async () => {\r\n  if (!courseId.value) return;\r\n  try {\r\n    const response = await axios.get(`/api/course/${courseId.value}/summarize`);\r\n    reviewSummary.value = response.data.summary || '요약된 내용 없음';\r\n  } catch (error) {\r\n    console.error('리뷰 요약 데이터를 가져오는 데 실패했습니다:', error);\r\n  }\r\n};\r\n\r\nconst fullStars = computed(() => Math.floor(averageRating.value));\r\nconst halfStar = computed(() => averageRating.value % 1 >= 0.5);\r\nconst emptyStars = computed(() => 5 - fullStars.value - (halfStar.value ? 1 : 0));\r\n\r\nconst filteredReviews = computed(() => {\r\n  return reviews.value.map(review => ({\r\n    ...review,\r\n    rating: review.rating ?? 0, // rating이 없으면 기본값 0 설정\r\n  })).filter(review => {\r\n    const reviewContent = review?.reviewContent || '';\r\n    const userId = review?.userId || '';\r\n    return reviewContent.toLowerCase().includes(searchQuery.value.toLowerCase()) || userId.toLowerCase().includes(searchQuery.value.toLowerCase());\r\n  });\r\n});\r\n\r\n\r\nconst visibleReviews = computed(() => {\r\n  return (reviews.value || [])\r\n    .map(review => ({\r\n      ...review,\r\n      rating: review?.rating ?? 0, // rating이 없을 때 기본값 0 설정\r\n      difficulty: review?.difficulty ?? '정보 없음', // 난이도 기본값 설정\r\n      reviewContent: review?.reviewContent ?? '내용 없음' // 리뷰 내용 기본값 설정\r\n    }))\r\n    .filter(review => {\r\n      const reviewContent = review?.reviewContent || '';\r\n      const userId = review?.userId || '';\r\n      return reviewContent.toLowerCase().includes(searchQuery.value.toLowerCase()) ||\r\n        userId.toLowerCase().includes(searchQuery.value.toLowerCase());\r\n    })\r\n    .slice(0, reviewsToShow.value);\r\n});\r\n\r\nconst loadMoreReviews = () => {\r\n  if (reviewsToShow.value < filteredReviews.value.length) {\r\n    reviewsToShow.value += 3;\r\n  }\r\n};\r\n\r\nconst canShowMore = computed(() => {\r\n  return reviewsToShow.value < filteredReviews.value.length;\r\n});\r\n\r\nfunction goToCourse3DPage() {\r\n    router.push({ name: '3d', query: { course: JSON.stringify(courseData.value) }});\r\n  }\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n*{\r\n  overflow: hidden;\r\n}\r\n\r\n  .btn-group-vertical {\r\n    position: absolute;\r\n    font-size: 0.5rem !important;\r\n    top: 100px;\r\n    right: 0;\r\n    z-index: 2;\r\n    width: 85px;\r\n    margin-right: 2rem;\r\n    margin-top: 3rem;\r\n  }\r\n\r\n.dashboard {\r\n  display: grid;\r\n  background-color: white;\r\n  grid-template-columns: 410px 1fr;\r\n  grid-template-rows: auto 1fr auto;\r\n  height: 100vh;\r\n  gap: 10px;\r\n  overflow: hidden;\r\n}\r\n\r\n.sidebar {\r\n  background-color: white;\r\n  justify-content: center;\r\n  width: 410px;\r\n  max-height: 100vh; /* Limit sidebar height to viewport height */\r\n  overflow: auto; /* Hide overflow content */\r\n  overflow-x: hidden;\r\n}\r\n\r\n.main {\r\n  display: flex;\r\n  flex-direction: column; /* Stack elements vertically */\r\n  gap: 10px; /* Space between map and chart */\r\n}\r\n\r\n.map-container {\r\n  height: 60vh; /* Adjust to fit your layout */\r\n  width: 100%;\r\n  border-radius: 10px;\r\n}\r\n\r\n#grapth {\r\n  padding: 10px;\r\n  background-color: #f1f1f1;\r\n  width: 100%;\r\n}\r\n\r\n.chart1-section {\r\n  text-align: center;\r\n}\r\n\r\n\r\n.weather-forecast {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  max-width: 100%;\r\n  margin-top: 5rem;\r\n  margin-bottom: 3rem;\r\n  }\r\n\r\n.date-selector {\r\n  display: flex;\r\n  justify-content: space-around;\r\n  width: 100%;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.date-button-wrapper {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n\r\n  .day-label {\r\n    font-family: 'TheJamsil4Bold';\r\n    font-size: 12px;\r\n    color: #333;\r\n    margin-bottom: 5px;\r\n  }\r\n\r\n  .date-button {\r\n    width: 30px;\r\n    height: 30px;\r\n    border-radius: 50%; /* 버튼을 원형으로 만듦 */\r\n    background-color: #ffffff; /* 기본 색상 */\r\n    border: none;\r\n    font-size: 14px;\r\n    font-family: 'TheJamsil4Bold';\r\n    transition: background-color 0.3s;\r\n  }\r\n\r\n.forecast-header {\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.forecast-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(6, 1fr); /* 5일 날씨에 맞게 5개의 칸으로 */\r\n  gap: 5px;\r\n  width: 100%; /* 부모 요소의 너비를 꽉 채움 */\r\n}\r\n\r\n.forecast-item {\r\n  text-align: center;\r\n  padding: 5px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 10px;\r\n  background-color: #f7f7f7; /* 배경 색상 추가로 가독성 향상 */\r\n  box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.1); /* 가벼운 그림자 추가 */\r\n}\r\n\r\n.forecast-info {\r\n  margin-top: 10px;\r\n}\r\n\r\n.current-temperature {\r\n    font-family: 'TheJamsil4Bold';\r\n    font-weight: 500;\r\n    font-size: 70px;\r\n    font-weight: bold;\r\n    color: #333; /* 텍스트 색상을 진하게 */\r\n  }\r\n\r\n  .weather-icon {\r\n    font-size: 50px; /* 날씨 이모티콘 크기를 키움 */\r\n    margin-top: 1rem;\r\n  }\r\n\r\n  .description {\r\n    font-family: 'TheJamsil4Bold';\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  color: #333;\r\n  text-align: left;\r\n  width: 180px;\r\n  margin-left: 0.5rem;\r\n  }\r\n\r\n  .temperature-range {\r\n  display: flex;\r\n  margin-left: 0.5rem;\r\n  margin-top: -0.6rem;\r\n  }\r\n\r\n  .min-temp{\r\n    font-family: 'TheJamsil4Bold';\r\n    width: 80px;\r\n    height: 50px;\r\n    font-weight: 300;\r\n    font-size: 14px;\r\n    color:rgb(80, 80, 80);\r\n    margin-right: -1rem;\r\n\r\n  }\r\n\r\n  .max-temp {\r\n    font-family: 'TheJamsil4Bold';\r\n    width: 80px;\r\n    height: 50px;\r\n    font-weight: 300;\r\n    font-size: 14px;\r\n    color:rgb(80, 80, 80);\r\n  }\r\n\r\n  .sun-info{\r\n    font-family: 'TheJamsil3Bold';\r\n  font-weight: 400;\r\n  font-size: 16px;\r\n  color: rgb(130, 130, 130);\r\n  margin-top: 0.5rem;\r\n  text-align: center;\r\n  }\r\n\r\n  .icon-small {\r\n  width: 15px;\r\n  height: 15px;\r\n  margin-right: 5px;\r\n  opacity: 0.7;\r\n}\r\n\r\n  .rain-info {\r\n    display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n  margin-top: 0.4rem;\r\n  }\r\n\r\n  .rain-icon {\r\n  width: 20px;\r\n  height: 20px;\r\n  background-color: rgba(173, 216, 230, 0.5);\r\n  border-radius: 50%;\r\n  position: relative;\r\n  overflow: hidden;\r\n  }\r\n\r\n  .rain-icon::before {\r\n  content: '';\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: var(--rain-level, 0);\r\n  background-color: rgb(78, 130, 182);\r\n  }\r\n\r\n  .rain-chance {\r\n    font-family: 'TheJamsil5Bold';\r\n    font-weight: 400;\r\n    font-size: 14px;\r\n  }\r\n\r\n  #sunrise, #sunset {\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 13px;\r\n  color: rgb(80, 80, 80);\r\n  margin: 0.5rem 0;\r\n}\r\n\r\n    .date-button.active {\r\n    background-color: #415d37; /* 선택된 버튼의 색상 */\r\n    color: #fff; /* 선택된 버튼의 글자 색상 */\r\n  }\r\n/* 댓글 */\r\n\r\n.course-preview-page {\r\n  padding: 20px;\r\n}\r\n\r\n.header {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n}\r\n.back-button {\r\n  background-color: #ffffff;\r\n  color: #a52d2d;\r\n  border: none;\r\n  padding: 8px;\r\n  width: 50px;\r\n  height: 50px;\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n  margin-bottom: 10px;\r\n}\r\n.review-button {\r\n  background-color: #28a745;\r\n  color: white;\r\n  border: none;\r\n  font-weight: bold;\r\n  border-radius: 50%;\r\n  cursor: pointer;\r\n  width: 40px;\r\n  height: 40px;\r\n  transition: background-color 0.3s ease;\r\n  box-shadow: 0 3px 7px rgba(0, 0, 0, 0.5);\r\n  margin-top: 2rem;\r\n  margin-left: 19.9rem;\r\n}\r\n.review-button:hover {\r\n  background-color: #36672f;\r\n}\r\n/* 모달 스타일 */\r\n.overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  display: flex !important;\r\n  visibility: visible !important;\r\n  align-items: center;\r\n  justify-content: center;\r\n  z-index: 10000;\r\n}\r\n\r\n.review-form {\r\n  background: white;\r\n  padding: 30px;\r\n  border-radius: 12px;\r\n  width: 100%;\r\n  max-width: 500px;\r\n  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);\r\n  position: relative;\r\n  text-align: center;\r\n}\r\n\r\n.close-button {\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 10px;\r\n  background: none;\r\n  border: none;\r\n  font-size: 20px;\r\n  cursor: pointer;\r\n  color: #333;\r\n}\r\n\r\n.close-button:hover {\r\n  color: #999;\r\n}\r\n\r\n.modal-label {\r\n  font-size: 1rem;\r\n  font-weight: bold;\r\n  margin-top: 15px;\r\n  display: block;\r\n  text-align: left;\r\n  color: #444;\r\n}\r\n\r\n.input-field {\r\n  width: 100%;\r\n  padding: 10px;\r\n  margin-top: 10px;\r\n  border-radius: 5px;\r\n  border: 1px solid #ddd;\r\n  font-size: 14px;\r\n}\r\n\r\n.textarea {\r\n  height: 100px;\r\n  resize: none;\r\n}\r\n\r\n.file-input {\r\n  width: 100%;\r\n  margin-top: 10px;\r\n  padding: 10px;\r\n  font-size: 14px;\r\n}\r\n\r\n.rating {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-top: 10px;\r\n}\r\n\r\n.stars {\r\n  display: flex;\r\n  gap: 5px;\r\n  color: #ffc107;\r\n}\r\n\r\n.n-star {\r\n  font-size: 1.5rem;\r\n  cursor: pointer;\r\n}\r\n\r\n.submit-button {\r\n  background-color: #28a745;\r\n  color: white;\r\n  border: none;\r\n  padding: 15px;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  border-radius: 25px;\r\n  cursor: pointer;\r\n  width: 100%;\r\n  margin-top: 20px;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.submit-button:hover {\r\n  background-color: #218838;\r\n}\r\n\r\n.load-more-button {\r\n  background-color: #28a745;\r\n  color: white;\r\n  border: none;\r\n  padding: 10px 20px;\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n  border-radius: 25px;\r\n  cursor: pointer;\r\n  display: block;\r\n  margin: 20px auto;\r\n  transition: background-color 0.3s ease;\r\n}\r\n.load-more-button:hover {\r\n  background-color: #218838;\r\n}\r\n.course-info {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n  text-align: center;\r\n}\r\n.course-image {\r\n  width: 100%;\r\n  max-width: 600px;\r\n  height: auto;\r\n  object-fit: cover;\r\n}\r\n.course-details {\r\n  font-family: 'TheJamsil4Bold';\r\n  font-size: 15px;\r\n  font-weight:300;\r\n  color: #555;\r\n  padding-top: 15px;\r\n  line-height: 1.7;\r\n  margin-top: 0.5rem;\r\n  margin: 0 1.5rem;\r\n}\r\n\r\n.accident-summary {\r\n  text-align: center;\r\n  background: #f9f9f9;\r\n  padding: 20px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n#reviewTitle{\r\n  font-family: 'TheJamsil4Bold';\r\n  font-size: 20px;\r\n  font-weight: 700;\r\n}\r\n\r\n.rating-number {\r\n  font-size: 2rem;\r\n  color: #4caf50;\r\n}\r\n\r\n.review-page {\r\n  background: #f9f9f9;\r\n  padding: 15px;\r\n  border-radius: 10px;\r\n  \r\n}\r\n\r\n.review-search input {\r\n  width: 100%;\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n  border: 1px solid #ddd;\r\n}\r\n\r\n.reviews-list {\r\n  margin-top: 20px;\r\n}\r\n\r\n.review-item {\r\nposition: relative;\r\n  margin-bottom: 20px;\r\n  border-bottom: 1px solid #eee;\r\n  padding-bottom: 15px;\r\n}\r\n\r\n.review-header {\r\n  display: flex;\r\n  gap: 10px;\r\n  align-items: center;\r\n}\r\n\r\n.profile-image {\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n}\r\n\r\n.user-info h3 {\r\n  font-size: 1rem;\r\n  margin: 0;\r\n}\r\n\r\n.stars-inline i {\r\n  color: #4caf50;\r\n}\r\n\r\n.review-photos img {\r\n  width: 100%;\r\n  height: auto;\r\n  max-height: 200px;\r\n  margin-top: 10px;\r\n  border-radius: 5px;\r\n  object-fit: cover;\r\n}\r\n\r\n.summary-section {\r\n  background-color: #ffffff;\r\n  padding: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.rating h1 {\r\n  font-size: 3rem;\r\n  color: #4caf50;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.stars {\r\n  display: flex;\r\n  gap: 5px;\r\n  color: #4caf50;\r\n}\r\n\r\n.review-count-text {\r\n  font-size: 1rem;\r\n  color: #666;\r\n  margin-top: 10px;\r\n}\r\n\r\n.rating-breakdown {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 8px;\r\n  width: 100%;\r\n}\r\n\r\n.rating-bar {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n}\r\n\r\n.rating-bar span {\r\n  width: 30px;\r\n  text-align: right;\r\n  font-weight: bold;\r\n}\r\n\r\n.progress-bar {\r\n  flex: 1;\r\n  height: 8px;\r\n  background-color: #ddd;\r\n  border-radius: 4px;\r\n  overflow: hidden;\r\n  position: relative;\r\n}\r\n\r\n.progress {\r\n  height: 100%;\r\n  background-color: #4caf50;\r\n  border-radius: 4px;\r\n}\r\n.image-container {\r\n  position: relative;\r\n  width: 100%;\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n}\r\n\r\n\r\n.image-overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-end;\r\n  align-items: flex-start;\r\n  padding: 10px;\r\n  background: rgba(0, 0, 0, 0.1); /* 어두운 배경 추가 */\r\n\r\n}\r\n\r\n#courseTitle{\r\n  font-family: 'TheJamsil4Bold';\r\n  font-size: 13px;\r\n  font-weight: 400;\r\n  margin-top: 0.4rem;\r\n  margin-left: 0.3rem;\r\n}\r\n\r\n.image-course-name{\r\n    font-family: 'TheJamsil';\r\n    font-weight: 500;\r\n    color: white;\r\n    font-size: 30px;\r\n    margin: 5px 3px -6px;\r\n}\r\n\r\n\r\n.image-course-location{\r\n  color: white;\r\n  font-family: 'TheJamsil4Bold';\r\n  font-size: 13px;\r\n  font-weight: 400;\r\n  margin: 5px 3px -5px;\r\n}\r\n\r\n.difficulty-text{\r\n  color: white;\r\n  font-family: 'TheJamsil4Bold';\r\n  font-size: 13px;\r\n  font-weight: 400;\r\n  margin: 5px 3px 1px;\r\n}\r\n.image-rating-star {\r\n color: #50df4b;\r\n}\r\n.n-star{\r\n    color: #4caf50; \r\n}\r\n.edit-button {\r\n  position: absolute;\r\n  right: 10px; /* 우측 여백 */\r\n  bottom: 10px; /* 하단 여백 */\r\n  background: none;\r\n  border: none;\r\n  color: #4caf50;\r\n  cursor: pointer;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.delete-button {\r\n  position: absolute;\r\n  right: 10px; /* 우측 여백 */\r\n  top: 10px; /* 상단 여백 */\r\n  background: none;\r\n  border: none;\r\n  color: #4caf50;\r\n  cursor: pointer;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.delete-confirm-modal {\r\n  background: white;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  width: 300px;\r\n  text-align: center;\r\n  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.confirm-button {\r\n  background-color: #4caf50;\r\n  color: white;\r\n  border: none;\r\n  padding: 10px 20px;\r\n  margin-right: 10px;\r\n  cursor: pointer;\r\n}\r\n\r\n.cancel-button {\r\n  background-color: #6c757d;\r\n  color: white;\r\n  border: none;\r\n  padding: 10px 20px;\r\n  cursor: pointer;\r\n}\r\n\r\n.review-content{\r\n  margin-top: 0.5rem;\r\n  font-family: 'TheJamsil4Bold';\r\n  font-size: 15px;\r\n  font-weight:300;\r\n  line-height:1.7;\r\n}\r\n\r\n.average-rating-text{\r\n  font-family: 'TheJamsil5Bold';\r\n  font-size: 50px;\r\n  font-weight:700;\r\n  color: #4caf50;\r\n}\r\n\r\n.carousel-container {\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  overflow: hidden;\r\n  flex-direction: column;\r\n}\r\n\r\n.card-carousel::-webkit-scrollbar {\r\n  display: none; /* 스크롤바 가리기 */\r\n}\r\n\r\n.card-carousel {\r\n  display: row;\r\n  gap: 1.4rem;\r\n  overflow-x: auto;\r\n  overflow-y: hidden;\r\n  scroll-behavior: smooth;\r\n  width: 100%; /* 전체 폭을 차지 */\r\n}\r\n\r\n.card {\r\n  position: relative;\r\n  width:353px;\r\n  height: 70px;\r\n  background-color: #fff;\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n  flex-shrink: 0; /* 카드가 줄어들지 않고 고정된 크기로 유지 */\r\n  margin-top: 1rem;\r\n}\r\n\r\n.card-img-top {\r\n  width: 60px;\r\n  height: 60px;\r\n  object-fit: cover;\r\n  border: none;\r\n  margin-right: 15px;\r\n  margin-left: 10px;\r\n}\r\n\r\n.card-overlay {\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px; /* 이미지와 텍스트 사이의 간격 */\r\n}\r\n\r\n.accident-item-content1 {\r\n  display: flex;\r\n  align-items: center;\r\n  font-family: 'TheJamsil5Bold', sans-serif; /* 고급스럽고 깔끔한 글꼴 */\r\n  font-size: 16px; /* 크기를 약간 키워 가독성 향상 */\r\n  font-weight: 500; /* 텍스트를 더 두껍게 */\r\n  color: #333; /* 텍스트 색상을 고급스러운 짙은 회색으로 */\r\n  margin-left: 2rem;\r\n  gap: 10px; /* 이미지와 텍스트 사이의 간격 */\r\n  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.1); /* 부드러운 그림자 효과 */\r\n  letter-spacing: 0.5px; /* 약간의 글자 간격 추가 */\r\n  transition: color 0.3s ease, transform 0.3s ease; /* 마우스 호버 효과를 부드럽게 */\r\n}\r\n\r\n.accident-item-content1:hover {\r\n  color: #4CAF50; /* 호버 시 텍스트 색상을 초록색으로 변경 */\r\n  transform: scale(1.02); /* 약간 확대 효과 */\r\n}\r\n\r\n.toggle-switch-container2 {\r\n  position: fixed;\r\n  z-index: 10;\r\n  display: flex;\r\n  justify-content: start;\r\n  gap: 10px;\r\n  margin-top: 3rem;\r\n  margin-left: 5rem;\r\n  width: 50%;\r\n  height: 50px;\r\n}\r\n\r\n.toggle-switch2 {\r\n  width: 100px;\r\n  height: 45px;\r\n  background-color: #f5f5f5; /* 기본 배경색을 연한 회색으로 설정 */\r\n  border-radius: 20px; /* 더 부드러운 모서리를 위해 둥글게 처리 */\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n  font-family: 'TheJamsil4Bold';\r\n  font-size: 16px;\r\n  font-weight: 700;\r\n  color: #555; /* 텍스트 색상을 부드러운 회색으로 설정 */\r\n  transition: all 0.3s ease; /* 전환 효과 추가 */\r\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1); /* 가벼운 그림자 효과 */\r\n  border: 1px solid #ddd; /* 테두리 추가 */\r\n}\r\n\r\n.toggle-switch2 img {\r\n  width: 40px; /* 아이콘 크기 조정 */\r\n  height: auto;\r\n  margin-right: 8px; /* 텍스트와 아이콘 사이 간격 */\r\n  transition: transform 0.3s ease; /* 클릭 시 부드러운 전환 효과 */\r\n}\r\n\r\n.toggle-switch2:hover {\r\n  background-color: #e0e0e0; /* 호버 시 배경색 변화 */\r\n  color: #333; /* 텍스트 색상 진하게 변경 */\r\n}\r\n\r\n.toggle-switch2.active {\r\n  background-color: #4CAF50; /* 활성화된 버튼 배경을 초록색으로 설정 */\r\n  color: #ffffff; /* 활성화된 텍스트 색상을 흰색으로 설정 */\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2); /* 활성화된 버튼에 더 강한 그림자 */\r\n}\r\n\r\n.toggle-switch2.active img {\r\n  transform: scale(1.1); /* 활성화된 아이콘 살짝 확대 */\r\n}\r\n\r\n.toggle-switch-container2 {\r\n  flex-wrap: wrap; /* 버튼이 많아지면 줄바꿈 가능 */\r\n  gap: 15px; /* 버튼 사이의 간격 */\r\n}\r\n\r\n  .forecast-details {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-top: 20px;\r\n  width: 100%;\r\n  padding: 10px;\r\n}\r\n\r\n  #forecast1{\r\n    width: 60%;\r\n  }\r\n\r\n  .rainSun-info {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 40%; /* forecast1과 균형을 맞추기 위해 필요 시 조정 */\r\n  text-align: center;\r\n  margin-top: 0.5rem;\r\n  margin-left: 3rem;\r\n}\r\n\r\n.DangerImage {\r\n  display: flex;\r\n  gap: 5px; /* 이미지 사이 간격 */\r\n}\r\n\r\n#img-storage {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n#DangerImage1,\r\n#DangerImage2,\r\n#DangerImage3 {\r\n  width: 40px;\r\n  height: 40px;\r\n  object-fit: cover;\r\n  border-radius: 5px;\r\n}\r\n\r\n.button-group {\r\n  display: flex;\r\n  justify-content: space-around;\r\n  margin: 20px 0;\r\n}\r\n\r\n.btn {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 10px;\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  width: 100px; /* 버튼 너비 조정 */\r\n  height: 120px; /* 버튼 높이 조정 */\r\n  text-align: center;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  transition: transform 0.2s ease, box-shadow 0.2s ease;\r\n}\r\n\r\n.btn img {\r\n  width: 50px; /* 이미지 너비 */\r\n  height: 50px; /* 이미지 높이 */\r\n  margin-bottom: 10px; /* 이미지와 텍스트 간 간격 */\r\n  object-fit: contain; /* 이미지가 깨지지 않도록 조정 */\r\n}\r\n\r\n.btn p {\r\n  margin: 0;\r\n  font-size: 12px; /* 텍스트 크기 */\r\n}\r\n\r\n.btn:hover {\r\n  transform: scale(1.05); /* 호버 시 약간 확대 효과 */\r\n  box-shadow: 0 6px 10px rgba(0, 0, 0, 0.15);\r\n  color:white;\r\n  background-color:#218838\r\n}\r\n.custom-btn:hover {\r\n  transform: translateY(-3px);\r\n  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.custom-btn:active {\r\n  transform: translateY(0);\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n/* 이미지 그리드 */\r\n.image-grid {\r\n  display: flex; /* Flexbox로 정렬 */\r\n  flex-wrap: nowrap; \r\n  gap: 10px; /* 이미지 간 간격 */\r\n  overflow-x: auto; /* 이미지가 넘칠 경우 가로 스크롤 */\r\n  overflow: hidden;\r\n  padding: 5px 0;\r\n  justify-content: start; /* 좌측 정렬 (또는 center, space-between 등 필요에 따라 변경 가능) */\r\n}\r\n\r\n/* 개별 이미지 스타일 */\r\n.image-item {\r\n  width: 60px; /* 이미지 컨테이너 크기 */\r\n  height: 60px;\r\n  overflow: hidden; /* 이미지가 크기를 벗어나지 않도록 숨김 */\r\n  border-radius: 8px; /* 이미지의 모서리를 둥글게 */\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* 가벼운 그림자 효과 */\r\n  transition: transform 0.2s ease, box-shadow 0.2s ease;\r\n}\r\n\r\n.image-item:hover {\r\n  transform: scale(1.1); /* 호버 시 살짝 확대 */\r\n  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15); /* 호버 시 그림자 강조 */\r\n}\r\n\r\n/* 클릭 가능한 이미지 */\r\n.clickable-image {\r\n  width: 100%; /* 이미지가 컨테이너에 꽉 차게 */\r\n  height: 100%;\r\n  object-fit: cover; /* 이미지 비율 유지하며 꽉 채우기 */\r\n  cursor: pointer; /* 클릭 가능한 커서 */\r\n  border-radius: 8px;\r\n}\r\n\r\n/* 범례 스타일 */\r\n.map-legend {\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    margin-top: 35.5em;\r\n    margin-right: 2em;\r\n    background-color: #faf7f0; /* 반투명 배경 */\r\n    padding: 5px;\r\n    border-radius: 10px;\r\n    font-size: 12px;\r\n    z-index: 10; /* 지도 위에 표시되도록 설정 */\r\n  }\r\n\r\n  .legend-item {\r\n    display: flex;\r\n    align-items: center;\r\n    margin-bottom: 2px;\r\n  }\r\n\r\n  .legend-icon {\r\n    width: 10px;\r\n    height: 10px;\r\n    margin-right: 5px;\r\n    margin-left: 5px;\r\n    border-radius: 10px;\r\n  }\r\n\r\n  /* 모달 전반적인 스타일 */\r\n.modal-dialog {\r\n  max-width: 1400px; /* 모달 너비 확장 */\r\n}\r\n\r\n.modal-content {\r\n  background: #f9f9f9;\r\n  border-radius: 16px;\r\n  overflow: hidden;\r\n  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.modal-header {\r\n  background: #28a745; /* 초록색 배경 */\r\n  padding: 10px; /* 상하 여백 줄이기 */\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  height: 50px; /* 헤더 높이 축소 */\r\n}\r\n\r\n.modal-header .modal-title {\r\n  font-size: 2rem; /* 글씨 크기 축소 */\r\n  font-weight: bold;\r\n  color: white; /* 헤더 텍스트 색상 */\r\n  margin: 0; /* 좌측 정렬 */\r\n}\r\n\r\n.modal-header .btn {\r\n  width: 30px; /* 버튼 크기 축소 */\r\n  height: 30px;\r\n  color: white;\r\n  background: transparent;\r\n  border: none;\r\n}\r\n\r\n.modal-header .btn:hover {\r\n  background: rgba(0, 0, 0, 0.1); /* 닫기 버튼 호버 효과 */\r\n}\r\n\r\n.modal-header .btn i {\r\n  font-size: 2rem; /* 아이콘 크기 확대 */\r\n  color: white; \r\n}\r\n\r\n.modal-body {\r\n  padding: 20px;\r\n  background: #ffffff;\r\n  border-radius: 16px;\r\n}\r\n\r\n/* 지도와 비디오 컨테이너 */\r\n.video-container {\r\n  display: flex;\r\n  gap: 10px; /* 지도와 비디오 사이 간격 줄이기 */\r\n  align-items: center;\r\n}\r\n\r\n#modalMap {\r\n  width: 60%; /* 지도 넓이 증가 */\r\n  height: 700px; /* 지도 높이 증가 */\r\n  border-radius: 8px;\r\n  border: 1px solid #ddd;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.video-container video {\r\n  width: 38%; /* 비디오 넓이 조정 */\r\n  height: 700px; /* 비디오 높이 증가 */\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n  object-fit: cover; /* 여백 없이 비디오 맞춤 */\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n</style>\r\n","import script from \"./MountainDetailView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./MountainDetailView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./MountainDetailView.vue?vue&type=style&index=0&id=5381dde8&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-5381dde8\"]])\n\nexport default __exports__","import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n"],"names":["props","__props","courseData","ref","JSON","parse","course","console","log","value","map","routeCoordinates","chartInstance","currentMarker","modalPolyline","showMap","photoMap","distressCount","strumbleCount","diseaseCount","videoRef","modalMap","showCoursePreviewModal","elem","document","querySelector","coursePreviewModal","Modal","show","_element","addEventListener","initializeModalMap","kakao","maps","event","trigger","setCenter","LatLng","modalMapElement","getElementById","Map","center","level","loadGeoJSONFromServer","length","groupedCoordinates","groupCoordinates","addRouteLayer","error","onMounted","queryMapType","route","query","mapType","initializeMap","fetchReviewsAndRatings","fetchSummary","fetchWeatherData","requestCourse","selectedFilter","mapMarkers","applyFilter","filter","forEach","marker","setMap","loadMarkers","loadDangerMarkers","async","url","imageSrc","response","fetch","ok","Error","status","markerData","json","filteredMarkers","features","feature","courseName","properties","MNTN_NM2","spot","lat","geometry","coordinates","lng","markerPosition","imageSize","Size","imageOption","offset","Point","markerImage","MarkerImage","Marker","position","title","MNTN_NM","image","push","infowindow","InfoWindow","content","SAFE_SPOT2","disableAutoPan","addListener","getMap","close","open","distresses","strumbles","diseases","openInfoWindowForImage","index","type","target","markers","find","item","markerType","syncCourseWithVideo","progress","currentTime","duration","Math","floor","point","panTo","script","createElement","onload","load","src","head","appendChild","loadMarkersToPhotoMap","toggleMap","targetMap","geojsonData","processGeoJSON","comCourse","axios","post","data","latitude","longitude","infowindowPhotoMap","communityUrl","communityTitle","allCoordinates","PMNTN_NM","includes","line","concat","coord","elevation","DN","drawElevationChart","groupSize","groups","i","slice","flatCoordinates","flat","linePath","drawBaseRoute","group","startPoint","endPoint","slope","calculateSlope","color","getColorBySlope","groupLinePath","polyline","Polyline","path","strokeWeight","strokeColor","strokeOpacity","strokeStyle","bounds","LatLngBounds","extend","setBounds","basePolyline","calculateDistance","prevCoord","R","dLat","deg2rad","dLng","a","sin","cos","c","atan2","sqrt","deg","PI","calculateCumulativeDistances","cumulativeDistances","totalDistance","calculateHaversineDistance","coord1","coord2","lat1","lat2","deltaLat","deltaLon","start","end","horizontalDistance","elevationChange","diagonalDistance","pow","ctx","getContext","distances","scaleFactor","scaledDistances","distance","elevations","backgroundImagePlugin","id","beforeDraw","chart","config","options","backgroundImage","chartArea","Image","save","globalAlpha","drawImage","left","top","right","bottom","restore","Chart","labels","datasets","label","borderColor","borderWidth","fill","scales","x","display","text","grid","ticks","autoSkip","maxTicksLimit","maxRotation","minRotation","callback","toFixed","y","interaction","mode","intersect","plugins","tooltip","enabled","legend","onClick","elements","highlightRouteOnMap","onHover","imagesSize","dailyWeather","sunriseTimes","sunsetTimes","selectedDateIndex","selectedDay","computed","selectDate","apiKey","get","groupedByDay","list","date","dt_txt","split","selectedWeather","Object","keys","currentTemp","minTemp","maxTemp","calculateMinMaxTemp","daySummary","sunriseSunsetPromises","day","sunriseSunsetResults","Promise","all","result","formatTime","results","sunrise","sunset","formatDayOfWeek","formattedDate","Date","toLocaleDateString","weekday","formatDate","getDate","getWeatherEmoji","weatherMain","weatherIcons","Clear","Clouds","Rain","Snow","Fog","Thunderstorm","Drizzle","Mist","breeze","translateWeatherDescription","weatherId","weatherDescriptions","dayData","temps","main","temp","min","max","time","toLocaleTimeString","hour","minute","timeZone","router","useRouter","useRoute","goBack","back","showModal","editModal","deleteModal","currentReview","courseId","reviewId","userId","rating","difficulty","reviewContent","selectedReviewId","loggedInUserId","localStorage","getItem","courseData2","selectedCourse","photos","courses","editReview","review","nextTick","confirmDelete","warn","saveReview","reviewData","put","alert","deleteReview","delete","params","e","difficultyMapping","averageDifficultyText","reviews","totalDifficulty","reduce","sum","averageDifficulty","averageRating","reviewSummary","ratingDistribution","reviewCount","searchQuery","reviewsToShow","setRating","star","onFileChange","Array","from","files","submitReview","validateForm","formData","FormData","append","Blob","stringify","photo","headers","summary","fullStars","halfStar","emptyStars","filteredReviews","toLowerCase","visibleReviews","loadMoreReviews","canShowMore","goToCourse3DPage","name","__exports__","register","registerables"],"sourceRoot":""}