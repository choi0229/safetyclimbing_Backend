{"version":3,"file":"js/753.4ce1c45b.js","mappings":"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","sources":["webpack://frontend/./src/api/index.js","webpack://frontend/./src/api/complaint.js","webpack://frontend/./src/views/ComplaintViewMobile.vue","webpack://frontend/./src/views/ComplaintViewMobile.vue?070f"],"sourcesContent":["import axios from 'axios';\r\n\r\nfunction apiInstance() {\r\n  const instance = axios.create({\r\n    baseURL: 'http://localhost:9000/api',\r\n    headers: {\r\n      'Content-Type': 'application/json;charset=utf-8',\r\n    },\r\n  });\r\n  return instance;\r\n}\r\n\r\nexport { apiInstance };","import { apiInstance } from \"./index.js\";\r\nconst api = apiInstance();\r\nimport router from \"@/router/index.js\";\r\nimport axios from 'axios';\r\n\r\n//complaintList 가져오기 요청\r\nexport async function getComplaintList() {\r\n  try { \r\n    const response = await axios.get('/api/complaint/list');\r\n    console.log(\"you can use getComplaintList\", response.data);\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error(err); // 에러를 콘솔에 출력\r\n  }\r\n}\r\n\r\n//complaintList 날짜 최신순으로 가져오기 요청\r\nexport async function getRecentComplaintList() {\r\n  try { \r\n    const response = await axios.get('/api/complaint/listRecent');\r\n    console.log(\"you can use getRecentComplaintList\", response.data);\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error(err); // 에러를 콘솔에 출력\r\n  }\r\n}\r\n\r\n//complaintList 글쓴이아이디에 해당하는 리스트 최신순으로 가져오기 요청\r\nexport async function getComplaintByUserId(userId) {\r\n  try { \r\n    const response = await axios.get(`/api/complaint/mine/${userId}`);\r\n    //console.log(\"getComplaintByUserId\", response.data);\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error(err); // 에러를 콘솔에 출력\r\n  }\r\n}\r\n\r\n//complaintList 글쓴이아이디에 해당하는 리스트 최신순으로 가져오기 요청\r\nexport async function getComplaintListByInst(institution) {\r\n  try { \r\n    const response = await axios.get(`/api/complaint/myList/${institution}`);\r\n    //console.log(\"getComplaintListByInst\", response.data);\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error(err); // 에러를 콘솔에 출력\r\n  }\r\n}\r\n\r\n//pathList 날짜 최신순으로 가져오기 요청\r\nexport async function getPathList() {\r\n  try { \r\n    const response = await axios.get('/api/pathList');\r\n    console.log(\"you can use getPathList\", response.data);\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error(err); // 에러를 콘솔에 출력\r\n  }\r\n}\r\n\r\n// 민원글 작성 요청\r\nexport async function insertComplaint(data) {\r\n  try {\r\n    const response = await axios.post('/api/complaint/insert', data);\r\n    console.log('응답 상태 코드:', response.status); // 응답 상태 코드 확인\r\n    console.log('민원글 작성에 대한 응답 데이터:', response.data); \r\n    return response.data;\r\n  } catch (err) {\r\n    console.error('API 요청 중 오류 발생:', err);\r\n    throw err;\r\n  }\r\n}\r\n\r\n// 민원글 번호에 따른 민원글 한개 가져오기 요청\r\nexport async function getComplaintByNo(complaintNo) {\r\n  try {\r\n    const response = await axios.get(`/api/complaint/one/${complaintNo}`);\r\n    console.log(\"API response:\", response);\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error(err); // 에러를 콘솔에 출력\r\n  }\r\n}\r\n\r\n// 유저 아이디에 따른 유저정보 한개 가져오기 요청\r\nexport async function getUserById(userId) {\r\n  try {\r\n    const response = await axios.get(`/api/userInfo/${userId}`);\r\n    console.log(\"API response:\", response);\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error(err); // 에러를 콘솔에 출력\r\n  }\r\n  \r\n}\r\n\r\n// 코스 한개씩 가져오기 요청\r\nexport async function getCourseById(courseId) {\r\n  try {\r\n    const response = await axios.get(`/api/course/${courseId}`);\r\n    console.log(\"API response:\", response);\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error(err); // 에러를 콘솔에 출력\r\n  }\r\n}\r\n\r\n\r\n// 민원글 번호에 따른 글 삭제 요청\r\nexport async function deleteComplaintByNo(complaintNo) {\r\n  try {\r\n    const response = await axios.delete(`/api/complaint/delete/${complaintNo}`);\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n}\r\n\r\n// 글 업데이트\r\nexport async function updateComplaintByNo(complaintNo, data) {\r\n  try {\r\n    const response = await axios.patch(`/api/complaint/update/${complaintNo}`, data);\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n}\r\n\r\n//특정 유저의 complaintList를 가져오기 요청\r\nexport async function getUserPostList(userNo) {\r\n  try { \r\n    const response = await api.get(`/auth/userpostlist/${userNo}`);\r\n    console.log(userNo);\r\n    console.log(\"you can use getUserPostList\", response.data);\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error(err); // 에러를 콘솔에 출력\r\n  }\r\n}\r\n\r\n//게시글 추가 및 \r\nexport async function insertPostAndKeyword(postData, keywordData) {\r\n  const formData = new FormData();\r\n  formData.append('post', new Blob([JSON.stringify(postData)], { type: 'application/json' }));\r\n  formData.append('postkeyword', new Blob([JSON.stringify(keywordData)], { type: 'application/json' }));\r\n\r\n  try {\r\n    const response = await api.post('/auth/insert', formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error(err);\r\n    if (err.response && err.response.status === 401) {\r\n      // 로그인 페이지로 이동\r\n      alert(\"로그인 후 이용하실 수 있습니다.\")\r\n      router.push({ path: '/login' });\r\n    }\r\n    throw err;\r\n  }\r\n} \r\n\r\n// 이미지 저장요청\r\nexport async function saveImage(formData) {\r\n  try {\r\n    const response = await api.post('/auth/upload-image', formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n    console.log('서버 응답:', response.data);\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error('이미지 업로드 중 오류 발생:', err); // 에러를 콘솔에 출력\r\n  }\r\n}\r\n\r\n// 민원글 번호에 따른 민원처리정보 한개 가져오기 요청\r\nexport async function getProcessingByNo(processingComplaintNo) {\r\n  try {\r\n    const response = await axios.get(`/api/complaint/processing/${processingComplaintNo}`);\r\n    console.log(\"API response:\", response);\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error(err); // 에러를 콘솔에 출력\r\n  }\r\n}\r\n\r\n// 민원처리정보 작성 요청\r\nexport async function insertProcessing(data) {\r\n  try {\r\n    const response = await axios.post('/api/complaint/insertProcessing', data);\r\n    console.log('응답 상태 코드:', response.status); // 응답 상태 코드 확인\r\n    console.log('민원처리정보 작성에 대한 응답 데이터:', response.data); \r\n    return response.data;\r\n  } catch (err) {\r\n    console.error('API 요청 중 오류 발생:', err);\r\n    throw err;\r\n  }\r\n}\r\n\r\n// 민원처리정보 업데이트\r\nexport async function updateProcessingByNo(processingComplaintNo, data) {\r\n  try {\r\n    const response = await axios.patch(`/api/complaint/updateProcessing/${processingComplaintNo}`, data);\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n}","<template>\r\n  \r\n  <!--begin::Post card-->\r\n  <div class=\"card\">\r\n    <!--begin::Body-->\r\n    <div class=\"card-body p-lg-20 pb-lg-0\">\r\n      <!--begin::Layout-->\r\n      <div class=\"d-flex flex-column flex-xl-row\">\r\n        <!--begin::Content-->\r\n        <div class=\"flex-lg-row-fluid me-xl-15\">\r\n          <!--begin::Post content-->\r\n          <div class=\"mb-17\">\r\n            <!--begin::Wrapper-->\r\n            <div class=\"mb-2\">\r\n              <!--begin::Info-->\r\n              <div class=\"d-flex justify-content-between align-items-center mb-4\">\r\n                <button class=\"styled-button\" @click=\"goToMainPage()\">\r\n                  뒤로가기\r\n                </button>\r\n              </div>\r\n              <!--end::Info-->\r\n              \r\n              <!--begin::Title-->\r\n              <div class=\"row align-items-center mb-2\">\r\n                <div class=\"col-md-2\">\r\n                  <label class=\"col-form-label fw-bold\">제목</label>\r\n                </div>\r\n                <div class=\"col-md-10\">\r\n                  <input class=\"form-control form-control-lg\" type=\"text\" v-model=\"titleInput\"/>\r\n                </div>\r\n              </div>\r\n              <!--end::Title-->\r\n\r\n              <!-- begin::타입 -->\r\n              <label for=\"category\" class=\"col-form-label fw-bold\">구분</label>\r\n              <div class=\"form-group mb-2\">\r\n                <select\r\n                  v-model=\"typeInput\"\r\n                  id=\"number\"\r\n                  name=\"number\"\r\n                  class=\"form-control\"\r\n                  style=\"cursor: pointer\"\r\n                >\r\n                  <option value=\"\" disabled>유형 선택</option>\r\n                  <option value=\"파손\">파손</option>\r\n                  <option value=\"낙석\">낙석</option>\r\n                  <option value=\"야생동물\">야생동물</option>\r\n                </select>\r\n              </div>\r\n              <!-- end::타입 -->\r\n\r\n              <!--begin::작성자\r\n              <div class=\"row align-items-center\">\r\n                <div class=\"col-md-2\">\r\n                  <label class=\"col-form-label fw-bold\">작성자</label>\r\n                </div>\r\n                <div class=\"col-md-10\">\r\n                  <input class=\"form-control form-control-lg\" type=\"text\" v-model=\"userIdInput\"/>\r\n                </div>\r\n              </div>\r\n              end::작성자-->\r\n            </div>\r\n            <!--end::Wrapper-->\r\n\r\n            <!--begin::산 이름-->\r\n            <div class=\"row align-items-center mb-3\">\r\n              <div class=\"col-md-2\">\r\n                <label class=\"col-form-label fw-bold\">산 이름</label>\r\n              </div>\r\n              <div class=\"col-md-10\">\r\n                <input type=\"text\" id=\"groupName\" class=\"form-control\" v-model=\"mountainNameInput\"/>\r\n              </div>\r\n            </div>\r\n            <!--end::산 이름-->\r\n\r\n            <button type=\"button\" @click=\"openSearchModal\" class=\"mb-2\">장소 검색</button>\r\n\r\n            <!--begin::민원 지도 찍기-->\r\n            <div class=\"mb-3\">\r\n              <div id=\"map\" class=\"map-container\"></div>\r\n              <p><em>지도를 클릭해주세요!</em></p>\r\n              <div id=\"clickLatlng\"></div>\r\n            </div>\r\n            <!--end::민원 지도 찍기-->\r\n\r\n            <!--begin::사진 등록-->\r\n            <div class=\"d-flex flex-column mb-3 fv-row\">\r\n              <label class=\"d-flex align-items-center fs-6 fw-semibold mb-2\">\r\n                <span class=\"required\">사진 등록</span>\r\n              </label>\r\n              <input\r\n                type=\"file\"\r\n                id=\"image\"\r\n                @change=\"onFileChange\"\r\n                ref=\"image\"\r\n                accept=\"image/*\"\r\n              />\r\n            </div>\r\n            <!--end::사진 등록-->\r\n\r\n            <!--begin::Description-->\r\n            <div class=\"mb-4\">\r\n              <label for=\"exampleFormControlTextarea1\" class=\"form-label\">위치, 시간, 내용을 자세히 입력해주세요.</label>\r\n              <textarea\r\n                class=\"form-control\"\r\n                id=\"exampleFormControlTextarea1\"\r\n                rows=\"6\"\r\n                v-model=\"contentInput\"></textarea>\r\n            </div>\r\n            <!--end::Description-->\r\n\r\n            <!--begin::등록하기 버튼-->\r\n            <div class=\"d-flex justify-content-end\">\r\n              <button\r\n                id=\"updateButton\"\r\n                @click=\"insertComplaintBtn()\"\r\n                class=\"btn btn-success fs-6 p-2\"\r\n              >\r\n                등록하기\r\n              </button>\r\n            </div>\r\n            <!--end::등록하기 버튼-->\r\n\r\n          </div>\r\n          <!--end::Post content-->\r\n        </div>\r\n        <!--end::Content-->\r\n      </div>\r\n      <!--end::Layout-->\r\n    </div>\r\n    <!--end::Body-->\r\n  </div>\r\n  <!--end::Post card-->\r\n<!-- 장소 검색 모달 -->\r\n<div v-if=\"isModalOpen\" class=\"modal\">\r\n      <div class=\"modal-content\">\r\n        <span class=\"close\" @click=\"closeSearchModal\">&times;</span>\r\n        <input class=\"mt-4\" v-model=\"keywordInput\" placeholder=\"장소 검색\" />\r\n        <button @click=\"searchPlaces\" class=\"searchButton\">검색하기</button>\r\n\r\n        <ul v-if=\"searchResults.length > 0\">\r\n          <li v-for=\"(place, index) in searchResults\" :key=\"index\" @click=\"selectPlace(place)\">\r\n            {{ place.place_name }} ({{ place.address_name }})\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n</template>\r\n\r\n\r\n<script setup>\r\n/* global kakao */\r\nimport { ref, onMounted } from \"vue\";\r\nimport router from \"@/router/index.js\";\r\nimport { insertComplaint } from \"@/api/complaint.js\";\r\nimport axios from 'axios';\r\n\r\n// 위치 상태 관리\r\nconst latitude = ref(37.6584);\r\nconst longitude = ref(126.9775);\r\nconst altitude = ref(null);\r\nconst speed = ref(null);\r\nconst bearing = ref(null);\r\nconst time = ref(\"\");\r\n\r\n// 민원글 저장 필요한 변수 생성\r\nconst titleInput = ref(\"\");\r\nlet userIdInput = localStorage.getItem(\"userId\");\r\nlet userNickNameInput = localStorage.getItem(\"userNickName\");\r\nconst mountainNameInput = ref(\"\");\r\nconst contentInput = ref(\"\");\r\nconst typeInput = ref(\"\");\r\nlet latitudeInput = latitude.value;\r\nlet longitudeInput = longitude.value;\r\n\r\n// 모달 상태를 제어하는 변수\r\nconst isModalOpen = ref(false);\r\nconst keywordInput = ref(\"\");\r\nconst searchResults = ref([]);\r\n\r\n// Kakao Maps가 로드된 상태를 추적하는 변수\r\nlet isKakaoMapLoaded = ref(false);\r\n\r\n// 마커 변수 추가\r\nlet marker = null;\r\n\r\nonMounted(() => {\r\n    initializeMap();\r\n    fetchLocation();\r\n    setInterval(fetchLocation, 5000); // 3초마다 위치 데이터 가져오기\r\n});\r\n\r\nfunction initializeMap() {\r\n    const script = document.createElement('script');\r\n    script.onload = () => {\r\n        kakao.maps.load(() => {\r\n            createMap();\r\n            isKakaoMapLoaded.value = true; // Kakao Maps 로드 완료\r\n        });\r\n    };\r\n    script.src = 'https://dapi.kakao.com/v2/maps/sdk.js?appkey=333bda7da18df138fb4d9b3e5cf351c4&autoload=false&libraries=services'; \r\n    document.head.appendChild(script);\r\n}\r\n\r\nlet map; // 전역으로 맵 객체를 선언합니다\r\n\r\nfunction createMap() {\r\n    const mapContainer = document.getElementById(\"map\");\r\n    const mapOption = {\r\n        center: new kakao.maps.LatLng(latitude.value, longitude.value),\r\n        level: 5,\r\n    };\r\n\r\n    // 맵 객체를 생성하고 전역 변수에 할당합니다.\r\n    map = new kakao.maps.Map(mapContainer, mapOption);\r\n\r\n    // 마커 초기화\r\n    marker = new kakao.maps.Marker({\r\n        position: map.getCenter(),\r\n    });\r\n    marker.setMap(map);\r\n\r\n    kakao.maps.event.addListener(map, \"click\", function (mouseEvent) {\r\n        const latlng = mouseEvent.latLng;\r\n        // 클릭한 위치에 마커를 이동\r\n        marker.setPosition(latlng);\r\n        latitudeInput = latlng.getLat();\r\n        longitudeInput = latlng.getLng();\r\n        document.getElementById(\"clickLatlng\").innerHTML = `위도: ${latlng.getLat()}, 경도: ${latlng.getLng()}`;\r\n    });\r\n    //console.log(\"위도\",latitudeInput,\"경도\",longitudeInput);\r\n}\r\n\r\n// 서버에서 위치 정보들을 가져오는 함수\r\nasync function fetchLocation() {\r\n    try {\r\n        const response = await axios.get('/api/recordlocation');\r\n        console.log(\"Received response:\", response.data); // 응답 데이터 확인\r\n        latitude.value = response.data.latitude;\r\n        longitude.value = response.data.longitude;\r\n        altitude.value = response.data.altitude;\r\n        speed.value = response.data.speed;\r\n        bearing.value = response.data.bearing;\r\n        time.value = response.data.time;\r\n\r\n    } catch (error) {\r\n        console.error(\"Error fetching location:\", error);\r\n    }\r\n}\r\n\r\n// ==== 장소 검색 관련 함수 ==== //\r\nfunction openSearchModal() {\r\n    isModalOpen.value = true; \r\n}\r\n\r\nfunction closeSearchModal() {\r\n    isModalOpen.value = false;\r\n}\r\n\r\nfunction searchPlaces() {\r\n    const keyword = keywordInput.value.trim();\r\n    if (!keyword) {\r\n        alert('키워드를 입력해주세요!');\r\n        return;\r\n    }\r\n\r\n    if (!isKakaoMapLoaded.value) {\r\n        alert('Kakao Maps가 아직 로드되지 않았습니다.');\r\n        return;\r\n    }\r\n\r\n    const ps = new kakao.maps.services.Places();\r\n    ps.keywordSearch(keyword, placesSearchCB);\r\n}\r\n\r\nfunction placesSearchCB(data, status) {\r\n    if (status === kakao.maps.services.Status.OK) {\r\n        searchResults.value = data; \r\n    } else {\r\n        alert('검색 결과가 없습니다.');\r\n    }\r\n}\r\n\r\n// 선택한 장소로 메인 맵에 마커를 표시하는 함수\r\nfunction selectPlace(place) {\r\n    latitudeInput = place.y;\r\n    longitudeInput = place.x;\r\n\r\n    // 기존 맵의 중심을 선택한 장소로 이동\r\n    const centerPosition = new kakao.maps.LatLng(place.y, place.x);\r\n    marker.setPosition(centerPosition); // 마커의 위치를 업데이트\r\n    map.setCenter(centerPosition); // 맵의 중심을 선택한 장소로 이동\r\n\r\n    document.getElementById(\"clickLatlng\").innerHTML = `위도: ${place.y}, 경도: ${place.x}`; // 위도 경도 표시\r\n    closeSearchModal(); // 모달을 닫습니다\r\n}\r\n\r\n// ==== 이미지 관련 코드 ====\r\nconst selectedFile = ref(null);\r\n\r\nconst onFileChange = (event) => {\r\n  selectedFile.value = event.target.files[0];\r\n};\r\n\r\nconst uploadImage = async () => {\r\n  if (!selectedFile.value) {\r\n    return null;\r\n  }\r\n  const formData = new FormData();\r\n  formData.append('file', selectedFile.value);\r\n\r\n  try {\r\n    const response = await axios.post('/api/complaint/upload', formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error uploading image', error);\r\n    return null;\r\n  }\r\n};\r\n\r\n// 민원 작성 함수\r\nasync function insertComplaintButton() {\r\n  const imagePath = await uploadImage();\r\n  const complaintData = {\r\n    complaintTitle: titleInput.value,\r\n    complaintContent: contentInput.value,\r\n    complaintType: typeInput.value,\r\n    complaintImg: imagePath || '',\r\n    userId: userIdInput,\r\n    userNickName: userNickNameInput,\r\n    mountainName: mountainNameInput.value,\r\n    latitude: latitudeInput,\r\n    longitude: longitudeInput\r\n  };\r\n\r\n  try {\r\n    const response = await insertComplaint(complaintData);\r\n    console.log('서버 응답: ', response);\r\n  } catch (error) {\r\n    console.error('서버 요청 중 오류 발생: ', error);\r\n  }\r\n}\r\n\r\nfunction insertComplaintBtn() {\r\n  insertComplaintButton();\r\n  goToMainPage();\r\n}\r\n\r\nfunction goToMainPage() {\r\n  console.log(\"목록페이지로 이동\")\r\n  router.replace({ path: \"/complaintListMobile\" });\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.card {\r\n  margin: 10px;\r\n}\r\n\r\n/* Map container styling */\r\n.map-container {\r\n  width: 100%;\r\n  height: 400px;\r\n}\r\n\r\n/* Button styling */\r\n.styled-button {\r\n  background: linear-gradient(#d3d3d3, #a9a9a9);\r\n  color: white;\r\n  padding: 10px 20px;\r\n  border: none;\r\n  border-radius: 25px;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n/* Input and textarea styles */\r\ninput.form-control, textarea.form-control {\r\n  font-size: 16px;\r\n  padding: 10px;\r\n  width: 100%;\r\n}\r\n\r\n/* Margin bottom for spacing between elements */\r\n.mb-4, .mb-5 {\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n\r\n/* Media queries for 360x740 */\r\n@media (max-width: 360px) {\r\n  .card {\r\n    padding: 15px;\r\n  }\r\n\r\n  /* Title and input fields */\r\n  label.col-form-label.fw-bold {\r\n    font-size: 14px;\r\n  }\r\n\r\n  input.form-control, textarea.form-control {\r\n    font-size: 14px;\r\n    padding: 8px;\r\n  }\r\n\r\n  /* Buttons */\r\n  .styled-button {\r\n    padding: 8px 15px;\r\n    font-size: 14px;\r\n  }\r\n\r\n  /* Map container */\r\n  .map-container {\r\n    height: 250px;\r\n  }\r\n\r\n  /* Adjust margins for smaller screens */\r\n  .mb-4, .mb-5 {\r\n    margin-bottom: 1rem;\r\n  }\r\n}\r\n\r\n/* 모달 스타일 */\r\n.modal {\r\n  display: block;\r\n  position: fixed;\r\n  z-index: 1000;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: auto;\r\n  background-color: rgba(0, 0, 0, 0.4);\r\n}\r\n\r\n.modal-content {\r\n  position: relative;\r\n  background-color: white;\r\n  margin: 15% auto;\r\n  padding: 20px;\r\n  border: 1px solid #888;\r\n  width: 80%;\r\n}\r\n\r\n.close {\r\n  position: absolute;\r\n  top: 1px;\r\n  right: 10px;\r\n  color: #aaa;\r\n  font-size: 28px;\r\n  font-weight: bold;\r\n}\r\n\r\n.close:hover, .close:focus {\r\n  color: black;\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n}\r\n\r\n.searchButton{\r\n    background-color: #04663f !important;\r\n}\r\n</style>","import script from \"./ComplaintViewMobile.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ComplaintViewMobile.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ComplaintViewMobile.vue?vue&type=style&index=0&id=782e888f&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-782e888f\"]])\n\nexport default __exports__"],"names":["apiInstance","instance","axios","create","baseURL","headers","api","async","getComplaintList","response","get","console","log","data","err","error","getRecentComplaintList","getComplaintByUserId","userId","getComplaintListByInst","institution","getPathList","insertComplaint","post","status","getComplaintByNo","complaintNo","getUserById","getCourseById","courseId","deleteComplaintByNo","delete","updateComplaintByNo","patch","getUserPostList","userNo","getProcessingByNo","processingComplaintNo","insertProcessing","updateProcessingByNo","latitude","ref","longitude","altitude","speed","bearing","time","titleInput","userIdInput","localStorage","getItem","userNickNameInput","mountainNameInput","contentInput","typeInput","latitudeInput","value","longitudeInput","isModalOpen","keywordInput","searchResults","map","isKakaoMapLoaded","marker","initializeMap","script","document","createElement","onload","kakao","maps","load","createMap","src","head","appendChild","mapContainer","getElementById","mapOption","center","LatLng","level","Map","Marker","position","getCenter","setMap","event","addListener","mouseEvent","latlng","latLng","setPosition","getLat","getLng","innerHTML","fetchLocation","openSearchModal","closeSearchModal","searchPlaces","keyword","trim","alert","ps","services","Places","keywordSearch","placesSearchCB","Status","OK","selectPlace","place","y","x","centerPosition","setCenter","onMounted","setInterval","selectedFile","onFileChange","target","files","uploadImage","formData","FormData","append","insertComplaintButton","imagePath","complaintData","complaintTitle","complaintContent","complaintType","complaintImg","userNickName","mountainName","insertComplaintBtn","goToMainPage","router","replace","path","__exports__"],"sourceRoot":""}