{"version":3,"file":"js/517.c77da638.js","mappings":"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","sources":["webpack://frontend/./src/api/index.js","webpack://frontend/./src/api/complaint.js","webpack://frontend/./src/views/ManageInfoView.vue","webpack://frontend/./src/views/ManageInfoView.vue?03fd"],"sourcesContent":["import axios from 'axios';\r\n\r\nfunction apiInstance() {\r\n  const instance = axios.create({\r\n    baseURL: 'http://localhost:9000/api',\r\n    headers: {\r\n      'Content-Type': 'application/json;charset=utf-8',\r\n    },\r\n  });\r\n  return instance;\r\n}\r\n\r\nexport { apiInstance };","import { apiInstance } from \"./index.js\";\r\nconst api = apiInstance();\r\nimport router from \"@/router/index.js\";\r\nimport axios from 'axios';\r\n\r\n//complaintList 가져오기 요청\r\nexport async function getComplaintList() {\r\n  try { \r\n    const response = await axios.get('/api/complaint/list');\r\n    console.log(\"you can use getComplaintList\", response.data);\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error(err); // 에러를 콘솔에 출력\r\n  }\r\n}\r\n\r\n//complaintList 날짜 최신순으로 가져오기 요청\r\nexport async function getRecentComplaintList() {\r\n  try { \r\n    const response = await axios.get('/api/complaint/listRecent');\r\n    console.log(\"you can use getRecentComplaintList\", response.data);\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error(err); // 에러를 콘솔에 출력\r\n  }\r\n}\r\n\r\n//complaintList 글쓴이아이디에 해당하는 리스트 최신순으로 가져오기 요청\r\nexport async function getComplaintByUserId(userId) {\r\n  try { \r\n    const response = await axios.get(`/api/complaint/mine/${userId}`);\r\n    //console.log(\"getComplaintByUserId\", response.data);\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error(err); // 에러를 콘솔에 출력\r\n  }\r\n}\r\n\r\n//complaintList 글쓴이아이디에 해당하는 리스트 최신순으로 가져오기 요청\r\nexport async function getComplaintListByInst(institution) {\r\n  try { \r\n    const response = await axios.get(`/api/complaint/myList/${institution}`);\r\n    //console.log(\"getComplaintListByInst\", response.data);\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error(err); // 에러를 콘솔에 출력\r\n  }\r\n}\r\n\r\n//pathList 날짜 최신순으로 가져오기 요청\r\nexport async function getPathList() {\r\n  try { \r\n    const response = await axios.get('/api/pathList');\r\n    console.log(\"you can use getPathList\", response.data);\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error(err); // 에러를 콘솔에 출력\r\n  }\r\n}\r\n\r\n// 민원글 작성 요청\r\nexport async function insertComplaint(data) {\r\n  try {\r\n    const response = await axios.post('/api/complaint/insert', data);\r\n    console.log('응답 상태 코드:', response.status); // 응답 상태 코드 확인\r\n    console.log('민원글 작성에 대한 응답 데이터:', response.data); \r\n    return response.data;\r\n  } catch (err) {\r\n    console.error('API 요청 중 오류 발생:', err);\r\n    throw err;\r\n  }\r\n}\r\n\r\n// 민원글 번호에 따른 민원글 한개 가져오기 요청\r\nexport async function getComplaintByNo(complaintNo) {\r\n  try {\r\n    const response = await axios.get(`/api/complaint/one/${complaintNo}`);\r\n    console.log(\"API response:\", response);\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error(err); // 에러를 콘솔에 출력\r\n  }\r\n}\r\n\r\n// 유저 아이디에 따른 유저정보 한개 가져오기 요청\r\nexport async function getUserById(userId) {\r\n  try {\r\n    const response = await axios.get(`/api/userInfo/${userId}`);\r\n    console.log(\"API response:\", response);\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error(err); // 에러를 콘솔에 출력\r\n  }\r\n  \r\n}\r\n\r\n// 코스 한개씩 가져오기 요청\r\nexport async function getCourseById(courseId) {\r\n  try {\r\n    const response = await axios.get(`/api/course/${courseId}`);\r\n    console.log(\"API response:\", response);\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error(err); // 에러를 콘솔에 출력\r\n  }\r\n}\r\n\r\n\r\n// 민원글 번호에 따른 글 삭제 요청\r\nexport async function deleteComplaintByNo(complaintNo) {\r\n  try {\r\n    const response = await axios.delete(`/api/complaint/delete/${complaintNo}`);\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n}\r\n\r\n// 글 업데이트\r\nexport async function updateComplaintByNo(complaintNo, data) {\r\n  try {\r\n    const response = await axios.patch(`/api/complaint/update/${complaintNo}`, data);\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n}\r\n\r\n//특정 유저의 complaintList를 가져오기 요청\r\nexport async function getUserPostList(userNo) {\r\n  try { \r\n    const response = await api.get(`/auth/userpostlist/${userNo}`);\r\n    console.log(userNo);\r\n    console.log(\"you can use getUserPostList\", response.data);\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error(err); // 에러를 콘솔에 출력\r\n  }\r\n}\r\n\r\n//게시글 추가 및 \r\nexport async function insertPostAndKeyword(postData, keywordData) {\r\n  const formData = new FormData();\r\n  formData.append('post', new Blob([JSON.stringify(postData)], { type: 'application/json' }));\r\n  formData.append('postkeyword', new Blob([JSON.stringify(keywordData)], { type: 'application/json' }));\r\n\r\n  try {\r\n    const response = await api.post('/auth/insert', formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error(err);\r\n    if (err.response && err.response.status === 401) {\r\n      // 로그인 페이지로 이동\r\n      alert(\"로그인 후 이용하실 수 있습니다.\")\r\n      router.push({ path: '/login' });\r\n    }\r\n    throw err;\r\n  }\r\n} \r\n\r\n// 이미지 저장요청\r\nexport async function saveImage(formData) {\r\n  try {\r\n    const response = await api.post('/auth/upload-image', formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n    console.log('서버 응답:', response.data);\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error('이미지 업로드 중 오류 발생:', err); // 에러를 콘솔에 출력\r\n  }\r\n}\r\n\r\n// 민원글 번호에 따른 민원처리정보 한개 가져오기 요청\r\nexport async function getProcessingByNo(processingComplaintNo) {\r\n  try {\r\n    const response = await axios.get(`/api/complaint/processing/${processingComplaintNo}`);\r\n    console.log(\"API response:\", response);\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error(err); // 에러를 콘솔에 출력\r\n  }\r\n}\r\n\r\n// 민원처리정보 작성 요청\r\nexport async function insertProcessing(data) {\r\n  try {\r\n    const response = await axios.post('/api/complaint/insertProcessing', data);\r\n    console.log('응답 상태 코드:', response.status); // 응답 상태 코드 확인\r\n    console.log('민원처리정보 작성에 대한 응답 데이터:', response.data); \r\n    return response.data;\r\n  } catch (err) {\r\n    console.error('API 요청 중 오류 발생:', err);\r\n    throw err;\r\n  }\r\n}\r\n\r\n// 민원처리정보 업데이트\r\nexport async function updateProcessingByNo(processingComplaintNo, data) {\r\n  try {\r\n    const response = await axios.patch(`/api/complaint/updateProcessing/${processingComplaintNo}`, data);\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n}","<template>\r\n  <div class=\"container\">\r\n    <!-- Post Card -->\r\n    <div class=\"card\">\r\n      <div class=\"card-body p-lg-5 pb-lg-0\">\r\n        <div class=\"d-flex flex-column flex-md-row\">\r\n          <!-- Post Content -->\r\n          <div class=\"flex-md-grow-1 me-md-4\">\r\n            <div class=\"mb-2\">\r\n              <div class=\"d-flex flex-wrap mb-3 align-items-center\">\r\n                <!-- Back Button -->\r\n                <button class=\"styled-button\" @click=\"goToMainPage()\">뒤로가기</button>\r\n              </div>\r\n\r\n              <div class=\"mb-3 mt-4\">\r\n                <h1 class=\"text-gray-900 fs-4 mb-3\">\r\n                  위험신고내용\r\n                </h1>\r\n                <!-- START :: 위험신고내용 -->\r\n                <div class=\"container table-container\">\r\n                  <!-- 첫 번째 줄: 제목 -->\r\n                  <div class=\"row\">\r\n                    <div class=\"col-2 table-header\">\r\n                      제목\r\n                    </div>\r\n                    <div class=\"col-10 table-cell\">\r\n                      {{ complaintone.complaintTitle }}\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <!-- 두 번째 줄: 신고일시 / 신고유형 -->\r\n                  <div class=\"row\">\r\n                    <div class=\"col-2 table-header\">\r\n                      신고일시\r\n                    </div>\r\n                    <div class=\"col-4 table-cell\">\r\n                      {{ complaintone.createdAt }}\r\n                    </div>\r\n                    <div class=\"col-2 table-header\">\r\n                      신고유형\r\n                    </div>\r\n                    <div class=\"col-4 table-cell\">\r\n                      {{ complaintone.complaintType }}\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <!-- 세 번째 줄: 산이름 -->\r\n                  <div class=\"row\">\r\n                    <div class=\"col-2 table-header\">\r\n                      산이름\r\n                    </div>\r\n                    <div class=\"col-10 table-cell\">\r\n                      {{ complaintone.mountainName }}\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <!-- 네 번째 줄: 내용 -->\r\n                  <div class=\"row lastrow mb-2\">\r\n                    <div class=\"col-2 table-header\">\r\n                      내용\r\n                    </div>\r\n                    <div class=\"col-10 table-cell\">\r\n                      {{ complaintone.complaintContent }}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <!-- END :: 위험신고내용 -->\r\n              </div>\r\n\r\n              <div class=\"mb-5 mt-5\">\r\n                <h1 class=\"text-gray-900 fs-4 mb-3\">\r\n                  처리결과\r\n                </h1>\r\n                <!-- START :: 처리결과내용 -->\r\n                <div class=\"container table-container\">\r\n                  <!-- 첫 번째 줄: 처리내용 -->\r\n                  <div class=\"row\">\r\n                    <div class=\"col-2 table-header\">\r\n                      처리내용\r\n                    </div>\r\n                    <div class=\"col-10 table-cell\">\r\n                      {{ processingone?.processingContent ? processingone.processingContent : '처리전입니다.' }}\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <!-- 두 번째 줄: 처리기관 -->\r\n                  <div class=\"row lastrow mb-2\">\r\n                    <div class=\"col-2 table-header\">\r\n                      처리기관\r\n                    </div>\r\n                    <div class=\"col-10 table-cell\">\r\n                      {{ processingone?.processor ? processingone.processor : '처리전입니다.'}}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <!-- END :: 처리결과내용 -->\r\n              </div>\r\n\r\n              <!-- Image Section -->\r\n              <div class=\"d-flex justify-content-center align-items-center\">\r\n                <div class=\"col-5 image-container mb-2 d-flex justify-content-center position-relative\">\r\n                  <img\r\n                    :src=\"complaintone.complaintImg\"\r\n                    alt=\"Complaint Image\"\r\n                    class=\"img-fluid\"\r\n                  />\r\n                  <!-- 전 삼각형 -->\r\n                  <div class=\"triangle\">\r\n                    <span class=\"triangle-text\">전</span>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-1 ms-1\">\r\n                  <i class=\"bi bi-chevron-double-right fs-1 ms-4\" style=\"color: gray;\"></i>\r\n                </div>\r\n                <div class=\"col-5 image-container mb-2 d-flex justify-content-center\">\r\n                  <img\r\n                    :src=\"processingone?.processingImg ? processingone.processingImg : '/images/normal.png'\"\r\n                    alt=\"Processing Image\"\r\n                    class=\"img-fluid\"\r\n                  />\r\n                  <!-- 후 삼각형 -->\r\n                  <div class=\"triangle2\">\r\n                    <span class=\"triangle-text\">후</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              <hr class=\"separator-line mt-5 mb-4\" />\r\n\r\n              <!-- Post Content -->\r\n              <div class=\"mb-4\">\r\n                <button v-if=\"!processingone?.processingContent\" class=\"styled-button2 me-2\" @click=\"goToProcessing()\">\r\n                처리결과등록하기</button>\r\n                <button v-else class=\"styled-button2 me-2\" @click=\"showUpdateModal()\">\r\n                처리결과수정하기\r\n                </button>\r\n              </div>\r\n              \r\n            </div>\r\n          </div>\r\n          <!-- End Post Content -->\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- //==== 민원처리정보 수정 모달 START ====// -->\r\n  <div class=\"modal fade\" id=\"processing_update\" tabindex=\"-1\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-dialog-centered\">\r\n      <div class=\"modal-content rounded\">\r\n        <div class=\"modal-header pb-0 border-0 justify-content-end\">\r\n          <!--begin::닫기 아이콘-->\r\n          <div class=\"\" data-bs-dismiss=\"modal\">\r\n            <button class=\"btn btn-sm btn-success\">닫기</button>\r\n          </div>\r\n          <!--end::닫기 아이콘-->\r\n        </div>\r\n        <div class=\"modal-body scroll-y px-10 px-lg-15 pt-0 pb-15\">\r\n          <form id=\"kt_modal_new_target_form\" class=\"form\">\r\n            <!--begin::제목-->\r\n            <div class=\"mb-8 text-center\">\r\n              <!--begin::Title-->\r\n              <h1 class=\"mb-4\">처리결과 수정</h1>\r\n              <!--end::Title-->\r\n              <!--begin::Description-->\r\n              <div class=\"text-muted fs-6\">내용, 결과, 이미지를 수정하세요.</div>\r\n              <!--end::Description-->\r\n            </div>\r\n            <!--end::제목-->\r\n\r\n            <!--begin::처리내용 입력상자-->\r\n            <div class=\"d-flex flex-column mb-8 fv-row mt-3\">\r\n              <label class=\"d-flex align-items-center fs-6 fw-semibold mb-2\">\r\n                <span class=\"required\">처리내용</span>\r\n              </label>\r\n              <input type=\"text\" class=\"form-control form-control-solid\" name=\"target_content\" v-model=\"contentInput\" />\r\n            </div>\r\n            <!--end::처리내용 입력상자-->\r\n\r\n            <!--begin::처리기관 입력상자-->\r\n            <div class=\"d-flex flex-column mb-8 fv-row\">\r\n              <label class=\"d-flex align-items-center fs-6 fw-semibold mb-2\">\r\n                <span class=\"required\">처리기관</span>\r\n              </label>\r\n              <input type=\"text\" class=\"form-control form-control-solid\" name=\"target_processor\" v-model=\"processorInput\" />\r\n            </div>\r\n            <!--end::처리기관 입력상자-->\r\n\r\n            <!-- 이미지 선택 START -->\r\n            <div class=\"d-flex flex-column mb-8 fv-row\">\r\n              <label class=\"d-flex align-items-center fs-6 fw-semibold mb-2\">\r\n                <span class=\"required\">처리 후 파일 선택</span>\r\n              </label>\r\n              <input type=\"file\" id=\"image\" @change=\"onFileChange\" ref=\"image\" />\r\n            </div>\r\n            <!-- 이미지 선택 END -->\r\n\r\n            <!--begin::하단버튼-->\r\n            <div class=\"text-center mt-3\">\r\n              <button type=\"button\" class=\"btn btn-success\" @click.prevent=\"updateProcessing(processingone.processingComplaintNo, $event)\">저장</button>\r\n              <button type=\"reset\" class=\"btn btn-light ms-3\" @click=\"clearAll()\">모두 지우기</button>\r\n            </div>\r\n            <!--end::하단버튼-->\r\n          </form>\r\n          <!--end:Form-->\r\n        </div>\r\n        <!--end::Modal body-->\r\n      </div>\r\n      <!--end::Modal content-->\r\n    </div>\r\n  </div>\r\n  <!-- //==== 민원처리정보 수정 모달 END ====// -->\r\n\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from \"vue\";\r\nimport router from \"@/router/index.js\";\r\nimport { getComplaintByNo, getProcessingByNo, updateProcessingByNo } from \"@/api/complaint\";\r\nimport { Modal } from 'bootstrap';\r\nimport axios from 'axios';\r\n\r\nlet complaintNo = 0;\r\n\r\n// onMounted로 컴포넌트가 마운트된 후에 실행되도록 설정\r\nonMounted(async () => {\r\n  complaintNo = sessionStorage.getItem(\"complaintNo\");\r\n  await init(complaintNo);\r\n});\r\n\r\n// 민원, 민원처리정보 한개씩 가져옴\r\nlet complaintone = ref({});\r\nlet processingone = ref({});\r\nlet userInstitution = '';\r\n\r\nasync function init(complaintNo) {\r\n  try {\r\n    // 비동기로 민원글 정보를 가져옴\r\n    const response = await getComplaintByNo(complaintNo);\r\n    complaintone.value = response;\r\n    console.log(\"민원 가져온거\", complaintone.value);\r\n    const response2 = await getProcessingByNo(complaintNo);\r\n    processingone.value = response2;\r\n    console.log(\"민원처리정보 가져온거\", processingone.value);\r\n    userInstitution = localStorage.getItem('userInstitution');\r\n  } catch (error) {\r\n    console.error(\"민원글을 가져오는 중 오류 발생:\", error);\r\n  }\r\n}\r\n\r\nlet updateProcessingModal;\r\n\r\n// 처리결과정보 수정에 필요한 변수 생성\r\nconst processorInput = ref(\"\");\r\nconst contentInput = ref(\"\");\r\n\r\n// 처리결과정보 수정하기 버튼 - 모달 열기\r\nfunction showUpdateModal() {\r\n\r\n  window.scrollTo({\r\n    top: 0,\r\n    behavior: 'smooth'  // 부드럽게 스크롤하려면 'smooth', 즉시 이동하려면 'auto'\r\n    });\r\n\r\n  // 대화상자에 입력값 넣어주기\r\n  contentInput.value = processingone.value.processingContent;\r\n  processorInput.value = processingone.value.processor;\r\n\r\n  // 대화상자 띄우기\r\n  const elem = document.querySelector('#processing_update');\r\n  updateProcessingModal = new Modal(elem);\r\n  updateProcessingModal.show();\r\n}\r\n\r\n\r\n// 민원 수정하기 요청\r\nasync function updateProcessing(processingComplaintNo, event) {\r\n\r\n  event.preventDefault();\r\n  console.log(\"Update processing triggered\");\r\n\r\n  let imagePath = await uploadImage();\r\n  if(imagePath == null) {\r\n    imagePath = processingone.value.processingImg;\r\n  }\r\n\r\n  const data = {\r\n    processingContent: contentInput.value,\r\n    processor: processorInput.value,\r\n    processingComplaintNo: processingComplaintNo,\r\n    processingImg: imagePath || ''\r\n  }\r\n  processingone.value.processingContent = contentInput.value;\r\n  processingone.value.processor = processorInput.value;\r\n  processingone.value.processingImg = imagePath;\r\n\r\n  updateProcessingByNo(processingComplaintNo, data);\r\n  updateProcessingModal.hide();\r\n\r\n  //router.replace({path:'/complaintListMobile'});\r\n\r\n}\r\n\r\n// ==== 이미지 관련 코드 ==== //\r\n// 이미지 주소로 넘기기\r\nconst selectedFile = ref(null);\r\n\r\nconst onFileChange = (event) => {\r\n  selectedFile.value = event.target.files[0];\r\n};\r\n\r\nconst uploadImage = async () => {\r\n  if (!selectedFile.value) {\r\n    return null; // 이미지가 없으면 null 반환\r\n  }\r\n\r\n  const formData = new FormData();\r\n  formData.append('file', selectedFile.value);\r\n\r\n  try {\r\n    const response = await axios.post(\r\n      '/api/complaint/upload',\r\n      formData,\r\n      {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      }\r\n    );\r\n    return response.data; // 서버에서 반환한 이미지 경로\r\n  } catch (error) {\r\n    console.error('Error uploading image', error);\r\n    return null;\r\n  }\r\n};\r\n\r\n\r\n// 민원 목록 페이지로 이동\r\nfunction goToMainPage() {\r\n  router.replace({ path: \"/manageList\" });\r\n}\r\n\r\n// 민원처리정보 등록 페이지로 이동\r\nfunction goToProcessing() {\r\n  console.log('실행')\r\n  if(userInstitution.trim().toLowerCase() !== complaintone.value.institution.trim().toLowerCase()) {\r\n    alert('담당 업무만 처리가능합니다!');\r\n    return;\r\n  }\r\n  router.replace({ path: \"/processing\"});\r\n}\r\n\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.map-container {\r\n  width: 100%;\r\n  height: 300px; /* 지도의 높이를 명확하게 지정하세요 */\r\n  border: 1px solid #ccc;\r\n}\r\n\r\nhr.separator-line {\r\n  border: 1px solid #ccc;\r\n  margin: 10px 0;\r\n  width: 100%;\r\n}\r\n\r\n.card {\r\n  cursor: pointer;\r\n  margin-top: 10px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.image-container {\r\n  width: 500px;\r\n  height: 350px;\r\n  position: relative;\r\n  overflow: hidden; /* 이미지가 틀을 넘어가면 잘리게 */\r\n}\r\n\r\n.fixed-size-image {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover; /* 이미지 비율 유지하면서 틀에 맞추기 */\r\n}\r\n\r\n\r\nimg {\r\n  display: block;\r\n  width: 100%; /* 이미지가 컨테이너에 맞게 사이즈 조정 */\r\n  height: auto; /* 원본 비율을 유지 */\r\n}\r\n\r\n.styled-button {\r\n  background: linear-gradient(#d3d3d3, #a9a9a9);\r\n  color: white;\r\n  padding: 8px 16px;\r\n  border: none;\r\n  border-radius: 25px;\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.styled-button2 {\r\n  background: linear-gradient(#55995e, #3d7935);\r\n  color: white;\r\n  padding: 8px 16px;\r\n  border: none;\r\n  border-radius: 25px;\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.styled-button:hover {\r\n  background: linear-gradient(#a9a9a9, #808080);\r\n}\r\n\r\n/* 표 선 관련 스타일 */\r\n.table-container {\r\n  border-collapse: collapse;\r\n  border-top: 3px solid black; /* 전체 표 맨 위에만 진한 선 */\r\n}\r\n\r\n.table-header {\r\n  background-color: #f0f0f0; /* 회색 배경 */\r\n  padding: 10px;\r\n  padding-left: 20px;\r\n  text-align: left;\r\n}\r\n\r\n.table-cell {\r\n  padding: 10px;\r\n  padding-left: 20px;\r\n}\r\n\r\n.container .row {\r\n  border-bottom: 1px solid lightgray; /* 줄 사이 연한 선 */\r\n}\r\n\r\n.row:last-child {\r\n  border-bottom: 1px solid black; /* 마지막 줄 기본 선 */\r\n}\r\n\r\n.triangle {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 0;\r\n  height: 0;\r\n  border-right: 55px solid transparent; /* 삼각형의 크기 및 투명한 왼쪽 */\r\n  border-top: 55px solid gray; /* 삼각형의 색상 및 크기 */\r\n  z-index: 1; /* 삼각형이 이미지 위에 나오도록 설정 */\r\n}\r\n\r\n.triangle2 {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 0;\r\n  height: 0;\r\n  border-right: 55px solid transparent; /* 삼각형의 크기 및 투명한 왼쪽 */\r\n  border-top: 55px solid blue; /* 삼각형의 색상 및 크기 */\r\n  z-index: 1; /* 삼각형이 이미지 위에 나오도록 설정 */\r\n}\r\n\r\n.triangle-text {\r\n  position: absolute;\r\n  bottom: 26px; /* 텍스트의 세로 위치 */\r\n  left: 10px; /* 텍스트의 가로 위치 */\r\n  color: white;\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n  z-index: 2; /* 텍스트가 삼각형 위에 나오도록 설정 */\r\n}\r\n</style>","import script from \"./ManageInfoView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ManageInfoView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ManageInfoView.vue?vue&type=style&index=0&id=4f7a1a3d&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-4f7a1a3d\"]])\n\nexport default __exports__"],"names":["apiInstance","instance","axios","create","baseURL","headers","api","async","getComplaintList","response","get","console","log","data","err","error","getRecentComplaintList","getComplaintByUserId","userId","getComplaintListByInst","institution","getPathList","insertComplaint","post","status","getComplaintByNo","complaintNo","getUserById","getCourseById","courseId","deleteComplaintByNo","delete","updateComplaintByNo","patch","getUserPostList","userNo","getProcessingByNo","processingComplaintNo","insertProcessing","updateProcessingByNo","onMounted","sessionStorage","getItem","init","updateProcessingModal","complaintone","ref","processingone","userInstitution","value","response2","localStorage","processorInput","contentInput","showUpdateModal","window","scrollTo","top","behavior","processingContent","processor","elem","document","querySelector","Modal","show","updateProcessing","event","preventDefault","imagePath","uploadImage","processingImg","hide","selectedFile","onFileChange","target","files","formData","FormData","append","goToMainPage","router","replace","path","goToProcessing","trim","toLowerCase","alert","__exports__"],"sourceRoot":""}