{"version":3,"file":"js/614.aaf66712.js","mappings":"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","sources":["webpack://frontend/./src/components/MobileFooterView5.vue","webpack://frontend/./src/components/MobileFooterView5.vue?7d77","webpack://frontend/./src/views/MobileCommunityView.vue","webpack://frontend/./src/views/MobileCommunityView.vue?4d63"],"sourcesContent":["<template>\r\n  <div id=\"mobileFooter\">\r\n    <!-- 코스 아이콘 -->\r\n    <div class=\"footer-category\" @click=\"gotoMobileCourse()\" style=\"margin-right: 10px;\">\r\n      <img src=\"/images/코스2.png\" alt=\"코스 아이콘\" style=\"filter: grayscale(100%) brightness(0%);\">\r\n      <p style=\"\">코스</p>\r\n    </div>\r\n\r\n    <!-- 등산 아이콘 -->\r\n    <div class=\"footer-category\" @click=\"gotoMobileRecoding()\" style=\"margin-right: 10px;\">\r\n      <img src=\"/images/HikingIcon.png\" alt=\"등산 아이콘\" style=\"filter: grayscale(100%) brightness(0%);\">\r\n      <p style=\"\">등산</p>\r\n    </div>\r\n\r\n    <!-- 홈 아이콘 -->\r\n    <div class=\"footer-category home\" @click=\"gotoHome()\">\r\n      <img src=\"/images/홈.png\" alt=\"홈 아이콘\" style=\"filter: grayscale(100%) brightness(0%);\">\r\n      <p style=\"\">홈</p>\r\n    </div>\r\n\r\n    <!-- 민원 신고 아이콘 -->\r\n    <div class=\"footer-category\" @click=\"gotoMobileComplaint()\" style=\"margin-left: 10px;\">\r\n      <img src=\"/images/위험신고.png\" alt=\"민원 신고 아이콘\" style=\"filter: grayscale(100%) brightness(0%);\">\r\n      <p style=\"\">민원신고</p>\r\n    </div>\r\n\r\n    <!-- 커뮤니티 아이콘 -->\r\n    <div class=\"footer-category\" @click=\"gotoMobileCommunity()\" style=\"margin-left: 10px;\">\r\n      <img src=\"/images/커뮤니티.gif\" alt=\"커뮤니티 아이콘\" style=\"filter: hue-rotate(280deg); width: 45px; height: 45px;\">\r\n      <div style=\"margin: 0;  font-size: 13px; line-height: 1.2; text-align: center; font-family: 'TheJamsil4Bold'; font-weight: 500;\">커뮤니티</div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\n\r\nfunction gotoHome() {\r\n  window.location.href = '/mobilemainview';\r\n}\r\n\r\nfunction gotoMobileCourse() {\r\n  window.location.href = '/mobilecourseview';\r\n}\r\n\r\nfunction gotoMobileCommunity() {\r\n  window.location.href = '/mobilecommunity';\r\n}\r\n\r\nfunction gotoMobileComplaint() {\r\n  window.location.href = '/complaintListMobile';\r\n}\r\n\r\nfunction gotoMobileRecoding() {\r\n  window.location.href = '/record';\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n@font-face {\r\n  font-family: 'TheJamsil5Bold';\r\n  src: url('https://fastly.jsdelivr.net/gh/projectnoonnu/noonfonts_2302_01@1.0/TheJamsil5Bold.woff2') format('woff2');\r\n  font-weight: 700;\r\n  font-style: normal;\r\n}\r\n\r\nh1,\r\nh2,\r\nh3,\r\ndiv,\r\n.btn-group .btn,\r\np {\r\n  /* 특정 요소에 폰트 적용 */\r\n  font-family: \"TheJamsil5Bold\", sans-serif !important;\r\n}\r\n\r\n#mobileFooter {\r\n  position: fixed;\r\n  height: 70px; /* 푸터 높이 */\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  background-color: #ffffff;\r\n  display: flex;\r\n  justify-content: space-between; /* 간격 균등 배치 */\r\n  align-items: center;\r\n  padding: 0 5px; /* 좌우 여백 */\r\n  box-shadow: 0 -2px 4px rgba(0, 0, 0, 0.1);\r\n  z-index: 1000;\r\n}\r\n\r\n.footer-category {\r\n  display: flex;\r\n  flex-direction: column; /* 아이콘과 텍스트 세로 배치 */\r\n  align-items: center; /* 수평 중앙 정렬 */\r\n  text-align: center;\r\n  font-family: 'TheJamsil4Bold';\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  flex: 1; /* 각 버튼의 동일한 크기 */\r\n}\r\n\r\n.footer-category img {\r\n  width: 30px; /* 아이콘 크기 증가 */\r\n  height: 30px;\r\n  margin-bottom: 5px; /* 아이콘과 텍스트 간 간격 */\r\n}\r\n\r\n.footer-category p {\r\n  margin: 0; /* 텍스트 간 여백 제거 */\r\n  font-size: 13px;\r\n  line-height: 1.2;\r\n  text-align: center;\r\n}\r\n\r\n</style>\r\n","import script from \"./MobileFooterView5.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./MobileFooterView5.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./MobileFooterView5.vue?vue&type=style&index=0&id=7aa484b0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-7aa484b0\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"container\">\r\n    <!-- 모바일 헤더 -->\r\n    <MobileHeaderView class=\"header\" />\r\n    <!-- 스위치 버튼 (안전 게시물/모든 게시물 보기) -->\r\n    <div class=\"switch-container\">\r\n      <label class=\"switch\">\r\n        <input type=\"checkbox\" v-model=\"communityState\" @change=\"toggleCommunityState\" />\r\n        <span class=\"slider\">\r\n          <span class=\"switch-text\">{{ communityState ? \"안전\" : \"게시판\" }}</span>\r\n        </span>\r\n      </label>\r\n    </div>\r\n\r\n    <div class=\"content\">\r\n      <div class=\"col-md-12\">\r\n        <!-- 글쓰기 버튼 -->\r\n        <div class=\"write-button-container fixed-button-container\">\r\n          <button class=\"btn btn-lg custom-btn2\" @click=\"goToWritePost()\">\r\n            <img src=\"/images/글쓰기.png\" width=\"35px\" height=\"auto\" />\r\n          </button>\r\n        </div>\r\n\r\n        <!-- 게시물 카드 리스트 -->\r\n        <div v-for=\"community in communityList\" :key=\"community.communityPk\" class=\"card shadow-sm\">\r\n          <div class=\"scrollable-content\">\r\n            <div class=\"community-item\">\r\n              <div class=\"d-flex align-items-center\" style=\"padding: 6px;\">\r\n                <img src=\"/images/profile.png\" alt=\"프로필 사진\" class=\"profile-image\" />\r\n                <p class=\"text-muted\" id=\"userNickName\" style=\"margin: 2px;\">{{ community.userNickName }}</p>\r\n              </div>\r\n\r\n              <div class=\"image-map-container\">\r\n                <img\r\n                  v-if=\"community.communityUrl\"\r\n                  :src=\"community.communityUrl\"\r\n                  alt=\"게시글 이미지\"\r\n                  class=\"img-fluid\"\r\n                  style=\"width: 500px; height: 225px; object-fit: cover;\"\r\n                  @click=\"goToCommunityDetail(community)\"\r\n                />\r\n                <!-- 지도 표시 -->\r\n                <div\r\n                  v-if=\"community.showMap\"\r\n                  :id=\"'map-' + community.communityPk\"\r\n                  class=\"map-overlay\"\r\n                  @click=\"goToMapDetail(community.courseName)\"\r\n                  style=\"cursor: pointer;\"\r\n                ></div>\r\n              </div>\r\n\r\n              <div class=\"d-flex align-items-center\" style=\"border-bottom: solid 1px black;\">\r\n                <div class=\"d-flex justify-content-between align-items-center\" id=\"my-container\">\r\n                  <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    width=\"19\"\r\n                    height=\"19\"\r\n                    fill=\"currentColor\"\r\n                    style=\"margin-left: 15px;\"\r\n                    class=\"bi bi-heart like-icon\"\r\n                    @click=\"Like(community.communityPk)\"\r\n                    :class=\"{ liked: community.liked }\"\r\n                    viewBox=\"0 0 16 16\"\r\n                  >\r\n                    <path\r\n                      d=\"m8 2.748-.717-.737C5.6.281 2.514.878 1.4 3.053c-.523 1.023-.641 2.5.314 4.385.92 1.815 2.834 3.989 \r\n                      6.286 6.357 3.452-2.368 5.365-4.542 6.286-6.357.955-1.886.838-3.362.314-4.385C13.486.878 10.4.28 8.717 \r\n                      2.01zM8 15C-7.333 4.868 3.279-3.04 7.824 1.143q.09.083.176.171a3 3 0 0 1 .176-.17C12.72-3.042 23.333 4.867 8 15\"\r\n                      :class=\"{ 'text-danger': community.liked }\"\r\n                    />\r\n                  </svg>\r\n                  <span class=\"like-count ms-2\" style=\"margin-right: 5px;\">{{ community.likes }}</span>\r\n                  <span class=\"comment-icon ms-2\">\r\n                    <svg\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      width=\"19\"\r\n                      height=\"19\"\r\n                      fill=\"currentColor\"\r\n                      class=\"bi bi-chat-left-dots\"\r\n                      viewBox=\"0 0 16 16\"\r\n                    >\r\n                      <path\r\n                        d=\"M14 1a1 1 0 0 1 1 1v8a1 1 0 0 1-1 1H4.414A2 2 0 0 0 3 11.586l-2 2V2a1 1 0 0 1 1-1zM2 0a2 2 0 0 0-2 2v12.793a.5.5 0 0 0 .854.353l2.853-2.853A1 1 0 0 1 4.414 12H14a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2z\"\r\n                      />\r\n                      <path\r\n                        d=\"M5 6a1 1 0 1 1-2 0 1 1 0 0 1 2 0m4 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0m4 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0\"\r\n                      />\r\n                    </svg>\r\n                  </span>\r\n                  <span class=\"comment-count ms-2\">{{ community.commentCount }}</span>\r\n                  <span\r\n                    ><img\r\n                      src=\"/images/공유.png\"\r\n                      style=\"width: 18px; height: 18px; margin-left: 10px; margin-bottom: 1px\"\r\n                  /></span>\r\n                  <span class=\"date-overlay\" id=\"communityRegDate\">{{ community.communityRegDate }}</span>\r\n                </div>\r\n              </div>\r\n\r\n              <div style=\"margin-bottom: 15px; padding: 5px;\">\r\n                <span id=\"userNickName2\"><img src=\"/images/등산객.png\" width=\"16px;\">{{ community.userNickName }}</span>\r\n                <div>\r\n                  <!-- 텍스트 영역 -->\r\n                  <div class=\"card-text\" :class=\"{ expanded: community.expanded }\" id=\"cardContent\">\r\n                    {{ community.communityBody }}\r\n                  </div>\r\n                  <!-- '...' 버튼 -->\r\n                  <button\r\n                    v-if=\"!community.expanded && community.communityBody.length > 50\"\r\n                    @click=\"toggleExpand(community)\"\r\n                    class=\"show-more-btn\"\r\n                  >\r\n                    더 보기\r\n                  </button>\r\n                  <!-- '닫기' 버튼 -->\r\n                  <button\r\n                    v-if=\"community.expanded\"\r\n                    @click=\"toggleExpand(community)\"\r\n                    class=\"show-more-btn\"\r\n                  >\r\n                    닫기\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <MobileFooterView5 class=\"footer\"></MobileFooterView5>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script setup>\r\n/* global kakao */\r\nimport MobileHeaderView from '@/components/MobileHeaderView.vue';\r\nimport MobileFooterView5 from \"@/components/MobileFooterView5.vue\";\r\nimport { ref, computed, onMounted, nextTick } from 'vue';\r\nimport axios from 'axios';\r\nimport router from '@/router/index.js';\r\n\r\n// API에서 게시글 목록을 가져오는 함수\r\nconst communityList = ref([]);\r\n\r\n// 커뮤니티별 지도를 저장할 객체\r\nconst communityMap = ref({});\r\n\r\n// 검색어를 저장할 변수\r\nconst searchQuery = ref('');\r\n\r\n// PMNTN_NM별 데이터를 저장하는 객체\r\nconst courseData = ref({});\r\n\r\nconst course = ref([]);\r\n\r\nconst communityState = ref(false);\r\n\r\nconst showMap = ref('photo'); // 기본 상태를 'default'로 설정\r\n\r\nconst toggleCommunityState = () => {\r\n  if (communityState.value) {\r\n    getSafeList();\r\n  } else {\r\n    getAllList();\r\n  }\r\n};\r\n\r\nconst getAllList = async () => {\r\n  try {\r\n    await getList(); // 모든 게시물 로드\r\n    communityState.value = false;\r\n\r\n    await nextTick(); // DOM 업데이트 후 실행\r\n    communityList.value.forEach(community => {\r\n      drawCourseOnMap(community.courseName, community.communityPk, community.lat, community.lng);\r\n    });\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nconst getSafeList = async () => {\r\n  try {\r\n    const response = await axios.post('/api/safeList');\r\n    communityList.value = response.data.map(community => ({\r\n      ...community,\r\n      showMap: true,\r\n      likes: community.likes || 0,\r\n      commentCount: community.commentCount || 0,\r\n      courseName: community.courseName,\r\n      lat: community.lat || community.latitude,\r\n      lng: community.lng || community.longitude\r\n    }));\r\n\r\n    await nextTick(); // DOM 업데이트 후 실행\r\n    communityList.value.forEach(community => {\r\n      drawCourseOnMap(community.courseName, community.communityPk, community.lat, community.lng);\r\n    });\r\n    communityState.value = true;\r\n  } catch (error) {\r\n    console.error(\"Error during safe list loading:\", error);\r\n  }\r\n};\r\n\r\n// 검색 결과를 필터링하는 computed\r\nconst filteredCommunityList = computed(() => {\r\n  return communityList.value.filter(community => {\r\n    return community.communityBody.includes(searchQuery.value) ||\r\n      community.userNickName.includes(searchQuery.value);  // 제목이나 내용에서 검색어를 포함하는 게시글만 표시\r\n  });\r\n});\r\n\r\n\r\n// 글쓰기 페이지로 이동하는 함수\r\nconst goToWritePost = () => {\r\n  router.push({ path: '/writePost' }); // 글쓰기 페이지 경로로 변경\r\n};\r\n\r\n// 상세 페이지로 이동하는 함수 추가\r\nconst goToCommunityDetail = (community) => {\r\n  router.push({ path: `/communityDetailView`, query: { community: JSON.stringify(community) } });\r\n};\r\n\r\n\r\nfunction createMap(containerId, startLat, startLng) {\r\n  const container = document.getElementById(containerId);\r\n  if (!container) {\r\n    console.error(`Element with ID ${containerId} not found`);\r\n    return;\r\n  }\r\n\r\n  const options = {\r\n    center: new kakao.maps.LatLng(startLat, startLng),\r\n    level: 6,\r\n  };\r\n\r\n  // 지도 객체 생성\r\n  const map = new kakao.maps.Map(container, options);\r\n\r\n  // 생성된 지도를 communityMap 객체에 저장\r\n  communityMap.value[containerId] = map;\r\n\r\n  return map;\r\n}\r\n\r\n// 카드 클릭 시 호출되는 함수\r\nconst goToMapDetail = async (courseName) => {\r\n  try {\r\n    // 좋아요 기능이 필요하다면 별도의 함수로 호출\r\n    const response = await axios.post('/api/course/byName', {\r\n      courseName: courseName\r\n    });\r\n\r\n    course.value = response.data;\r\n\r\n    // 페이지 이동\r\n    router.push({\r\n      name: 'mobilemountaindetailview',\r\n      query: {\r\n        course: JSON.stringify(course.value),\r\n        mapType: showMap.value, // 현재 지도 상태 전달\r\n      },\r\n    });\r\n  } catch (error) {\r\n    console.error(\"Error during like or navigation:\", error);\r\n  }\r\n};\r\n\r\n\r\n// 처음에 모든 GeoJSON 데이터를 불러와 PMNTN_NM을 키로 하는 객체로 저장\r\nconst loadCourseData = async () => {\r\n  try {\r\n    const response = await axios.get('/data/인왕산ele copy.geojson');\r\n    const geoJsonData = response.data;\r\n\r\n    geoJsonData.features.forEach(feature => {\r\n      const courseName = feature.properties.PMNTN_NM;\r\n      const coordinates = feature.geometry.coordinates\r\n        .reduce((acc, lineString) => acc.concat(lineString.map(coord => ({ lat: coord[1], lng: coord[0] }))), []);\r\n\r\n      // 누적 방식으로 각 코스의 좌표를 추가\r\n      if (!courseData.value[courseName]) {\r\n        courseData.value[courseName] = [];\r\n      }\r\n      courseData.value[courseName].push(...coordinates);\r\n    });\r\n\r\n    console.log(\"Course Data Loaded:\", courseData.value);\r\n  } catch (error) {\r\n    console.error(\"GeoJSON 데이터를 불러오는 중 오류 발생:\", error);\r\n  }\r\n};\r\n\r\nconst drawCourseOnMap = (courseName, communityPk, lat, lng) => {\r\n  const mapId = `map-${communityPk}`;\r\n  resetMap(mapId); // 지도 초기화\r\n\r\n  // courseData의 키 값 중에서 courseName을 포함하는 키를 찾음\r\n  const matchingCourseKey = Object.keys(courseData.value).find(key =>\r\n    key.includes(courseName)\r\n  );\r\n\r\n  if (!matchingCourseKey) {\r\n    console.error(`Coordinates not found for course: ${courseName}`);\r\n    return;\r\n  }\r\n\r\n  const coordinates = courseData.value[matchingCourseKey];\r\n  const linePath = coordinates.map(coord => new kakao.maps.LatLng(coord.lat, coord.lng));\r\n\r\n  let map = communityMap.value[mapId];\r\n  if (!map) {\r\n    map = createMap(mapId, lat, lng);\r\n  }\r\n\r\n  if (map) {\r\n    const polyline = new kakao.maps.Polyline({\r\n      path: linePath,\r\n      strokeWeight: 5,\r\n      strokeColor: '#00FF00',\r\n      strokeOpacity: 0.8,\r\n      strokeStyle: 'solid',\r\n    });\r\n    polyline.setMap(map); // 새로운 경로 추가\r\n\r\n    console.log(`Polyline set for course: ${matchingCourseKey}`, polyline.getPath());\r\n  } else {\r\n    console.error(`Map not found for map ID: ${mapId}`);\r\n  }\r\n};\r\n\r\n\r\nfunction resetMap(containerId) {\r\n  const map = communityMap.value[containerId];\r\n  if (map) {\r\n    // 지도 상의 모든 경로 제거\r\n    map.removeOverlayMapTypeId(kakao.maps.MapTypeId.POLYLINE);\r\n    communityMap.value[containerId] = null;\r\n  }\r\n}\r\n\r\n\r\nonMounted(async () => {\r\n  const script = document.createElement('script');\r\n  script.onload = async () => {\r\n    kakao.maps.load(async () => {\r\n      await loadCourseData();  // GeoJSON 데이터를 한 번만 로드\r\n      await getList();  // `communityList` 채운 후\r\n      await nextTick();  // DOM 업데이트 후 drawCourseOnMap 호출\r\n\r\n      communityList.value.forEach(community => {\r\n        drawCourseOnMap(community.courseName, community.communityPk, community.lat, community.lng);\r\n      });\r\n    });\r\n  };\r\n  script.src = 'https://dapi.kakao.com/v2/maps/sdk.js?appkey=333bda7da18df138fb4d9b3e5cf351c4&autoload=false';\r\n  document.head.appendChild(script);\r\n});\r\n\r\nconst getList = async () => {\r\n  try {\r\n    const response = await axios.get('/api/communityList');\r\n    communityList.value = response.data.map(community => ({\r\n      ...community,\r\n      showMap: true,\r\n      likes: community.likes || 0,\r\n      commentCount: community.commentCount || 0,  // 댓글 수 초기화\r\n      courseName: community.courseName,\r\n      lat: community.lat || community.latitude,\r\n      lng: community.lng || community.longitude\r\n    }));\r\n\r\n    // 게시글 목록을 필터링된 목록에 복사\r\n    filteredCommunityList.value = communityList.value;\r\n\r\n    // 게시글을 communityRegDate 기준으로 내림차순 정렬 (날짜와 시간 모두 고려)\r\n    communityList.value.sort((a, b) => new Date(b.communityRegDate) - new Date(a.communityRegDate));\r\n\r\n    await nextTick();  // DOM 업데이트 후 실행\r\n\r\n    communityList.value.forEach(community => {\r\n      const mapId = `map-${community.communityPk}`;\r\n      createMap(mapId, community.lat, community.lng); // 좌표에 맞는 지도 생성\r\n    });\r\n    console.log(communityList.value);\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\n\r\nconst Like = async (communityPk) => {\r\n  try {\r\n    const userId = localStorage.getItem('userId');  // 로그인된 사용자 ID 가져오기\r\n    if (!userId) {\r\n      console.log(\"User not logged in\");\r\n      return;\r\n    }\r\n\r\n    // 서버로 좋아요 상태 변경 요청\r\n    const response = await axios.post('/api/like', {\r\n      userId: userId,\r\n      communityPk: communityPk\r\n    });\r\n\r\n    communityList.value = response.data.map(community => ({\r\n      ...community,\r\n      showMap: true,\r\n      likes: community.likes || 0,\r\n      commentCount: community.commentCount || 0,  // 댓글 수 초기화\r\n      lat: community.lat || community.latitude,\r\n      lng: community.lng || community.longitude\r\n    }));\r\n\r\n\r\n  } catch (error) {\r\n    console.log(\"Error liking the post:\", error);\r\n  }\r\n};\r\n</script>\r\n\r\n\r\n<style scoped>\r\n/* 고정 헤더 스타일 */\r\n.header {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  z-index: 1000;\r\n  background-color: white; /* 헤더 배경색 */\r\n  border-bottom: 1px solid #ddd; /* 헤더 아래 구분선 */\r\n}\r\n\r\n/* 고정 푸터 스타일 */\r\n.footer {\r\n  position: fixed;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  z-index: 1000;\r\n}\r\n\r\n.info-overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: rgba(255, 255, 255, 0.8);\r\n  /* 배경 색 */\r\n  z-index: 2;\r\n  /* 이미지 위에 보이게 */\r\n}\r\n\r\n.styled-button {\r\n  border: 2px solid #4CAF50;\r\n  /* 테두리 추가 */\r\n  border-radius: 5px;\r\n  /* 모서리 둥글게 */\r\n  padding: 8px 16px;\r\n  /* 패딩 조절 */\r\n  transition: background-color 0.3s, transform 0.2s;\r\n  /* 효과 추가 */\r\n}\r\n\r\n#map {\r\n  height: 400px;\r\n  width: 100%;\r\n}\r\n\r\n.container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100vh;\r\n  /* 전체 화면 높이 */\r\n  overflow: visible;\r\n  margin: 0; /* 외부 여백 제거 */\r\n  padding: 0; /* 내부 여백 제거 */\r\n}\r\n\r\n\r\n/* 컨텐츠 영역 스타일 */\r\n.content {\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  margin-top: 65px; /* 헤더 아래 여백 (기존 60px에서 70px로 추가 조정) */\r\n  padding-bottom: 70px; /* 푸터 공간 확보 */\r\n}\r\n\r\n.card {\r\n  margin: 2px auto; /* 카드 간격 */\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); /* 카드 그림자 */\r\n  background-color: #fff; /* 카드 배경색 */\r\n  overflow: hidden;\r\n}\r\n\r\n.card-body {\r\n  flex-grow: 1;\r\n  /* 카드 안의 내용이 남은 공간을 채우도록 설정 */\r\n  display: flex;\r\n  flex-direction: column;\r\n  /* 카드 내용도 세로로 배치 */\r\n  overflow: hidden;\r\n  /* 내용이 넘쳐도 스크롤이 생기지 않도록 설정 */\r\n}\r\n\r\n.scrollable-content {\r\n  max-height: 300%;\r\n  /* 자식 요소의 최대 높이 설정 */\r\n  overflow-y: auto;\r\n  /* 세로 스크롤 가능 */\r\n  background: transparent;\r\n  position: relative;\r\n  /* 그림자 효과가 부모에 영향을 받지 않도록 절대 위치 설정 */\r\n  z-index: 10;\r\n\r\n}\r\n\r\n/* 추가된 스타일 */\r\n.separator-line {\r\n  border: none;\r\n  border-top: 1px solid white;\r\n  /* 구분선 스타일 */\r\n  margin: 20px 0;\r\n  /* 여백 설정 */\r\n}\r\n\r\n/* 웹킷 기반 브라우저용 스크롤바 숨기기 */\r\n.scrollable-content::-webkit-scrollbar {\r\n  width: 0;\r\n  /* 스크롤바 너비를 0으로 설정 */\r\n}\r\n\r\n/* Firefox에서 스크롤바 숨기기 */\r\n.scrollable-content {\r\n  scrollbar-width: none;\r\n  /* Firefox에서 스크롤바 숨기기 */\r\n}\r\n\r\n/* 이미지와 지도 컨테이너 스타일 */\r\n.image-map-container {\r\n  position: relative;\r\n  width: 100%;\r\n\r\n}\r\n\r\n.image-map-container img {\r\n  width: 100%;\r\n  height: auto;\r\n  object-fit: cover;\r\n  margin-bottom: 10px; /* 이미지와 텍스트 사이 간격 */\r\n  border: solid 1px #dedede;\r\n}\r\n\r\n.map-overlay {\r\n  position: absolute;\r\n  /* 절대 위치 지정 */\r\n  bottom: 15px;\r\n  right: 5px;\r\n  /* 컨테이너의 오른쪽에 정렬 */\r\n  width: 80px;\r\n  /* 너비를 원하는 크기로 설정 */\r\n  height: 80px;\r\n  /* 높이를 원하는 크기로 설정 */\r\n  border: 2px solid #dedede;\r\n  /* 테두리 설정 */\r\n  border-radius: 15px;\r\n  /* 테두리 모서리를 둥글게 설정 */\r\n}\r\n\r\n/* 추가된 스타일 */\r\n.separator-line {\r\n  border: none;\r\n  border-top: 1px solid white;\r\n  margin: 20px 0;\r\n}\r\n\r\n@font-face {\r\n  font-family: 'TheJamsil5Bold';\r\n  src: url('https://fastly.jsdelivr.net/gh/projectnoonnu/noonfonts_2302_01@1.0/TheJamsil5Bold.woff2') format('woff2');\r\n  font-weight: 700;\r\n  font-style: normal;\r\n}\r\n\r\nh1,\r\nh2,\r\nh3,\r\np {\r\n  /* 특정 요소에 폰트 적용 */\r\n  font-family: 'TheJamsil5Bold', sans-serif !important;\r\n}\r\n\r\n#cardContent {\r\n  font-family: 'TheJamsil4Bold';\r\n  font-weight: 500;\r\n  font-size: 14px;\r\n  padding: 2px;\r\n}\r\n\r\n#userNickName {\r\n  font-family: 'TheJamsil5Bold';\r\n  font-weight: 600;\r\n  font-size: 14px;\r\n  margin-left: 2;\r\n  /* 왼쪽 정렬 */\r\n  text-align: left;\r\n  /* 왼쪽 정렬 */\r\n  width: 500px;\r\n  /* 고정 너비 설정 */\r\n  min-width: 50px;\r\n  /* 최소 너비 설정 */\r\n  flex: 0 0 15%;\r\n  /* userNickName이 25% 너비를 차지하도록 설정 */\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  word-wrap: break-word;\r\n  /* 긴 단어가 있을 경우 줄바꿈 */\r\n}\r\n\r\n#userNickName2 {\r\n  font-family: 'TheJamsil5Bold';\r\n  margin-left: 2;\r\n  flex: 0 0 15%;\r\n  /* userNickName이 25% 너비를 차지하도록 설정 */\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n  margin-left: 5px;\r\n}\r\n\r\n.info-overlay {\r\n  position: absolute;\r\n  /* 이미지 위에 배치 */\r\n  bottom: 0;\r\n  /* 이미지의 아래쪽에 정렬 */\r\n  left: 0;\r\n  /* 이미지의 왼쪽에 정렬 */\r\n  right: 0;\r\n  /* 이미지의 오른쪽에 정렬 */\r\n  display: flex;\r\n  /* 가로로 나열 */\r\n  justify-content: flex-end;\r\n  /* 수평 방향으로 오른쪽 정렬 */\r\n  align-items: flex-end;\r\n  /* 세로 방향으로 아래쪽에 정렬 */\r\n  padding: 10px;\r\n  /* 패딩 추가 */\r\n  background: rgba(255, 255, 255, 0);\r\n  /* 배경을 완전히 투명하게 설정 */\r\n  z-index: 2;\r\n  /* 이미지 위에 보이게 */\r\n}\r\n\r\n.overlay-content {\r\n  display: flex;\r\n  /* 가로로 나열 */\r\n  justify-content: space-around;\r\n  /* 항목 간격을 균등하게 배치 */\r\n  align-items: center;\r\n  /* 수직 정렬 */\r\n  gap: 20px;\r\n  /* 아이템 간격 */\r\n}\r\n\r\n.overlay-title {\r\n  margin: 0px;\r\n  /* 마진 제거 */\r\n  font-size: 17px;\r\n  /* 폰트 크기 조절 */\r\n  color: white;\r\n  /* 글씨 색을 흰색으로 설정 */\r\n  font-weight: bold;\r\n  /* 글씨를 두껍게 설정 */\r\n}\r\n\r\n.card-group {\r\n  display: flex;\r\n  /* 가로로 나열 */\r\n  width: 100%;\r\n  /* 카드 그룹의 너비를 100%로 설정 */\r\n}\r\n\r\n.info-card {\r\n  width: 150px;\r\n  /* 카드의 너비 설정 */\r\n  height: auto;\r\n  /* 카드의 높이 설정 */\r\n  margin: 0 5px;\r\n  /* 카드 간격 */\r\n  color: white;\r\n  background-color: rgba(255, 255, 255, 0);\r\n}\r\n\r\n\r\n.custom-btn {\r\n  padding: 4px 7px;\r\n  /* 버튼의 상하/좌우 패딩 조정 */\r\n  font-size: 10px;\r\n  /* 버튼의 글씨 크기 조정 */\r\n  border-radius: 20px;\r\n}\r\n\r\n/* 프로필 이미지 스타일 */\r\n.profile-image {\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  object-fit: cover;\r\n  border: 1px solid black; /* 테두리 */\r\n  margin-right: 10px;\r\n}\r\n\r\n.back-button-container {\r\n  text-align: left;\r\n  /* 버튼을 왼쪽에 정렬 */\r\n  margin-top: 10px;\r\n}\r\n\r\n/* 스타일 정의 */\r\n.location-text {\r\n  font-size: 0.70em;\r\n  /* 폰트 크기를 줄입니다 */\r\n  font-weight: 100;\r\n  /* 얇은 글씨 */\r\n  margin: 0;\r\n  padding: 0;\r\n  text-decoration: underline;\r\n  /* 밑줄 추가 */\r\n  color: #555;\r\n  /* 텍스트 색상 조정 (필요 시 수정 가능) */\r\n  text-align: left;\r\n  /* 왼쪽 정렬 */\r\n  margin-left: 2px;\r\n}\r\n\r\n.fixed-button-container {\r\n  position: fixed;\r\n  bottom: 100px; /* 화면 아래쪽 여백 */\r\n  right: 20px; /* 화면 오른쪽 여백 */\r\n  z-index: 1000; /* 다른 요소 위에 표시 */\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 10px; /* 버튼과 다른 요소 간의 간격 */\r\n}\r\n\r\n/* 안전 게시물/모든 게시물 보기 버튼 */\r\n.fixed-button-container .btn {\r\n  background-color: #ffffff;\r\n  border: solid 1px #4caf50; /* 테두리 */\r\n  border-radius: 20px; /* 둥근 버튼 */\r\n  color: #4caf50; /* 텍스트 색상 */\r\n  font-size: 12px; /* 폰트 크기 */\r\n  padding: 5px 10px; /* 패딩 */\r\n  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.2); /* 버튼 그림자 */\r\n  transition: background-color 0.2s ease-in-out, color 0.2s ease-in-out; /* 애니메이션 효과 */\r\n}\r\n\r\n.fixed-button-container .btn:hover {\r\n  background-color: #4caf50; /* hover 시 배경색 */\r\n  color: #ffffff; /* hover 시 텍스트 색상 */\r\n}\r\n\r\n/* 글쓰기 버튼 */\r\n.custom-btn2 {\r\n  background-color: #4caf50; /* 글쓰기 버튼의 배경색 */\r\n  color: white; /* 텍스트 색상 */\r\n  border: solid 1px #4caf50; /* 테두리 */\r\n  border-radius: 50%; /* 둥근 모양 */\r\n  width: 55px; /* 버튼 크기 */\r\n  height: 55px; /* 버튼 크기 */\r\n  padding: 10px; /* 내부 여백 */\r\n  box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.3); /* 그림자 효과 */\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out; /* 애니메이션 효과 */\r\n  cursor: pointer;\r\n}\r\n\r\n.custom-btn2:hover {\r\n  transform: scale(1.1); /* 버튼 크기 확대 효과 */\r\n  box-shadow: 0px 6px 8px rgba(0, 0, 0, 0.5); /* hover 시 그림자 강조 */\r\n}\r\n\r\n/* 글쓰기 아이콘 내부 이미지 */\r\n.custom-btn2 img {\r\n  width: 40px; /* 아이콘 크기 조정 */\r\n  height: auto;\r\n  left: 1px;\r\n}\r\n\r\n#cardContent {\r\n  flex: 1;\r\n  /* 나머지 공간을 모두 차지 */\r\n  font-size: 14px;\r\n  color: #333;\r\n  word-wrap: break-word;\r\n  /* 긴 텍스트가 있을 경우 줄바꿈 */\r\n  text-align: left;\r\n  /* 텍스트를 왼쪽 정렬 */\r\n}\r\n\r\n/* 컨텐츠 영역 스타일 */\r\n.content {\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  padding-top: 0px;\r\n  /* 게시글 내용과 검색창 간 간격 */\r\n  padding-bottom: 70px;\r\n  /* 푸터 공간 확보 */\r\n}\r\n\r\n#my-container{\r\n  margin-bottom: 5px;\r\n  margin-right: 15px;\r\n}\r\n\r\n\r\n.card-text {\r\n  display: -webkit-box;\r\n  -webkit-line-clamp: 1;\r\n  -webkit-box-orient: vertical;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  word-wrap: break-word;\r\n  overflow-wrap: break-word;\r\n  white-space: normal;\r\n  font-size: 14px;\r\n  line-height: 1.6;\r\n  color: #333;\r\n}\r\n\r\n.card-text.expanded {\r\n  display: block;\r\n  white-space: normal;\r\n  overflow: visible;\r\n}\r\n\r\n.show-more-btn {\r\n  background: none;\r\n  font-weight: bold;\r\n  border: none;\r\n  color: #9e9e9e;\r\n  cursor: pointer;\r\n  font-size: 12px;\r\n  margin-top: 2px;\r\n  margin-left: 3px;\r\n}\r\n\r\n.show-more-btn:hover {\r\n  text-decoration: underline;\r\n}\r\n\r\n.date-overlay{\r\n  margin-left:140px;\r\n  font-family: 'TheJamsil4Bold';\r\n  font-size: 14px;\r\n}\r\n\r\n/* 스위치 창 스타일 */\r\n.switch-container {\r\n  position: fixed;\r\n  top: 25px;\r\n  left: 160px;\r\n  z-index: 1100;\r\n  display: flex;\r\n  align-items: center;\r\n  border: solid 1px black;\r\n  border-radius: 50px;\r\n}\r\n\r\n.switch {\r\n  position: relative;\r\n  display: inline-block;\r\n  width: 60px; /* 전체 스위치 너비 */\r\n  height: 24px; /* 전체 스위치 높이 */\r\n}\r\n\r\n.switch input {\r\n  opacity: 0; /* 숨김 */\r\n  width: 0;\r\n  height: 0;\r\n}\r\n\r\n.slider {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-color: #ccc; /* OFF 상태 배경 */\r\n  border-radius: 50px; /* 둥근 모서리 */\r\n  transition: background-color 0.4s; /* 전환 효과 */\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.switch-text {\r\n  font-size: 12px;\r\n  font-weight: bold;\r\n  color: black; /* 기본: 검정 */\r\n  text-transform: uppercase;\r\n  transition: color 0.4s; /* 텍스트 색상 전환 효과 */\r\n}\r\n\r\ninput:checked + .slider {\r\n  background-color: #4caf50; /* ON 상태 배경 */\r\n}\r\n\r\ninput:checked + .slider .switch-text {\r\n  color: white; /* 안전일 때: 흰색 */\r\n}\r\n\r\ninput:not(:checked) + .slider {\r\n  background-color: #fefefe; /* OFF 상태 배경 */\r\n}\r\n\r\ninput:not(:checked) + .slider .switch-text {\r\n  color: black; /* 기본일 때: 검정 */\r\n}\r\n\r\n\r\n\r\n</style>","import script from \"./MobileCommunityView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./MobileCommunityView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./MobileCommunityView.vue?vue&type=style&index=0&id=1ad76004&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-1ad76004\"]])\n\nexport default __exports__"],"names":["gotoHome","window","location","href","gotoMobileCourse","gotoMobileCommunity","gotoMobileComplaint","gotoMobileRecoding","__exports__","communityList","ref","communityMap","searchQuery","courseData","course","communityState","showMap","toggleCommunityState","value","getSafeList","getAllList","async","getList","nextTick","forEach","community","drawCourseOnMap","courseName","communityPk","lat","lng","error","console","response","axios","post","data","map","likes","commentCount","latitude","longitude","filteredCommunityList","computed","filter","communityBody","includes","userNickName","goToWritePost","router","push","path","goToCommunityDetail","query","JSON","stringify","createMap","containerId","startLat","startLng","container","document","getElementById","options","center","kakao","maps","LatLng","level","Map","goToMapDetail","name","mapType","loadCourseData","get","geoJsonData","features","feature","properties","PMNTN_NM","coordinates","geometry","reduce","acc","lineString","concat","coord","log","mapId","resetMap","matchingCourseKey","Object","keys","find","key","linePath","polyline","Polyline","strokeWeight","strokeColor","strokeOpacity","strokeStyle","setMap","getPath","removeOverlayMapTypeId","MapTypeId","POLYLINE","onMounted","script","createElement","onload","load","src","head","appendChild","sort","a","b","Date","communityRegDate","err","Like","userId","localStorage","getItem"],"sourceRoot":""}